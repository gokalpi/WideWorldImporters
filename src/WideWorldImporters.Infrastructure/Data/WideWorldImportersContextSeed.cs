using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using WideWorldImporters.Core.Entities.Application;
using WideWorldImporters.Core.Entities.Puchasing;
using WideWorldImporters.Core.Entities.Sales;
using WideWorldImporters.Core.Entities.Warehouse;

namespace WideWorldImporters.Infrastructure.Data
{
    public class WideWorldImportersContextSeed
    {
        public static async Task SeedAsync(WideWorldImportersContext context, ILoggerFactory loggerFactory, int? retry = 0)
        {
            int retryForAvailability = retry.Value;
            try
            {
                // NOTE : Only run this if using a real database
                context.Database.Migrate();
                context.Database.EnsureCreated();

                #region Seeding Application entities

                await SeedPeopleAsync(context);
                await SeedCountriesAsync(context);
                await SeedStateProvincesAsync(context);
                await SeedCitiesAsync(context);
                await SeedDeliveryMethodsAsync(context);
                await SeedPaymentMethodsAsync(context);
                await SeedSystemParametersAsync(context);
                await SeedTransactionTypesAsync(context);

                #endregion Seeding Application entities

                #region Seeding Purchasing entities

                await SeedSupplierCategoriesAsync(context);
                await SeedSuppliersAsync(context);
                await SeedPurchaseOrdersAsync(context);
                await SeedPurchaseOrderLinesAsync(context);
                await SeedSupplierTransactionsAsync(context);

                #endregion Seeding Purchasing entities

                #region Seeding Sales entities

                await SeedBuyingGroupsAsync(context);
                await SeedCustomerCategoriesAsync(context);
                await SeedCustomersAsync(context);
                await SeedOrdersAsync(context);
                await SeedOrderLinesAsync(context);
                await SeedInvoicesAsync(context);
                await SeedInvoiceLinesAsync(context);
                await SeedCustomerTransactionsAsync(context);
                await SeedSpecialDealsAsync(context);

                #endregion Seeding Sales entities

                #region Seeding Warehouse entities

                await SeedColdRoomTemperaturesAsync(context);
                await SeedColorsAsync(context);
                await SeedPackageTypesAsync(context);
                await SeedStockGroupsAsync(context);
                await SeedStockItemsAsync(context);
                await SeedStockItemHoldingsAsync(context);
                await SeedStockItemStockGroupsAsync(context);
                await SeedStockItemTransactionsAsync(context);
                await SeedVehicleTemperaturesAsync(context);

                #endregion Seeding Warehouse entities
            }
            catch (Exception ex)
            {
                if (retryForAvailability < 10)
                {
                    retryForAvailability++;
                    var log = loggerFactory.CreateLogger<WideWorldImportersContextSeed>();
                    log.LogError(ex.Message);
                    await SeedAsync(context, loggerFactory, retryForAvailability);
                }
                throw;
            }
        }

        #region Sample Application Entities

        private static async Task SeedPeopleAsync(WideWorldImportersContext context)
        {
            if (context.People.Any())
                return;

            var people = new List<Person>()
            {
                new Person { Id = 1, FullName = "Data Conversion Only", PreferredName = "Data Conversion Only", SearchName = "Data Conversion Only Data Conversion Only", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"yy-mm-dd\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 2, FullName = "Kayla Woodcock", PreferredName = "Kayla", SearchName = "Kayla Kayla Woodcock", IsPermittedToLogon = true, LogonName = "kaylaw@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "kaylaw@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Polish\",\"Chinese\",\"Japanese\"] ,\"HireDate\":\"2008-04-19T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"Plains\",\"CommissionRate\":\"0.98\"}", OtherLanguages = "[\"Polish\",\"Chinese\",\"Japanese\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 3, FullName = "Hudson Onslow", PreferredName = "Hudson", SearchName = "Hudson Hudson Onslow", IsPermittedToLogon = true, LogonName = "hudsono@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"DD, MM d, yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "hudsono@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [] ,\"HireDate\":\"2012-03-05T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"New England\",\"CommissionRate\":\"3.62\"}", OtherLanguages = "[]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 4, FullName = "Isabella Rupp", PreferredName = "Isabella", SearchName = "Isabella Isabella Rupp", IsPermittedToLogon = true, LogonName = "isabellar@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "isabellar@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Turkish\",\"Slovenian\"] ,\"HireDate\":\"2010-08-24T00:00:00\",\"Title\":\"Team Member\"}", OtherLanguages = "[\"Turkish\",\"Slovenian\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 5, FullName = "Eva Muirden", PreferredName = "Eva", SearchName = "Eva Eva Muirden", IsPermittedToLogon = false, LogonName = "evam@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "evam@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Lithuanian\"] ,\"HireDate\":\"2012-01-22T00:00:00\",\"Title\":\"Team Member\"}", OtherLanguages = "[\"Lithuanian\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 6, FullName = "Sophia Hinton", PreferredName = "Sophia", SearchName = "Sophia Sophia Hinton", IsPermittedToLogon = true, LogonName = "sophiah@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"black-tie\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "sophiah@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Swedish\"] ,\"HireDate\":\"2007-05-14T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"Southeast\",\"CommissionRate\":\"4.55\"}", OtherLanguages = "[\"Swedish\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 7, FullName = "Amy Trefl", PreferredName = "Amy", SearchName = "Amy Amy Trefl", IsPermittedToLogon = true, LogonName = "amyt@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "amyt@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Slovak\",\"Spanish\",\"Polish\"] ,\"HireDate\":\"2009-02-15T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"Southeast\",\"CommissionRate\":\"0.58\"}", OtherLanguages = "[\"Slovak\",\"Spanish\",\"Polish\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 8, FullName = "Anthony Grosse", PreferredName = "Anthony", SearchName = "Anthony Anthony Grosse", IsPermittedToLogon = true, LogonName = "anthonyg@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "anthonyg@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Croatian\",\"Dutch\",\"Bokmål\"] ,\"HireDate\":\"2010-07-23T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"Mideast\",\"CommissionRate\":\"0.11\"}", OtherLanguages = "[\"Croatian\",\"Dutch\",\"Bokmål\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 9, FullName = "Alica Fatnowna", PreferredName = "Alica", SearchName = "Alica Alica Fatnowna", IsPermittedToLogon = true, LogonName = "alicaf@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "alicaf@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [] ,\"HireDate\":\"2007-12-07T00:00:00\",\"Title\":\"General Manager\"}", OtherLanguages = "[]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 10, FullName = "Stella Rosenhain", PreferredName = "Stella", SearchName = "Stella Stella Rosenhain", IsPermittedToLogon = true, LogonName = "stellar@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "stellar@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Dutch\",\"Finnish\",\"Lithuanian\"] ,\"HireDate\":\"2007-11-17T00:00:00\",\"Title\":\"Warehouse Supervisor\"}", OtherLanguages = "[\"Dutch\",\"Finnish\",\"Lithuanian\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 11, FullName = "Ethan Onslow", PreferredName = "Ethan", SearchName = "Ethan Ethan Onslow", IsPermittedToLogon = true, LogonName = "ethano@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"yy-mm-dd\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "ethano@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [] ,\"HireDate\":\"2011-12-17T00:00:00\",\"Title\":\"Warehouse Supervisor\"}", OtherLanguages = "[]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 12, FullName = "Henry Forlonge", PreferredName = "Henry", SearchName = "Henry Henry Forlonge", IsPermittedToLogon = true, LogonName = "henryf@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "henryf@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Greek\",\"Slovak\"] ,\"HireDate\":\"2009-03-18T00:00:00\",\"Title\":\"Team Member\"}", OtherLanguages = "[\"Greek\",\"Slovak\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 13, FullName = "Hudson Hollinworth", PreferredName = "Hudson", SearchName = "Hudson Hudson Hollinworth", IsPermittedToLogon = true, LogonName = "hudsonh@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"black-tie\",\"dateFormat\":\"DD, MM d, yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "hudsonh@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Croatian\"] ,\"HireDate\":\"2010-11-27T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"New England\",\"CommissionRate\":\"0.24\"}", OtherLanguages = "[\"Croatian\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 14, FullName = "Lily Code", PreferredName = "Lily", SearchName = "Lily Lily Code", IsPermittedToLogon = true, LogonName = "lilyc@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "lilyc@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Finnish\",\"Bulgarian\"] ,\"HireDate\":\"2010-06-06T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"Southeast\",\"CommissionRate\":\"3.98\"}", OtherLanguages = "[\"Finnish\",\"Bulgarian\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 15, FullName = "Taj Shand", PreferredName = "Taj", SearchName = "Taj Taj Shand", IsPermittedToLogon = true, LogonName = "tajs@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "tajs@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Arabic\",\"Greek\"] ,\"HireDate\":\"2009-03-14T00:00:00\",\"Title\":\"Manager\",\"PrimarySalesTerritory\":\"Far West\",\"CommissionRate\":\"2.29\"}", OtherLanguages = "[\"Arabic\",\"Greek\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 16, FullName = "Archer Lamble", PreferredName = "Archer", SearchName = "Archer Archer Lamble", IsPermittedToLogon = false, LogonName = "archerl@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "archerl@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Greek\"] ,\"HireDate\":\"2009-05-13T00:00:00\",\"Title\":\"Team Member\",\"PrimarySalesTerritory\":\"Plains\",\"CommissionRate\":\"1.88\"}", OtherLanguages = "[\"Greek\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 17, FullName = "Piper Koch", PreferredName = "Piper", SearchName = "Piper Piper Koch", IsPermittedToLogon = true, LogonName = "piperk@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "piperk@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Romanian\",\"Portuguese\"] ,\"HireDate\":\"2011-10-15T00:00:00\",\"Title\":\"Manager\"}", OtherLanguages = "[\"Romanian\",\"Portuguese\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 18, FullName = "Katie Darwin", PreferredName = "Katie", SearchName = "Katie Katie Darwin", IsPermittedToLogon = true, LogonName = "katied@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "katied@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Estonian\",\"Romanian\"] ,\"HireDate\":\"2008-07-12T00:00:00\",\"Title\":\"Team Member\"}", OtherLanguages = "[\"Estonian\",\"Romanian\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 19, FullName = "Jai Shand", PreferredName = "Jai", SearchName = "Jai Jai Shand", IsPermittedToLogon = true, LogonName = "jais@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "jais@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Finnish\",\"Dutch\"] ,\"HireDate\":\"2011-11-13T00:00:00\",\"Title\":\"Team Member\"}", OtherLanguages = "[\"Finnish\",\"Dutch\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 20, FullName = "Jack Potter", PreferredName = "Jack", SearchName = "Jack Jack Potter", IsPermittedToLogon = true, LogonName = "jackp@wideworldimporters.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = true, IsSalesperson = true, UserPreferences = "{\"theme\":\"black-tie\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0102", FaxNumber = "(415) 555-0103", EmailAddress = "jackp@wideworldimporters.com", CustomFields = "{ \"OtherLanguages\": [\"Arabic\"] ,\"HireDate\":\"2009-05-29T00:00:00\",\"Title\":\"General Manager\",\"PrimarySalesTerritory\":\"Southeast\",\"CommissionRate\":\"3.97\"}", OtherLanguages = "[\"Arabic\"]", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 21, FullName = "Reio Kabin", PreferredName = "Reio", SearchName = "Reio Reio Kabin", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"yy-mm-dd\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(847) 555-0100", FaxNumber = "(847) 555-0101", EmailAddress = "reio@adatum.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 22, FullName = "Oliver Kivi", PreferredName = "Olly", SearchName = "Olly Oliver Kivi", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(847) 555-0100", FaxNumber = "(847) 555-0101", EmailAddress = "olly@adatum.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 23, FullName = "Hanna Mihhailov", PreferredName = "Hanna", SearchName = "Hanna Hanna Mihhailov", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"DD, MM d, yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(360) 555-0100", FaxNumber = "(360) 555-0101", EmailAddress = "hannam@contoso.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 24, FullName = "Paulus Lippmaa", PreferredName = "Paulus", SearchName = "Paulus Paulus Lippmaa", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(360) 555-0100", FaxNumber = "(360) 555-0101", EmailAddress = "paulusl@contoso.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 25, FullName = "Kerstin Parn", PreferredName = "Kerstin", SearchName = "Kerstin Kerstin Parn", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0100", FaxNumber = "(415) 555-0101", EmailAddress = "kerstin@consolidatedmessenger.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 26, FullName = "Helen Ahven", PreferredName = "Helen", SearchName = "Helen Helen Ahven", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0100", FaxNumber = "(415) 555-0101", EmailAddress = "helen@consolidatedmessenger.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 27, FullName = "Bill Lawson", PreferredName = "Bill", SearchName = "Bill Bill Lawson", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"black-tie\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(203) 555-0107", FaxNumber = "(203) 555-0107", EmailAddress = "billl@fabrikam.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 28, FullName = "Helen Moore", PreferredName = "Helen", SearchName = "Helen Helen Moore", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(203) 555-0104", FaxNumber = "(203) 555-0107", EmailAddress = "helenm@fabrikam.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 29, FullName = "Penny Buck", PreferredName = "Penny", SearchName = "Penny Penny Buck", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(406) 555-0107", FaxNumber = "(406) 555-0109", EmailAddress = "pennyb@graphicdesigninstitute.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 30, FullName = "Donna Smith", PreferredName = "Donna", SearchName = "Donna Donna Smith", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(406) 555-0101", FaxNumber = "(406) 555-0109", EmailAddress = "donnas@graphicdesigninstitute.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 31, FullName = "Madelaine  Cartier", PreferredName = "Madelaine", SearchName = "Madelaine Madelaine  Cartier", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"yy-mm-dd\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(423) 555-0101", FaxNumber = "(423) 555-0100", EmailAddress = "madelainec@humongousinsurance.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 32, FullName = "Annette Talon", PreferredName = "Annette", SearchName = "Annette Annette Talon", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(423) 555-0106", FaxNumber = "(423) 555-0100", EmailAddress = "annettet@humongousinsurance.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 33, FullName = "Elias Myllari", PreferredName = "Elias", SearchName = "Elias Elias Myllari", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"DD, MM d, yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(209) 555-0101", FaxNumber = "(209) 555-0106", EmailAddress = "eliasm@litwareinc.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 34, FullName = "Vilma Niva", PreferredName = "Vilma", SearchName = "Vilma Vilma Niva", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"black-tie\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(209) 555-0103", FaxNumber = "(209) 555-0106", EmailAddress = "vilman@litwareinc.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 35, FullName = "Prem Prabhu", PreferredName = "Prem", SearchName = "Prem Prem Prabhu", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(423) 555-0102", FaxNumber = "(423) 555-0108", EmailAddress = "premp@lucernepublishing.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 36, FullName = "Sunita Jadhav", PreferredName = "Sunita", SearchName = "Sunita Sunita Jadhav", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(423) 555-0101", FaxNumber = "(423) 555-0108", EmailAddress = "sunitaj@lucernepublishing.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 37, FullName = "Marcos Costa", PreferredName = "Marcos", SearchName = "Marcos Marcos Costa", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(252) 555-0106", FaxNumber = "(252) 555-0101", EmailAddress = "marcosc@nodpublishers.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 38, FullName = "Matheus Oliveira", PreferredName = "Matheus", SearchName = "Matheus Matheus Oliveira", IsPermittedToLogon = true, LogonName = "matheuso@nodpublishers.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(252) 555-0107", FaxNumber = "(252) 555-0101", EmailAddress = "matheuso@nodpublishers.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 39, FullName = "Eliza Soderberg", PreferredName = "Eliza", SearchName = "Eliza Eliza Soderberg", IsPermittedToLogon = true, LogonName = "elizas@northwindelectriccars.com", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(201) 555-0101", FaxNumber = "(201) 555-0106", EmailAddress = "elizas@northwindelectriccars.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 40, FullName = "Sara Karlsson", PreferredName = "Sara", SearchName = "Sara Sara Karlsson", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(201) 555-0100", FaxNumber = "(201) 555-0106", EmailAddress = "sarak@northwindelectriccars.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 41, FullName = "Donald Jones", PreferredName = "Donald", SearchName = "Donald Donald Jones", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"black-tie\",\"dateFormat\":\"yy-mm-dd\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(605) 555-0101", FaxNumber = "(605) 555-0101", EmailAddress = "donaldj@treyresearch.net", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 42, FullName = "Sharon Graham", PreferredName = "Sharon", SearchName = "Sharon Sharon Graham", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full\",\"pageLength\": 50},\"favoritesOnDashboard\":true}", PhoneNumber = "(605) 555-0106", FaxNumber = "(605) 555-0101", EmailAddress = "sharong@treyresearch.net", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 43, FullName = "Hai Dam", PreferredName = "Hai", SearchName = "Hai Hai Dam", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"blitzer\",\"dateFormat\":\"DD, MM d, yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(218) 555-0101", FaxNumber = "(218) 555-0108", EmailAddress = "haid@thephone-company.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 44, FullName = "Thanh Dinh", PreferredName = "Thanh", SearchName = "Thanh Thanh Dinh", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"humanity\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(218) 555-0104", FaxNumber = "(218) 555-0108", EmailAddress = "thanhd@thephone-company.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 45, FullName = "Hubert Helms", PreferredName = "Hubert", SearchName = "Hubert Hubert Helms", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"dark-hive\",\"dateFormat\":\"dd/mm/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0103", FaxNumber = "(415) 555-0104", EmailAddress = "huberth@woodgrovebank.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 46, FullName = "Donald Small", PreferredName = "Donald", SearchName = "Donald Donald Small", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = true, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(415) 555-0105", FaxNumber = "(415) 555-0104", EmailAddress = "donalds@woodgrovebank.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1001, FullName = "Waldemar Fisar", PreferredName = "Waldemar", SearchName = "Waldemar Waldemar Fisar", IsPermittedToLogon = true, LogonName = "waldemar@tailspintoys.com", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"ui-darkness\",\"dateFormat\":\"yy-mm-dd\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"full_numbers\",\"pageLength\": 25},\"favoritesOnDashboard\":true}", PhoneNumber = "(308) 555-0100", FaxNumber = "(308) 555-0101", EmailAddress = "waldemar@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1002, FullName = "Laimonis Berzins", PreferredName = "Laimonis", SearchName = "Laimonis Laimonis Berzins", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(308) 555-0100", FaxNumber = "(308) 555-0101", EmailAddress = "laimonis@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1003, FullName = "Lorena Cindric", PreferredName = "Lorena", SearchName = "Lorena Lorena Cindric", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(406) 555-0100", FaxNumber = "(406) 555-0101", EmailAddress = "lorena@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1004, FullName = "Hung Van Groesen", PreferredName = "Hung", SearchName = "Hung Hung Van Groesen", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(406) 555-0100", FaxNumber = "(406) 555-0101", EmailAddress = "hung@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1005, FullName = "Bhaargav Rambhatla", PreferredName = "Bhaargav", SearchName = "Bhaargav Bhaargav Rambhatla", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(480) 555-0100", FaxNumber = "(480) 555-0101", EmailAddress = "bhaargav@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1006, FullName = "Mudar Jevtic", PreferredName = "Mudar", SearchName = "Mudar Mudar Jevtic", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(480) 555-0100", FaxNumber = "(480) 555-0101", EmailAddress = "mudar@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1007, FullName = "Daniel Roman", PreferredName = "Daniel", SearchName = "Daniel Daniel Roman", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(316) 555-0100", FaxNumber = "(316) 555-0101", EmailAddress = "daniel@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1008, FullName = "Leyla Radnia", PreferredName = "Leyla", SearchName = "Leyla Leyla Radnia", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(316) 555-0100", FaxNumber = "(316) 555-0101", EmailAddress = "leyla@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1009, FullName = "Johanna Huiting", PreferredName = "Johanna", SearchName = "Johanna Johanna Huiting", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(212) 555-0100", FaxNumber = "(212) 555-0101", EmailAddress = "johanna@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1010, FullName = "Robert Ruutli", PreferredName = "Robert", SearchName = "Robert Robert Ruutli", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(212) 555-0100", FaxNumber = "(212) 555-0101", EmailAddress = "robert@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1011, FullName = "Biswajeet Thakur", PreferredName = "Biswajeet", SearchName = "Biswajeet Biswajeet Thakur", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(701) 555-0100", FaxNumber = "(701) 555-0101", EmailAddress = "biswajeet@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1012, FullName = "Radha Shah", PreferredName = "Radha", SearchName = "Radha Radha Shah", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(701) 555-0100", FaxNumber = "(701) 555-0101", EmailAddress = "radha@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1013, FullName = "Kalidas Nadar", PreferredName = "Kalidas", SearchName = "Kalidas Kalidas Nadar", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(423) 555-0100", FaxNumber = "(423) 555-0101", EmailAddress = "kalidas@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1014, FullName = "Filip Nedvidek", PreferredName = "Filip", SearchName = "Filip Filip Nedvidek", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(423) 555-0100", FaxNumber = "(423) 555-0101", EmailAddress = "filip@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1015, FullName = "Kanti Kotadia", PreferredName = "Kanti", SearchName = "Kanti Kanti Kotadia", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(303) 555-0100", FaxNumber = "(303) 555-0101", EmailAddress = "kanti@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1016, FullName = "Hoa Cu", PreferredName = "Hoa", SearchName = "Hoa Hoa Cu", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(303) 555-0100", FaxNumber = "(303) 555-0101", EmailAddress = "hoa@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1017, FullName = "Sointu Aalto", PreferredName = "Sointu", SearchName = "Sointu Sointu Aalto", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(201) 555-0100", FaxNumber = "(201) 555-0101", EmailAddress = "sointu@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1018, FullName = "Jae-Gon Min", PreferredName = "Jae-Gon", SearchName = "Jae-Gon Jae-Gon Min", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(201) 555-0100", FaxNumber = "(201) 555-0101", EmailAddress = "jae-gon@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1019, FullName = "Siddhartha Parkar", PreferredName = "Siddhartha", SearchName = "Siddhartha Siddhartha Parkar", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(701) 555-0100", FaxNumber = "(701) 555-0101", EmailAddress = "siddhartha@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1020, FullName = "Paula Matos", PreferredName = "Paula", SearchName = "Paula Paula Matos", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(701) 555-0100", FaxNumber = "(701) 555-0101", EmailAddress = "paula@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1021, FullName = "Elnaz Javan", PreferredName = "Elnaz", SearchName = "Elnaz Elnaz Javan", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(215) 555-0100", FaxNumber = "(215) 555-0101", EmailAddress = "elnaz@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1022, FullName = "Jayashish Ghatak", PreferredName = "Jayashish", SearchName = "Jayashish Jayashish Ghatak", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(215) 555-0100", FaxNumber = "(215) 555-0101", EmailAddress = "jayashish@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1023, FullName = "Heloisa Fernandes", PreferredName = "Heloisa", SearchName = "Heloisa Heloisa Fernandes", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(218) 555-0100", FaxNumber = "(218) 555-0101", EmailAddress = "heloisa@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1024, FullName = "Amornrat Rattanaporn", PreferredName = "Amornrat", SearchName = "Amornrat Amornrat Rattanaporn", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(218) 555-0100", FaxNumber = "(218) 555-0101", EmailAddress = "amornrat@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1025, FullName = "Razeena Hosseini", PreferredName = "Razeena", SearchName = "Razeena Razeena Hosseini", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(217) 555-0100", FaxNumber = "(217) 555-0101", EmailAddress = "razeena@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1026, FullName = "Leticia Ribeiro", PreferredName = "Leticia", SearchName = "Leticia Leticia Ribeiro", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(217) 555-0100", FaxNumber = "(217) 555-0101", EmailAddress = "leticia@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1027, FullName = "Tereza Valentova", PreferredName = "Tereza", SearchName = "Tereza Tereza Valentova", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(240) 555-0100", FaxNumber = "(240) 555-0101", EmailAddress = "tereza@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1028, FullName = "Brijesh Ganguly", PreferredName = "Brijesh", SearchName = "Brijesh Brijesh Ganguly", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(240) 555-0100", FaxNumber = "(240) 555-0101", EmailAddress = "brijesh@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1029, FullName = "Filips Jaunzems", PreferredName = "Filips", SearchName = "Filips Filips Jaunzems", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(210) 555-0100", FaxNumber = "(210) 555-0101", EmailAddress = "filips@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1030, FullName = "Bharati Bhowmick", PreferredName = "Bharati", SearchName = "Bharati Bharati Bhowmick", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(210) 555-0100", FaxNumber = "(210) 555-0101", EmailAddress = "bharati@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1031, FullName = "Nitin Matondkar", PreferredName = "Nitin", SearchName = "Nitin Nitin Matondkar", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(314) 555-0100", FaxNumber = "(314) 555-0101", EmailAddress = "nitin@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1032, FullName = "Joy Dutta", PreferredName = "Joy", SearchName = "Joy Joy Dutta", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(314) 555-0100", FaxNumber = "(314) 555-0101", EmailAddress = "joy@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1033, FullName = "Adam Kubat", PreferredName = "Adam", SearchName = "Adam Adam Kubat", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(216) 555-0100", FaxNumber = "(216) 555-0101", EmailAddress = "adam@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1034, FullName = "Gulzar Naidu", PreferredName = "Gulzar", SearchName = "Gulzar Gulzar Naidu", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(216) 555-0100", FaxNumber = "(216) 555-0101", EmailAddress = "gulzar@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1035, FullName = "Isabelle Vodlan", PreferredName = "Isabelle", SearchName = "Isabelle Isabelle Vodlan", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(603) 555-0100", FaxNumber = "(603) 555-0101", EmailAddress = "isabelle@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1036, FullName = "Prakash Sarma", PreferredName = "Prakash", SearchName = "Prakash Prakash Sarma", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(603) 555-0100", FaxNumber = "(603) 555-0101", EmailAddress = "prakash@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1037, FullName = "Mithun Bhattacharya", PreferredName = "Mithun", SearchName = "Mithun Mithun Bhattacharya", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(907) 555-0100", FaxNumber = "(907) 555-0101", EmailAddress = "mithun@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1038, FullName = "Sandhya Raju", PreferredName = "Sandhya", SearchName = "Sandhya Sandhya Raju", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(907) 555-0100", FaxNumber = "(907) 555-0101", EmailAddress = "sandhya@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1039, FullName = "Nghi Hua", PreferredName = "Nghi", SearchName = "Nghi Nghi Hua", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(206) 555-0100", FaxNumber = "(206) 555-0101", EmailAddress = "nghi@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1040, FullName = "Ravindra Parkar", PreferredName = "Ravindra", SearchName = "Ravindra Ravindra Parkar", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(206) 555-0100", FaxNumber = "(206) 555-0101", EmailAddress = "ravindra@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1041, FullName = "Duleep Raju", PreferredName = "Duleep", SearchName = "Duleep Duleep Raju", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(215) 555-0100", FaxNumber = "(215) 555-0101", EmailAddress = "duleep@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1042, FullName = "Vlatka Duvnjak", PreferredName = "Vlatka", SearchName = "Vlatka Vlatka Duvnjak", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(215) 555-0100", FaxNumber = "(215) 555-0101", EmailAddress = "vlatka@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1043, FullName = "Cristina Longo", PreferredName = "Cristina", SearchName = "Cristina Cristina Longo", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(239) 555-0100", FaxNumber = "(239) 555-0101", EmailAddress = "cristina@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1044, FullName = "Antonio Lucchese", PreferredName = "Antonio", SearchName = "Antonio Antonio Lucchese", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(239) 555-0100", FaxNumber = "(239) 555-0101", EmailAddress = "antonio@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1045, FullName = "Hang Tang", PreferredName = "Hang", SearchName = "Hang Hang Tang", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(907) 555-0100", FaxNumber = "(907) 555-0101", EmailAddress = "hang@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1046, FullName = "Hong Ang", PreferredName = "Hong", SearchName = "Hong Hong Ang", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(907) 555-0100", FaxNumber = "(907) 555-0101", EmailAddress = "hong@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1047, FullName = "Intira Mookjai", PreferredName = "Intira", SearchName = "Intira Intira Mookjai", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(252) 555-0100", FaxNumber = "(252) 555-0101", EmailAddress = "intira@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1048, FullName = "Young-Tae Kim", PreferredName = "Young-Tae", SearchName = "Young-Tae Young-Tae Kim", IsPermittedToLogon = true, LogonName = "young-tae@tailspintoys.com", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, UserPreferences = "{\"theme\":\"le-frog\",\"dateFormat\":\"mm/dd/yy\",\"timeZone\": \"PST\",\"table\":{\"pagingType\":\"simple_numbers\",\"pageLength\": 10},\"favoritesOnDashboard\":true}", PhoneNumber = "(252) 555-0100", FaxNumber = "(252) 555-0101", EmailAddress = "young-tae@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:14:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1049, FullName = "Sulabha Khalsa", PreferredName = "Sulabha", SearchName = "Sulabha Sulabha Khalsa", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(209) 555-0100", FaxNumber = "(209) 555-0101", EmailAddress = "sulabha@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1050, FullName = "Alessandro Milano", PreferredName = "Alessandro", SearchName = "Alessandro Alessandro Milano", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(209) 555-0100", FaxNumber = "(209) 555-0101", EmailAddress = "alessandro@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1051, FullName = "Dhanishta Majji", PreferredName = "Dhanishta", SearchName = "Dhanishta Dhanishta Majji", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(319) 555-0100", FaxNumber = "(319) 555-0101", EmailAddress = "dhanishta@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1052, FullName = "Nils Podnieks", PreferredName = "Nils", SearchName = "Nils Nils Podnieks", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(319) 555-0100", FaxNumber = "(319) 555-0101", EmailAddress = "nils@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1053, FullName = "Paula Gonzales", PreferredName = "Paula", SearchName = "Paula Paula Gonzales", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(218) 555-0100", FaxNumber = "(218) 555-0101", EmailAddress = "paula@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Person { Id = 1054, FullName = "Chetana Dewangan", PreferredName = "Chetana", SearchName = "Chetana Chetana Dewangan", IsPermittedToLogon = false, LogonName = "NO LOGON", IsExternalLogonProvider = false, IsSystemUser = false, IsEmployee = false, IsSalesperson = false, PhoneNumber = "(218) 555-0100", FaxNumber = "(218) 555-0101", EmailAddress = "chetana@tailspintoys.com", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.People.AddRange(people);
            await context.SaveChangesAsync();
        }

        private static async Task SeedCountriesAsync(WideWorldImportersContext context)
        {
            if (context.Countries.Any())
                return;

            var countries = new List<Country>()
            {
                new Country() { Id = 222, CountryName = "Turkey", FormalName = "Republic of Turkey", IsoAlpha3Code = "TUR", IsoNumericCode = 792, CountryType = "UN Member State", LatestRecordedPopulation = 76805524, Continent = "Asia", Region = "Asia", Subregion = "Western Asia", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Country() { Id = 229, CountryName = "United Kingdom", FormalName = "United Kingdom of Great Britain and Northern Ireland", IsoAlpha3Code = "GBR", IsoNumericCode = 826, CountryType = "UN Member State", LatestRecordedPopulation = 62262000, Continent = "Europe", Region = "Europe", Subregion = "Northern Europe", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Country() { Id = 230, CountryName = "United States", FormalName = "United States of America", IsoAlpha3Code = "USA", IsoNumericCode = 840, CountryType = "UN Member State", LatestRecordedPopulation = 313973000, Continent = "North America", Region = "Americas", Subregion = "Northern America" }
            };

            context.Countries.AddRange(countries);
            await context.SaveChangesAsync();
        }

        private static async Task SeedStateProvincesAsync(WideWorldImportersContext context)
        {
            if (context.StateProvinces.Any())
                return;

            var stateProvinces = new List<StateProvince>()
            {
                new StateProvince() { Id = 1, StateProvinceCode = "AL", StateProvinceName = "Alabama", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 5437278, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 2, StateProvinceCode = "AK", StateProvinceName = "Alaska", CountryId = 230, SalesTerritory = "Far West", LatestRecordedPopulation = 735132, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 3, StateProvinceCode = "AZ", StateProvinceName = "Arizona", CountryId = 230, SalesTerritory = "Southwest", LatestRecordedPopulation = 6891688, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 4, StateProvinceCode = "AR", StateProvinceName = "Arkansas", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 3077747, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 5, StateProvinceCode = "CA", StateProvinceName = "California", CountryId = 230, SalesTerritory = "Far West", LatestRecordedPopulation = 41460453, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 6, StateProvinceCode = "CO", StateProvinceName = "Colorado", CountryId = 230, SalesTerritory = "Rocky Mountain", LatestRecordedPopulation = 5698265, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 7, StateProvinceCode = "CT", StateProvinceName = "Connecticut", CountryId = 230, SalesTerritory = "New England", LatestRecordedPopulation = 3739923, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 8, StateProvinceCode = "DE", StateProvinceName = "Delaware", CountryId = 230, SalesTerritory = "Mideast", LatestRecordedPopulation = 1001289, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 9, StateProvinceCode = "DC", StateProvinceName = "District of Columbia", CountryId = 230, SalesTerritory = "Mideast", LatestRecordedPopulation = 685248, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 10, StateProvinceCode = "FL", StateProvinceName = "Florida", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 21148372, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 11, StateProvinceCode = "GA", StateProvinceName = "Georgia", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 9992167, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:02:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 12, StateProvinceCode = "HI", StateProvinceName = "Hawaii", CountryId = 230, SalesTerritory = "Far West", LatestRecordedPopulation = 1404054, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:01:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 13, StateProvinceCode = "ID", StateProvinceName = "Idaho", CountryId = 230, SalesTerritory = "Rocky Mountain", LatestRecordedPopulation = 1612136, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:01:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 14, StateProvinceCode = "IL", StateProvinceName = "Illinois", CountryId = 230, SalesTerritory = "Great Lakes", LatestRecordedPopulation = 13397420, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 15, StateProvinceCode = "IN", StateProvinceName = "Indiana", CountryId = 230, SalesTerritory = "Great Lakes", LatestRecordedPopulation = 6570902, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:02:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 16, StateProvinceCode = "IA", StateProvinceName = "Iowa", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 3214032, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 17, StateProvinceCode = "KS", StateProvinceName = "Kansas", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 2893957, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:04:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 18, StateProvinceCode = "KY", StateProvinceName = "Kentucky", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 4571106, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 19, StateProvinceCode = "LA", StateProvinceName = "Louisiana", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 4810488, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 20, StateProvinceCode = "ME", StateProvinceName = "Maine", CountryId = 230, SalesTerritory = "New England", LatestRecordedPopulation = 1381434, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 21, StateProvinceCode = "MD", StateProvinceName = "Maryland", CountryId = 230, SalesTerritory = "Mideast", LatestRecordedPopulation = 5928814, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:04:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 22, StateProvinceCode = "MA", StateProvinceName = "Massachusetts[E]", CountryId = 230, SalesTerritory = "New England", LatestRecordedPopulation = 6960536, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 23, StateProvinceCode = "MI", StateProvinceName = "Michigan", CountryId = 230, SalesTerritory = "Great Lakes", LatestRecordedPopulation = 9895622, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:01:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 24, StateProvinceCode = "MN", StateProvinceName = "Minnesota", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 5637195, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 25, StateProvinceCode = "MS", StateProvinceName = "Mississippi", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 2991207, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:04:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 26, StateProvinceCode = "MO", StateProvinceName = "Missouri", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 6262867, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 27, StateProvinceCode = "MT", StateProvinceName = "Montana", CountryId = 230, SalesTerritory = "Rocky Mountain", LatestRecordedPopulation = 1187597, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 28, StateProvinceCode = "NE", StateProvinceName = "Nebraska", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 1943256, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 29, StateProvinceCode = "NV", StateProvinceName = "Nevada", CountryId = 230, SalesTerritory = "Far West", LatestRecordedPopulation = 2790136, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:03:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 30, StateProvinceCode = "NH", StateProvinceName = "New Hampshire", CountryId = 230, SalesTerritory = "New England", LatestRecordedPopulation = 1376397, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 31, StateProvinceCode = "NJ", StateProvinceName = "New Jersey", CountryId = 230, SalesTerritory = "Mideast", LatestRecordedPopulation = 8899339, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:02:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 32, StateProvinceCode = "NM", StateProvinceName = "New Mexico", CountryId = 230, SalesTerritory = "Southwest", LatestRecordedPopulation = 2345662, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 33, StateProvinceCode = "NY", StateProvinceName = "New York", CountryId = 230, SalesTerritory = "Mideast", LatestRecordedPopulation = 20437172, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 34, StateProvinceCode = "NC", StateProvinceName = "North Carolina", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 10241982, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 35, StateProvinceCode = "ND", StateProvinceName = "North Dakota", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 723393, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:02:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 36, StateProvinceCode = "OH", StateProvinceName = "Ohio", CountryId = 230, SalesTerritory = "Great Lakes", LatestRecordedPopulation = 12514985, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 37, StateProvinceCode = "OK", StateProvinceName = "Oklahoma", CountryId = 230, SalesTerritory = "Southwest", LatestRecordedPopulation = 3850568, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:01:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 38, StateProvinceCode = "OR", StateProvinceName = "Oregon", CountryId = 230, SalesTerritory = "Far West", LatestRecordedPopulation = 4250757, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 39, StateProvinceCode = "PA", StateProvinceName = "Pennsylvania", CountryId = 230, SalesTerritory = "Mideast", LatestRecordedPopulation = 13284753, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 40, StateProvinceCode = "PR", StateProvinceName = "Puerto Rico (US Territory)", CountryId = 230, SalesTerritory = "External", LatestRecordedPopulation = 3613149, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 41, StateProvinceCode = "RI", StateProvinceName = "Rhode Island", CountryId = 230, SalesTerritory = "New England", LatestRecordedPopulation = 1051511, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:04:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 42, StateProvinceCode = "SC", StateProvinceName = "South Carolina", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 4774839, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:03:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 43, StateProvinceCode = "SD", StateProvinceName = "South Dakota", CountryId = 230, SalesTerritory = "Plains", LatestRecordedPopulation = 844877, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:04:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 44, StateProvinceCode = "TN", StateProvinceName = "Tennessee", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 6495978, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 45, StateProvinceCode = "TX", StateProvinceName = "Texas", CountryId = 230, SalesTerritory = "Southwest", LatestRecordedPopulation = 27506120, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 46, StateProvinceCode = "UT", StateProvinceName = "Utah", CountryId = 230, SalesTerritory = "Rocky Mountain", LatestRecordedPopulation = 3016906, LastEditedBy = 8, ValidFrom = DateTime.Parse("2014-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 47, StateProvinceCode = "VT", StateProvinceName = "Vermont", CountryId = 230, SalesTerritory = "New England", LatestRecordedPopulation = 677762, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 48, StateProvinceCode = "VI", StateProvinceName = "Virgin Islands (US Territory)", CountryId = 230, SalesTerritory = "External", LatestRecordedPopulation = 104737, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 49, StateProvinceCode = "VA", StateProvinceName = "Virginia", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 8260405, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:03:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 50, StateProvinceCode = "WA", StateProvinceName = "Washington", CountryId = 230, SalesTerritory = "Far West", LatestRecordedPopulation = 7540272, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 51, StateProvinceCode = "WV", StateProvinceName = "West Virginia", CountryId = 230, SalesTerritory = "Southeast", LatestRecordedPopulation = 2085839, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 52, StateProvinceCode = "WI", StateProvinceName = "Wisconsin", CountryId = 230, SalesTerritory = "Great Lakes", LatestRecordedPopulation = 6211317, LastEditedBy = 15, ValidFrom = DateTime.Parse("2015-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StateProvince() { Id = 53, StateProvinceCode = "WY", StateProvinceName = "Wyoming", CountryId = 230, SalesTerritory = "Rocky Mountain", LatestRecordedPopulation = 605964, LastEditedBy = 20, ValidFrom = DateTime.Parse("2013-07-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
            };

            context.StateProvinces.AddRange(stateProvinces);
            await context.SaveChangesAsync();
        }

        private static async Task SeedCitiesAsync(WideWorldImportersContext context)
        {
            if (context.Cities.Any())
                return;

            var Cities = new List<City>()
            {
                new City() { Id = 351, CityName = "Albuquerque", StateProvinceId = 32, LatestRecordedPopulation = 545852, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 1435, CityName = "Atlanta", StateProvinceId = 11, LatestRecordedPopulation = 420003, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 1572, CityName = "Austin", StateProvinceId = 45, LatestRecordedPopulation = 790390, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 1604, CityName = "Avenal", StateProvinceId = 5, LatestRecordedPopulation = 15505, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 1850, CityName = "Baltimore", StateProvinceId = 21, LatestRecordedPopulation = 620961, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 2111, CityName = "Batson", StateProvinceId = 45, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 3081, CityName = "Biscay", StateProvinceId = 24, LatestRecordedPopulation = 113, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 3617, CityName = "Boston", StateProvinceId = 22, LatestRecordedPopulation = 617594, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 3673, CityName = "Bow Mar", StateProvinceId = 6, LatestRecordedPopulation = 866, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 3707, CityName = "Bowlus", StateProvinceId = 24, LatestRecordedPopulation = 290, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 4224, CityName = "Brooklyn", StateProvinceId = 33, LatestRecordedPopulation = 2565635, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 6090, CityName = "Charlotte", StateProvinceId = 34, LatestRecordedPopulation = 731424, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 6330, CityName = "Chicago", StateProvinceId = 14, LatestRecordedPopulation = 2695598, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 6796, CityName = "Cleveland", StateProvinceId = 36, LatestRecordedPopulation = 396815, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 7160, CityName = "College Place", StateProvinceId = 50, LatestRecordedPopulation = 8765, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 7235, CityName = "Colorado Springs", StateProvinceId = 6, LatestRecordedPopulation = 416427, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 7294, CityName = "Columbus", StateProvinceId = 36, LatestRecordedPopulation = 787033, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 7409, CityName = "Coney Island", StateProvinceId = 26, LatestRecordedPopulation = 75, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 7899, CityName = "Crandon Lakes", StateProvinceId = 31, LatestRecordedPopulation = 1178, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 8377, CityName = "Dallas", StateProvinceId = 45, LatestRecordedPopulation = 1197816, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 8913, CityName = "Denver", StateProvinceId = 6, LatestRecordedPopulation = 600158, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 8978, CityName = "Detroit", StateProvinceId = 23, LatestRecordedPopulation = 713777, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 8987, CityName = "Devault", StateProvinceId = 39, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 9524, CityName = "Dundarrach", StateProvinceId = 34, LatestRecordedPopulation = 41, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 9791, CityName = "East Fultonham", StateProvinceId = 36, LatestRecordedPopulation = 335, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 10222, CityName = "El Paso", StateProvinceId = 45, LatestRecordedPopulation = 649121, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 10346, CityName = "Elizabeth City", StateProvinceId = 34, LatestRecordedPopulation = 18683, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 12029, CityName = "Fort Worth", StateProvinceId = 45, LatestRecordedPopulation = 741206, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 12152, CityName = "Frankewing", StateProvinceId = 44, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 12351, CityName = "Fresno", StateProvinceId = 5, LatestRecordedPopulation = 494665, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 12748, CityName = "Gasport", StateProvinceId = 33, LatestRecordedPopulation = 1248, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 13304, CityName = "Goffstown", StateProvinceId = 30, LatestRecordedPopulation = 3196, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 13870, CityName = "Greenbank", StateProvinceId = 50, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 15102, CityName = "Hedrick", StateProvinceId = 16, LatestRecordedPopulation = 764, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 16052, CityName = "Houston", StateProvinceId = 45, LatestRecordedPopulation = 2099451, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 16411, CityName = "Ikatan", StateProvinceId = 2, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 16504, CityName = "Indianapolis", StateProvinceId = 15, LatestRecordedPopulation = 820445, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 16823, CityName = "Jacksonville", StateProvinceId = 10, LatestRecordedPopulation = 821784, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 17054, CityName = "Jessie", StateProvinceId = 35, LatestRecordedPopulation = 25, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 17161, CityName = "Jonesborough", StateProvinceId = 44, LatestRecordedPopulation = 5051, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 17277, CityName = "Kadoka", StateProvinceId = 43, LatestRecordedPopulation = 654, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 17337, CityName = "Kansas City", StateProvinceId = 26, LatestRecordedPopulation = 459787, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 17346, CityName = "Karlstad", StateProvinceId = 24, LatestRecordedPopulation = 760, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 18557, CityName = "Lakeview Heights", StateProvinceId = 18, LatestRecordedPopulation = 185, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 18634, CityName = "Lanagan", StateProvinceId = 26, LatestRecordedPopulation = 419, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 18656, CityName = "Lancing", StateProvinceId = 44, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 18797, CityName = "Las Vegas", StateProvinceId = 29, LatestRecordedPopulation = 583756, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 19124, CityName = "Lemeta", StateProvinceId = 2, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 19586, CityName = "Lisco", StateProvinceId = 28, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 19882, CityName = "Long Beach", StateProvinceId = 5, LatestRecordedPopulation = 462257, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 19908, CityName = "Long Meadow", StateProvinceId = 21, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 20005, CityName = "Los Angeles", StateProvinceId = 5, LatestRecordedPopulation = 3792621, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 20082, CityName = "Louisville", StateProvinceId = 18, LatestRecordedPopulation = 597337, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 20731, CityName = "Manhattan", StateProvinceId = 33, LatestRecordedPopulation = 1619090, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 21692, CityName = "Medicine Lodge", StateProvinceId = 17, LatestRecordedPopulation = 2009, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 21793, CityName = "Memphis", StateProvinceId = 44, LatestRecordedPopulation = 646889, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 21936, CityName = "Mesa", StateProvinceId = 3, LatestRecordedPopulation = 439041, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 21994, CityName = "Miami", StateProvinceId = 10, LatestRecordedPopulation = 399457, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 22397, CityName = "Milwaukee", StateProvinceId = 52, LatestRecordedPopulation = 594833, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 22602, CityName = "Mokelumne Hill", StateProvinceId = 5, LatestRecordedPopulation = 646, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 23629, CityName = "Nashville", StateProvinceId = 44, LatestRecordedPopulation = 601222, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 23805, CityName = "Netcong", StateProvinceId = 31, LatestRecordedPopulation = 3232, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 24161, CityName = "New York", StateProvinceId = 33, LatestRecordedPopulation = 8175133, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 25279, CityName = "Oklahoma City", StateProvinceId = 37, LatestRecordedPopulation = 579999, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 25416, CityName = "Omaha", StateProvinceId = 28, LatestRecordedPopulation = 408958, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 26483, CityName = "Peeples Valley", StateProvinceId = 3, LatestRecordedPopulation = 428, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 26785, CityName = "Philadelphia", StateProvinceId = 39, LatestRecordedPopulation = 1526006, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 26822, CityName = "Phoenix", StateProvinceId = 3, LatestRecordedPopulation = 1445632, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 27677, CityName = "Portland", StateProvinceId = 38, LatestRecordedPopulation = 583776, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 28130, CityName = "Queens", StateProvinceId = 33, LatestRecordedPopulation = 2272771, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 28237, CityName = "Raleigh", StateProvinceId = 34, LatestRecordedPopulation = 403892, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 29947, CityName = "Sacramento", StateProvinceId = 5, LatestRecordedPopulation = 466488, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 30347, CityName = "San Antonio", StateProvinceId = 45, LatestRecordedPopulation = 1327407, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 30370, CityName = "San Diego", StateProvinceId = 5, LatestRecordedPopulation = 1307402, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 30378, CityName = "San Francisco", StateProvinceId = 5, LatestRecordedPopulation = 805235, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 30391, CityName = "San Jose", StateProvinceId = 5, LatestRecordedPopulation = 945942, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 30955, CityName = "Seattle", StateProvinceId = 50, LatestRecordedPopulation = 608660, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 32687, CityName = "Staten Island", StateProvinceId = 33, LatestRecordedPopulation = 470728, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 32887, CityName = "Stonefort", StateProvinceId = 14, LatestRecordedPopulation = 297, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 33475, CityName = "Sylvanite", StateProvinceId = 27, LatestRecordedPopulation = 103, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 33866, CityName = "The Bronx", StateProvinceId = 33, LatestRecordedPopulation = 1408473, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 34403, CityName = "Tresckow", StateProvinceId = 39, LatestRecordedPopulation = 880, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 34546, CityName = "Tucson", StateProvinceId = 3, LatestRecordedPopulation = 520116, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 35480, CityName = "Virginia Beach", StateProvinceId = 49, LatestRecordedPopulation = 437994, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 35844, CityName = "Ward Ridge", StateProvinceId = 10, LatestRecordedPopulation = 0, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 35980, CityName = "Washington", StateProvinceId = 9, LatestRecordedPopulation = 601723, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 37403, CityName = "Wimbledon", StateProvinceId = 35, LatestRecordedPopulation = 216, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new City() { Id = 38171, CityName = "Zionsville", StateProvinceId = 15, LatestRecordedPopulation = 14160, LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.Cities.AddRange(Cities);
            await context.SaveChangesAsync();
        }

        private static async Task SeedDeliveryMethodsAsync(WideWorldImportersContext context)
        {
            if (context.DeliveryMethods.Any())
                return;

            var deliveryMethods = new List<DeliveryMethod>()
            {
                new DeliveryMethod() { Id = 1, DeliveryMethodName = "Post", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 2, DeliveryMethodName = "Courier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 3, DeliveryMethodName = "Delivery Van", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 4, DeliveryMethodName = "Customer Collect", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 5, DeliveryMethodName = "Chilled Van", LastEditedBy = 16, ValidFrom = DateTime.Parse("2015-01-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 6, DeliveryMethodName = "Customer Courier to Collect", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 7, DeliveryMethodName = "Road Freight", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 8, DeliveryMethodName = "Air Freight", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 9, DeliveryMethodName = "Refrigerated Road Freight", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new DeliveryMethod() { Id = 10, DeliveryMethodName = "Refrigerated Air Freight", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.DeliveryMethods.AddRange(deliveryMethods);
            await context.SaveChangesAsync();
        }

        private static async Task SeedSystemParametersAsync(WideWorldImportersContext context)
        {
            if (context.SystemParameters.Any())
                return;

            var systemParameters = new List<SystemParameter>()
            {
                new SystemParameter { Id = 1, DeliveryAddressLine1 = "Suite 14", DeliveryAddressLine2 = "1968 Martin Luther King Junior Drive", DeliveryCityId = 30378, DeliveryPostalCode = "94129", PostalAddressLine1 = "0xE6100000010C09DE904605E24240C617EDF142A05EC0", PostalAddressLine2 = "Golden Gate Park", PostalCityId = 30378, PostalPostalCode = "94129", ApplicationSettings = "{   \"Site\": {    \"SEO\": {     \"Title\": \"WWI | Site\",     \"Description\": \"Wide World Importers - Site\",     \"StockItemTitleTemplate\": \"WWI | Site | StockItem {0}\",     \"StockItemDescrTemplate\": \"StockItem {0} ({1}})\"    },    \"Menu\": {     \"Home\": {      \"Url\": \"/\",      \"Alt\": \"Home\"     },     \"StockItems\": {      \"Url\": \"/stockitem\",      \"Alt\": \"Stock item search\"     },     \"Brands\": {      \"Url\": \"/brand\",      \"Alt\": \"Supplier listing\"     },     \"Contact\": {      \"Url\": \"/contact-us\",      \"Alt\": \"Contact\",      \"email\": \"jane@wideworldimporters.com\"     }    },    \"CSSTheme\": \"bootstrap-stockitems\",    \"Home\": {     \"Message\": \"New StockItems from Wide World Importers\",     \"PromoCategories\": [\"Gadgets\", \"Toys\"],     \"PromoCount\": 5,     \"NewStockItemsCount\": 5,     \"HotStockItemsCount\": 5    },    \"SearchResults\": {     \"SeoTitleTemplate\": \"WWI | Site | {0} | {1}\",     \"SeoDescrTemplate\": \"Wide World Importers | Stock Items {0} ({1}})\",     \"FacetCount\": 3    }   },   \"Customer\": {    \"SEO\": {     \"Title\": \"WWI | Customer Portal\",     \"Description\": \"Wide World Importers - Customer Site\",     \"StockItemTitleTemplate\": \"WWI | CustomerPortal | StockItem {0}\"    },    \"CSSTheme\": \"bootstrap-admin\",    \"Dashboard\": {     \"PromoCategories\": \"\",     \"PromoCount\": 5,              \"NewStockItemsCount\": 5    }   },   \"Supplier\": {    \"SEO\": {     \"Title\": \"WWI | Supplier Portal\"    },    \"CSSTheme\": \"bootstrap-admin\",    \"Dashboard\": {     \"StockItemsPerPage\": 10,     \"QuotesPerPage\": 25    },    \"Reports\": {     \"TopSales\": true,     \"ThisMonthSale\": true    }   },   \"Warehouse\": {    \"SEO\": {     \"Title\": \"WWI | Warehouse Administration\",     \"Description\": \"WorldWideImporters - Site\",     \"StockItemTitleTemplate\": \"WWI | Site | StockItem {0}\"    },    \"CSSTheme\": \"bootstrap-admin\"   },   \"Logging\": {    \"configuration\": {     \"status\": \"error\",     \"name\": \"RoutingTest\",     \"packages\": \"org.apache.logging.log4j.test\",     \"properties\": {      \"property\": {       \"name\": \"filename\",       \"value\": \"target/rolling1/rollingtest-$${sd:type}.log\"      }     },     \"ThresholdFilter\": {      \"level\": \"debug\"     },     \"appenders\": {      \"Console\": {       \"name\": \"STDOUT\",       \"PatternLayout\": {        \"pattern\": \"%m%n\"       }      },      \"List\": {       \"name\": \"List\",       \"ThresholdFilter\": {        \"level\": \"debug\"       }      },      \"Routing\": {       \"name\": \"Routing\",       \"Routes\": {        \"pattern\": \"$${sd:type}\",        \"Route\": [{         \"RollingFile\": {          \"name\": \"Rolling-${sd:type}\",          \"fileName\": \"${filename}\",          \"filePattern\": \"target/rolling1/test1-${sd:type}.%i.log.gz\",          \"PatternLayout\": {           \"pattern\": \"%d %p %c{1.} [%t] %m%n\"          },          \"SizeBasedTriggeringPolicy\": {           \"size\": \"500\"          }         }        }, {         \"AppenderRef\": \"STDOUT\",         \"key\": \"Audit\"        }, {         \"AppenderRef\": \"List\",         \"key\": \"Service\"        }]       }      }     },     \"loggers\": {      \"logger\": {       \"name\": \"EventLogger\",       \"level\": \"info\",       \"additivity\": \"false\",       \"AppenderRef\": {        \"ref\": \"Routing\"       }      },      \"root\": {       \"level\": \"error\",       \"AppenderRef\": {        \"ref\": \"STDOUT\"       }      }     }    }   }  }", LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") }
            };

            context.SystemParameters.AddRange(systemParameters);
            await context.SaveChangesAsync();
        }

        private static async Task SeedTransactionTypesAsync(WideWorldImportersContext context)
        {
            if (context.TransactionTypes.Any())
                return;

            var transactionTypes = new List<TransactionType>()
            {
                new TransactionType() { Id = 1, TransactionTypeName = "Customer Invoice", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 2, TransactionTypeName = "Customer Credit Note", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 3, TransactionTypeName = "Customer Payment Received", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 4, TransactionTypeName = "Customer Refund", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 5, TransactionTypeName = "Supplier Invoice", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 6, TransactionTypeName = "Supplier Credit Note", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 7, TransactionTypeName = "Supplier Payment Issued", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 8, TransactionTypeName = "Supplier Refund", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 9, TransactionTypeName = "Stock Transfer", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 10, TransactionTypeName = "Stock Issue", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 11, TransactionTypeName = "Stock Receipt", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 12, TransactionTypeName = "Stock Adjustment at Stocktake", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new TransactionType() { Id = 13, TransactionTypeName = "Customer Contra", LastEditedBy = 9, ValidFrom = DateTime.Parse("2016-01-01 16:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.TransactionTypes.AddRange(transactionTypes);
            await context.SaveChangesAsync();
        }

        private static async Task SeedPaymentMethodsAsync(WideWorldImportersContext context)
        {
            if (context.PaymentMethods.Any())
                return;

            var paymentMethods = new List<PaymentMethod>()
            {
                new PaymentMethod() { Id = 1, PaymentMethodName = "Cash", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PaymentMethod() { Id = 2, PaymentMethodName = "Check", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PaymentMethod() { Id = 3, PaymentMethodName = "Credit-Card", LastEditedBy = 9, ValidFrom = DateTime.Parse("2016-01-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PaymentMethod() { Id = 4, PaymentMethodName = "EFT", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.PaymentMethods.AddRange(paymentMethods);
            await context.SaveChangesAsync();
        }

        #endregion Sample Application Entities

        #region Sample Purchasing Entities

        private static async Task SeedPurchaseOrdersAsync(WideWorldImportersContext context)
        {
            if (context.PurchaseOrders.Any())
                return;

            var purchaseOrders = new List<PurchaseOrder>()
            {
                new PurchaseOrder { Id = 1, SupplierId = 2, OrderDate = DateTime.Parse("2013-01-01"), DeliveryMethodId = 9, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), SupplierReference = "B2084020", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrder { Id = 2, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-01"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrder { Id = 3, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-01"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrder { Id = 4, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-01"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrder { Id = 5, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-01"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrder { Id = 6, SupplierId = 12, OrderDate = DateTime.Parse("2013-01-01"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), SupplierReference = "237408032", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrder { Id = 7, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-02"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-22"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrder { Id = 8, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-02"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-22"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrder { Id = 9, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-02"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-22"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrder { Id = 10, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-02"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-22"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrder { Id = 11, SupplierId = 12, OrderDate = DateTime.Parse("2013-01-02"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-22"), SupplierReference = "237408032", IsOrderFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrder { Id = 12, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-03"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrder { Id = 13, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-03"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrder { Id = 14, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-03"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrder { Id = 15, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-03"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrder { Id = 16, SupplierId = 12, OrderDate = DateTime.Parse("2013-01-03"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "237408032", IsOrderFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrder { Id = 17, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-04"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-18"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 18, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-04"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-18"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 19, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-04"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-18"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 20, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-04"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-18"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 21, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-05"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-25"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 22, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-05"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-25"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 23, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-05"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-25"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 24, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-05"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-25"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 25, SupplierId = 12, OrderDate = DateTime.Parse("2013-01-05"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-25"), SupplierReference = "237408032", IsOrderFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrder { Id = 26, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-07"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-27"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrder { Id = 27, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-07"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-27"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrder { Id = 28, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-07"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-27"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrder { Id = 29, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-07"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-27"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrder { Id = 30, SupplierId = 12, OrderDate = DateTime.Parse("2013-01-07"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-27"), SupplierReference = "237408032", IsOrderFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrder { Id = 31, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-08"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-28"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-09 07:00:00.0000000") },
                new PurchaseOrder { Id = 32, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-09"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-10 07:00:00.0000000") },
                new PurchaseOrder { Id = 33, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-09"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-10 07:00:00.0000000") },
                new PurchaseOrder { Id = 34, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-09"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-10 07:00:00.0000000") },
                new PurchaseOrder { Id = 35, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-09"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-10 07:00:00.0000000") },
                new PurchaseOrder { Id = 36, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-10"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-11 07:00:00.0000000") },
                new PurchaseOrder { Id = 37, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-10"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-11 07:00:00.0000000") },
                new PurchaseOrder { Id = 38, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-10"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-11 07:00:00.0000000") },
                new PurchaseOrder { Id = 39, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-11"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrder { Id = 40, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-11"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrder { Id = 41, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-12"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-02-01"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrder { Id = 42, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-12"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-02-01"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrder { Id = 43, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-14"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-02-03"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new PurchaseOrder { Id = 44, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-14"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-02-03"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new PurchaseOrder { Id = 45, SupplierId = 7, OrderDate = DateTime.Parse("2013-01-14"), DeliveryMethodId = 2, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-02-03"), SupplierReference = "BC0280982", IsOrderFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new PurchaseOrder { Id = 46, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-14"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-02-03"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new PurchaseOrder { Id = 47, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-15"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new PurchaseOrder { Id = 48, SupplierId = 5, OrderDate = DateTime.Parse("2013-01-15"), DeliveryMethodId = 10, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "8803922", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new PurchaseOrder { Id = 49, SupplierId = 10, OrderDate = DateTime.Parse("2013-01-15"), DeliveryMethodId = 8, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), SupplierReference = "ML0300202", IsOrderFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new PurchaseOrder { Id = 50, SupplierId = 4, OrderDate = DateTime.Parse("2013-01-16"), DeliveryMethodId = 7, ContactPersonId = 2, ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), SupplierReference = "293092", IsOrderFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-17 07:00:00.0000000") }
            };

            context.PurchaseOrders.AddRange(purchaseOrders);
            await context.SaveChangesAsync();
        }

        private static async Task SeedPurchaseOrderLinesAsync(WideWorldImportersContext context)
        {
            if (context.PurchaseOrderLines.Any())
                return;

            var purchaseOrderLines = new List<PurchaseOrderLine>()
            {
                new PurchaseOrderLine { Id = 38, PurchaseOrderId = 3, StockItemId = 16, OrderedOuters = 28, Description = "DBA joke mug - mind if I join you? (White)", ReceivedOuters = 28, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 39, PurchaseOrderId = 3, StockItemId = 18, OrderedOuters = 46, Description = "DBA joke mug - daaaaaa-ta (White)", ReceivedOuters = 46, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 40, PurchaseOrderId = 3, StockItemId = 19, OrderedOuters = 36, Description = "DBA joke mug - daaaaaa-ta (Black)", ReceivedOuters = 36, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 41, PurchaseOrderId = 3, StockItemId = 20, OrderedOuters = 35, Description = "DBA joke mug - you might be a DBA if (White)", ReceivedOuters = 35, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 42, PurchaseOrderId = 3, StockItemId = 21, OrderedOuters = 36, Description = "DBA joke mug - you might be a DBA if (Black)", ReceivedOuters = 36, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 43, PurchaseOrderId = 3, StockItemId = 22, OrderedOuters = 38, Description = "DBA joke mug - it depends (White)", ReceivedOuters = 38, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 44, PurchaseOrderId = 3, StockItemId = 23, OrderedOuters = 30, Description = "DBA joke mug - it depends (Black)", ReceivedOuters = 30, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 45, PurchaseOrderId = 3, StockItemId = 39, OrderedOuters = 35, Description = "Developer joke mug - inheritance is the OO way to become wealthy (Black)", ReceivedOuters = 35, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 46, PurchaseOrderId = 3, StockItemId = 40, OrderedOuters = 43, Description = "Developer joke mug - (hip, hip, array) (White)", ReceivedOuters = 43, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 47, PurchaseOrderId = 3, StockItemId = 41, OrderedOuters = 41, Description = "Developer joke mug - (hip, hip, array) (Black)", ReceivedOuters = 41, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 48, PurchaseOrderId = 3, StockItemId = 44, OrderedOuters = 40, Description = "Developer joke mug - there are 10 types of people in the world (White)", ReceivedOuters = 40, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 49, PurchaseOrderId = 3, StockItemId = 45, OrderedOuters = 29, Description = "Developer joke mug - there are 10 types of people in the world (Black)", ReceivedOuters = 29, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 50, PurchaseOrderId = 3, StockItemId = 50, OrderedOuters = 42, Description = "Developer joke mug - old C developers never die (White)", ReceivedOuters = 42, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 90, PurchaseOrderId = 6, StockItemId = 2, OrderedOuters = 83, Description = "USB rocket launcher (Gray)", ReceivedOuters = 83, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("9.50"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 91, PurchaseOrderId = 6, StockItemId = 5, OrderedOuters = 99, Description = "USB food flash drive - hamburger", ReceivedOuters = 99, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 92, PurchaseOrderId = 6, StockItemId = 6, OrderedOuters = 98, Description = "USB food flash drive - hot dog", ReceivedOuters = 98, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 93, PurchaseOrderId = 6, StockItemId = 7, OrderedOuters = 102, Description = "USB food flash drive - pizza slice", ReceivedOuters = 102, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 94, PurchaseOrderId = 6, StockItemId = 9, OrderedOuters = 96, Description = "USB food flash drive - banana", ReceivedOuters = 96, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-02"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 115, PurchaseOrderId = 8, StockItemId = 28, OrderedOuters = 29, Description = "DBA joke mug - two types of DBAs (White)", ReceivedOuters = 29, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 116, PurchaseOrderId = 8, StockItemId = 29, OrderedOuters = 42, Description = "DBA joke mug - two types of DBAs (Black)", ReceivedOuters = 42, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 117, PurchaseOrderId = 8, StockItemId = 38, OrderedOuters = 31, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", ReceivedOuters = 31, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 118, PurchaseOrderId = 8, StockItemId = 46, OrderedOuters = 44, Description = "Developer joke mug - a foo walks into a bar (White)", ReceivedOuters = 44, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 137, PurchaseOrderId = 11, StockItemId = 1, OrderedOuters = 88, Description = "USB missile launcher (Green)", ReceivedOuters = 88, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("9.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 138, PurchaseOrderId = 11, StockItemId = 3, OrderedOuters = 15, Description = "Office cube periscope (Black)", ReceivedOuters = 15, PackageTypeId = 6, ExpectedUnitPricePerOuter = Decimal.Parse("112.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 139, PurchaseOrderId = 11, StockItemId = 15, OrderedOuters = 196, Description = "USB food flash drive - dessert 10 drive variety pack", ReceivedOuters = 196, PackageTypeId = 9, ExpectedUnitPricePerOuter = Decimal.Parse("88.50"), LastReceiptDate = DateTime.Parse("2013-01-03"), IsOrderLineFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 149, PurchaseOrderId = 13, StockItemId = 32, OrderedOuters = 26, Description = "Developer joke mug - that's a hardware problem (White)", ReceivedOuters = 26, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-04"), IsOrderLineFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 150, PurchaseOrderId = 13, StockItemId = 33, OrderedOuters = 32, Description = "Developer joke mug - that's a hardware problem (Black)", ReceivedOuters = 32, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-04"), IsOrderLineFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 169, PurchaseOrderId = 16, StockItemId = 4, OrderedOuters = 104, Description = "USB food flash drive - sushi roll", ReceivedOuters = 104, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-04"), IsOrderLineFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 170, PurchaseOrderId = 16, StockItemId = 10, OrderedOuters = 111, Description = "USB food flash drive - chocolate bar", ReceivedOuters = 111, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-04"), IsOrderLineFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 171, PurchaseOrderId = 16, StockItemId = 13, OrderedOuters = 99, Description = "USB food flash drive - shrimp cocktail", ReceivedOuters = 99, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-04"), IsOrderLineFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 178, PurchaseOrderId = 18, StockItemId = 17, OrderedOuters = 33, Description = "DBA joke mug - mind if I join you? (Black)", ReceivedOuters = 33, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-07"), IsOrderLineFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 192, PurchaseOrderId = 22, StockItemId = 48, OrderedOuters = 35, Description = "Developer joke mug - this code was generated by a tool (White)", ReceivedOuters = 35, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-07"), IsOrderLineFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 200, PurchaseOrderId = 25, StockItemId = 8, OrderedOuters = 204, Description = "USB food flash drive - dim sum 10 drive variety pack", ReceivedOuters = 204, PackageTypeId = 9, ExpectedUnitPricePerOuter = Decimal.Parse("88.50"), LastReceiptDate = DateTime.Parse("2013-01-07"), IsOrderLineFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 201, PurchaseOrderId = 25, StockItemId = 11, OrderedOuters = 102, Description = "USB food flash drive - cookie", ReceivedOuters = 102, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-07"), IsOrderLineFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-07 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 208, PurchaseOrderId = 27, StockItemId = 27, OrderedOuters = 26, Description = "DBA joke mug - SELECT caffeine FROM mug (Black)", ReceivedOuters = 26, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 209, PurchaseOrderId = 27, StockItemId = 34, OrderedOuters = 35, Description = "Developer joke mug - fun was unexpected at this time (White)", ReceivedOuters = 35, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 210, PurchaseOrderId = 27, StockItemId = 35, OrderedOuters = 40, Description = "Developer joke mug - fun was unexpected at this time (Black)", ReceivedOuters = 40, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 211, PurchaseOrderId = 27, StockItemId = 36, OrderedOuters = 27, Description = "Developer joke mug - when your hammer is C++ (White)", ReceivedOuters = 27, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 212, PurchaseOrderId = 27, StockItemId = 47, OrderedOuters = 31, Description = "Developer joke mug - a foo walks into a bar (Black)", ReceivedOuters = 31, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 216, PurchaseOrderId = 30, StockItemId = 12, OrderedOuters = 101, Description = "USB food flash drive - donut", ReceivedOuters = 101, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 217, PurchaseOrderId = 30, StockItemId = 14, OrderedOuters = 97, Description = "USB food flash drive - fortune cookie", ReceivedOuters = 97, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("12.00"), LastReceiptDate = DateTime.Parse("2013-01-08"), IsOrderLineFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 221, PurchaseOrderId = 33, StockItemId = 49, OrderedOuters = 28, Description = "Developer joke mug - this code was generated by a tool (Black)", ReceivedOuters = 28, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-10"), IsOrderLineFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-10 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 234, PurchaseOrderId = 40, StockItemId = 25, OrderedOuters = 26, Description = "DBA joke mug - I will get you in order (Black)", ReceivedOuters = 26, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-14"), IsOrderLineFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 235, PurchaseOrderId = 40, StockItemId = 30, OrderedOuters = 27, Description = "Developer joke mug - Oct 31 = Dec 25 (White)", ReceivedOuters = 27, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-14"), IsOrderLineFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 236, PurchaseOrderId = 40, StockItemId = 31, OrderedOuters = 42, Description = "Developer joke mug - Oct 31 = Dec 25 (Black)", ReceivedOuters = 42, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-14"), IsOrderLineFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-14 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 245, PurchaseOrderId = 44, StockItemId = 42, OrderedOuters = 33, Description = "Developer joke mug - understanding recursion requires understanding recursion (White)", ReceivedOuters = 33, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-15"), IsOrderLineFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 252, PurchaseOrderId = 48, StockItemId = 26, OrderedOuters = 33, Description = "DBA joke mug - SELECT caffeine FROM mug (White)", ReceivedOuters = 33, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-16"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new PurchaseOrderLine { Id = 253, PurchaseOrderId = 48, StockItemId = 37, OrderedOuters = 33, Description = "Developer joke mug - when your hammer is C++ (Black)", ReceivedOuters = 33, PackageTypeId = 7, ExpectedUnitPricePerOuter = Decimal.Parse("4.50"), LastReceiptDate = DateTime.Parse("2013-01-16"), IsOrderLineFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") }
            };

            context.PurchaseOrderLines.AddRange(purchaseOrderLines);
            await context.SaveChangesAsync();
        }

        private static async Task SeedSupplierCategoriesAsync(WideWorldImportersContext context)
        {
            if (context.SupplierCategories.Any())
                return;

            var supplierCategories = new List<SupplierCategory>()
            {
                new SupplierCategory() { Id = 1, SupplierCategoryName = "Other Wholesaler", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 2, SupplierCategoryName = "Novelty Goods Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 3, SupplierCategoryName = "Toy Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 4, SupplierCategoryName = "Clothing Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 5, SupplierCategoryName = "Packaging Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 6, SupplierCategoryName = "Courier Services Supplier", LastEditedBy = 16, ValidFrom = DateTime.Parse("2015-01-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 7, SupplierCategoryName = "Financial Services Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 8, SupplierCategoryName = "Marketing Services Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new SupplierCategory() { Id = 9, SupplierCategoryName = "Insurance Services Supplier", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.SupplierCategories.AddRange(supplierCategories);
            await context.SaveChangesAsync();
        }

        private static async Task SeedSuppliersAsync(WideWorldImportersContext context)
        {
            if (context.Suppliers.Any())
                return;

            var suppliers = new List<Supplier>()
            {
                new Supplier() { Id = 1, SupplierName = "A Datum Corporation", SupplierCategoryId = 2, PrimaryContactPersonId = 21, AlternateContactPersonId = 22, DeliveryMethodId = 7, DeliveryCityId = 38171, PostalCityId = 38171, SupplierReference = "AA20384", BankAccountName = "A Datum Corporation", BankAccountBranch = "Woodgrove Bank Zionsville", BankAccountCode = "356981", BankAccountNumber = "8575824136", BankInternationalCode = "25986", PaymentDays = 14, PhoneNumber = "(847) 555-0100", FaxNumber = "(847) 555-0101", WebsiteUrl = "http://www.adatum.com", DeliveryAddressLine1 = "183838 Southwest Boulevard", DeliveryAddressLine2 = "Suite 10", DeliveryPostalCode = "46077", PostalAddressLine1 = "PO Box 1039", PostalAddressLine2 = "Surrey",PostalPostalCode = "46077", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 2, SupplierName = "Contoso, Ltd.", SupplierCategoryId = 2, PrimaryContactPersonId = 23, AlternateContactPersonId = 24, DeliveryMethodId = 9, DeliveryCityId = 13870, PostalCityId = 13870, SupplierReference = "B2084020", BankAccountName = "Contoso Ltd", BankAccountBranch = "Woodgrove Bank Greenbank", BankAccountCode = "358698", BankAccountNumber = "4587965215", BankInternationalCode = "25868", PaymentDays = 7, PhoneNumber = "(360) 555-0100", FaxNumber = "(360) 555-0101", WebsiteUrl = "http://www.contoso.com", DeliveryAddressLine1 = "2934 Night Road", DeliveryAddressLine2 = "Unit 2", DeliveryPostalCode = "98253", PostalAddressLine1 = "PO Box 1012", PostalAddressLine2 = "Jolimont",PostalPostalCode = "98253", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 3, SupplierName = "Consolidated Messenger", SupplierCategoryId = 6, PrimaryContactPersonId = 25, AlternateContactPersonId = 26, DeliveryCityId = 30378, PostalCityId = 30378, SupplierReference = "209340283", BankAccountName = "Consolidated Messenger", BankAccountBranch = "Woodgrove Bank San Francisco", BankAccountCode = "354269", BankAccountNumber = "3254872158", BankInternationalCode = "45698", PaymentDays = 30, PhoneNumber = "(415) 555-0100", FaxNumber = "(415) 555-0101", WebsiteUrl = "http://www.consolidatedmessenger.com", DeliveryAddressLine1 = "894 Market Day Street", DeliveryPostalCode = "94101", PostalAddressLine1 = "PO Box 1014", PostalAddressLine2 = "West Mont",PostalPostalCode = "94101", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 4, SupplierName = "Fabrikam, Inc.", SupplierCategoryId = 4, PrimaryContactPersonId = 27, AlternateContactPersonId = 28, DeliveryMethodId = 7, DeliveryCityId = 18557, PostalCityId = 18557, SupplierReference = "293092", BankAccountName = "Fabrikam Inc", BankAccountBranch = "Woodgrove Bank Lakeview Heights", BankAccountCode = "789568", BankAccountNumber = "4125863879", BankInternationalCode = "12546", PaymentDays = 30, PhoneNumber = "(203) 555-0104", FaxNumber = "(203) 555-0108", WebsiteUrl = "http://www.fabrikam.com", DeliveryAddressLine1 = "393999 Woodberg Road", DeliveryAddressLine2 = "Level 2", DeliveryPostalCode = "40351", PostalAddressLine1 = "PO Box 301", PostalAddressLine2 = "Eaglemont",PostalPostalCode = "40351", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 5, SupplierName = "Graphic Design Institute", SupplierCategoryId = 2, PrimaryContactPersonId = 29, AlternateContactPersonId = 30, DeliveryMethodId = 10, DeliveryCityId = 18634, PostalCityId = 18634, SupplierReference = "8803922", BankAccountName = "Graphic Design Institute", BankAccountBranch = "Woodgrove Bank Lanagan", BankAccountCode = "563215", BankAccountNumber = "1025869354", BankInternationalCode = "32587", PaymentDays = 14, PhoneNumber = "(406) 555-0105", FaxNumber = "(406) 555-0106", WebsiteUrl = "http://www.graphicdesigninstitute.com", DeliveryAddressLine1 = "45th Street", DeliveryPostalCode = "64847", PostalAddressLine1 = "PO Box 393", PostalAddressLine2 = "Willow",PostalPostalCode = "64847", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 6, SupplierName = "Humongous Insurance", SupplierCategoryId = 9, PrimaryContactPersonId = 31, AlternateContactPersonId = 32, DeliveryCityId = 18656, PostalCityId = 18656, SupplierReference = "82420938", BankAccountName = "Humongous Insurance", BankAccountBranch = "Woodgrove Bank Lancing", BankAccountCode = "325001", BankAccountNumber = "2569874521", BankInternationalCode = "32569", PaymentDays = 14, PhoneNumber = "(423) 555-0105", FaxNumber = "(423) 555-0100", WebsiteUrl = "http://www.humongousinsurance.com", DeliveryAddressLine1 = "9893 Mount Norris Road", DeliveryPostalCode = "37770", PostalAddressLine1 = "PO Box 94829", PostalAddressLine2 = "Boxville",PostalPostalCode = "37770", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 7, SupplierName = "Litware, Inc.", SupplierCategoryId = 5, PrimaryContactPersonId = 33, AlternateContactPersonId = 34, DeliveryMethodId = 2, DeliveryCityId = 22602, PostalCityId = 22602, SupplierReference = "BC0280982", BankAccountName = "Litware Inc", BankAccountBranch = "Woodgrove Bank Mokelumne Hill", BankAccountCode = "358769", BankAccountNumber = "3256896325", BankInternationalCode = "21445", PaymentDays = 30, PhoneNumber = "(209) 555-0108", FaxNumber = "(209) 555-0104", WebsiteUrl = "http://www.litwareinc.com", DeliveryAddressLine1 = "19 Le Church Street", DeliveryAddressLine2 = "Level 3", DeliveryPostalCode = "95245", PostalAddressLine1 = "PO Box 20290", PostalAddressLine2 = "Jackson",PostalPostalCode = "95245", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 8, SupplierName = "Lucerne Publishing", SupplierCategoryId = 2, PrimaryContactPersonId = 35, AlternateContactPersonId = 36, DeliveryMethodId = 10, DeliveryCityId = 17161, PostalCityId = 17161, SupplierReference = "JQ082304802", BankAccountName = "Lucerne Publishing", BankAccountBranch = "Woodgrove Bank Jonesborough", BankAccountCode = "654789", BankAccountNumber = "3254123658", BankInternationalCode = "21569", PaymentDays = 30, PhoneNumber = "(423) 555-0103", FaxNumber = "(423) 555-0105", WebsiteUrl = "http://www.lucernepublishing.com", DeliveryAddressLine1 = "949482 Miller Boulevard", DeliveryAddressLine2 = "Suite 34", DeliveryPostalCode = "37659", PostalAddressLine1 = "PO Box 8747", PostalAddressLine2 = "Westerfold",PostalPostalCode = "37659", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 9, SupplierName = "Nod Publishers", SupplierCategoryId = 2, PrimaryContactPersonId = 37, AlternateContactPersonId = 38, DeliveryMethodId = 10, DeliveryCityId = 10346, PostalCityId = 10346, SupplierReference = "GL08029802", BankAccountName = "Nod Publishers", BankAccountBranch = "Woodgrove Bank Elizabeth City", BankAccountCode = "365985", BankAccountNumber = "2021545878", BankInternationalCode = "48758", PaymentDays = 7, InternalComments = "Marcos is not in on Mondays", PhoneNumber = "(252) 555-0100", FaxNumber = "(252) 555-0101", WebsiteUrl = "http://www.nodpublishers.com", DeliveryAddressLine1 = "389 King Street", DeliveryAddressLine2 = "Level 1", DeliveryPostalCode = "27906", PostalAddressLine1 = "PO Box 3390", PostalAddressLine2 = "Anderson",PostalPostalCode = "27906", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 10, SupplierName = "Northwind Electric Cars", SupplierCategoryId = 3, PrimaryContactPersonId = 39, AlternateContactPersonId = 40, DeliveryMethodId = 8, DeliveryCityId = 7899, PostalCityId = 7899, SupplierReference = "ML0300202", BankAccountName = "Northwind Electric Cars", BankAccountBranch = "Woodgrove Bank Crandon Lakes", BankAccountCode = "325447", BankAccountNumber = "3258786987", BankInternationalCode = "36214", PaymentDays = 30, PhoneNumber = "(201) 555-0105", FaxNumber = "(201) 555-0104", WebsiteUrl = "http://www.northwindelectriccars.com", DeliveryAddressLine1 = "440 New Road", DeliveryPostalCode = "7860", PostalAddressLine1 = "PO Box 30920", PostalAddressLine2 = "Arlington",PostalPostalCode = "7860", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 11, SupplierName = "Trey Research", SupplierCategoryId = 8, PrimaryContactPersonId = 41, AlternateContactPersonId = 42, DeliveryCityId = 17277, PostalCityId = 17277, SupplierReference = "82304822", BankAccountName = "Trey Research", BankAccountBranch = "Woodgrove Bank Kadoka", BankAccountCode = "658968", BankAccountNumber = "1254785321", BankInternationalCode = "56958", PaymentDays = 7, PhoneNumber = "(605) 555-0103", FaxNumber = "(605) 555-0101", WebsiteUrl = "http://www.treyresearch.net", DeliveryAddressLine1 = "9401 Polar Avenue", DeliveryAddressLine2 = "Level 43", DeliveryPostalCode = "57543", PostalAddressLine1 = "PO  Box 595", PostalAddressLine2 = "Port Fairy",PostalPostalCode = "57543", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 12, SupplierName = "The Phone Company", SupplierCategoryId = 2, PrimaryContactPersonId = 43, AlternateContactPersonId = 44, DeliveryMethodId = 7, DeliveryCityId = 17346, PostalCityId = 17346, SupplierReference = "237408032", BankAccountName = "The Phone Company", BankAccountBranch = "Woodgrove Bank Karlstad", BankAccountCode = "214568", BankAccountNumber = "7896236589", BankInternationalCode = "25478", PaymentDays = 30, PhoneNumber = "(218) 555-0105", FaxNumber = "(218) 555-0105", WebsiteUrl = "http://www.thephone-company.com", DeliveryAddressLine1 = "339 Toorak Road", DeliveryAddressLine2 = "Level 83", DeliveryPostalCode = "56732", PostalAddressLine1 = "PO Box 3837", PostalAddressLine2 = "Ferny Wood",PostalPostalCode = "56732", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Supplier() { Id = 13, SupplierName = "Woodgrove Bank", SupplierCategoryId = 7, PrimaryContactPersonId = 45, AlternateContactPersonId = 46, DeliveryCityId = 30378, PostalCityId = 30378, SupplierReference = "28034202", BankAccountName = "Woodgrove Bank", BankAccountBranch = "Woodgrove Bank San Francisco", BankAccountCode = "325698", BankAccountNumber = "2147825698", BankInternationalCode = "65893", PaymentDays = 7, InternalComments = "Only speak to Donald if Hubert really is not available", PhoneNumber = "(415) 555-0103", FaxNumber = "(415) 555-0107", WebsiteUrl = "http://www.woodgrovebank.com", DeliveryAddressLine1 = "8488 Vienna Boulevard", DeliveryAddressLine2 = "Level 3", DeliveryPostalCode = "94101", PostalAddressLine1 = "PO Box 2390", PostalAddressLine2 = "Canterbury",PostalPostalCode = "94101", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:05:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
            };

            context.Suppliers.AddRange(suppliers);
            await context.SaveChangesAsync();
        }

        private static async Task SeedSupplierTransactionsAsync(WideWorldImportersContext context)
        {
            if (context.SupplierTransactions.Any())
                return;

            var supplierTransactions = new List<SupplierTransaction>()
            {
                new SupplierTransaction { Id = 134, SupplierId = 2, TransactionTypeId = 5, PurchaseOrderId = 1, PaymentMethodId = 4, SupplierInvoiceNumber = "7290", TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("313.50"), TaxAmount = Decimal.Parse("47.03"), TransactionAmount = Decimal.Parse("360.53"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 169, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 2, PaymentMethodId = 4, SupplierInvoiceNumber = "3898", TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("21732.00"), TaxAmount = Decimal.Parse("3259.80"), TransactionAmount = Decimal.Parse("24991.80"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 186, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 3, PaymentMethodId = 4, SupplierInvoiceNumber = "616", TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("2740.50"), TaxAmount = Decimal.Parse("411.11"), TransactionAmount = Decimal.Parse("3151.61"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 215, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 4, PaymentMethodId = 4, SupplierInvoiceNumber = "3869", TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("42481.20"), TaxAmount = Decimal.Parse("6372.19"), TransactionAmount = Decimal.Parse("48853.39"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 224, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 5, PaymentMethodId = 4, SupplierInvoiceNumber = "4697", TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("35067.50"), TaxAmount = Decimal.Parse("5260.14"), TransactionAmount = Decimal.Parse("40327.64"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 230, SupplierId = 12, TransactionTypeId = 5, PurchaseOrderId = 6, PaymentMethodId = 4, SupplierInvoiceNumber = "1375", TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("5528.50"), TaxAmount = Decimal.Parse("829.28"), TransactionAmount = Decimal.Parse("6357.78"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 565, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 7, PaymentMethodId = 4, SupplierInvoiceNumber = "3261", TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("10000.50"), TaxAmount = Decimal.Parse("1500.08"), TransactionAmount = Decimal.Parse("11500.58"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 570, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 8, PaymentMethodId = 4, SupplierInvoiceNumber = "1762", TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("657.00"), TaxAmount = Decimal.Parse("98.56"), TransactionAmount = Decimal.Parse("755.56"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 588, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 9, PaymentMethodId = 4, SupplierInvoiceNumber = "9301", TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("9281.50"), TaxAmount = Decimal.Parse("1392.24"), TransactionAmount = Decimal.Parse("10673.74"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 590, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 10, PaymentMethodId = 4, SupplierInvoiceNumber = "1853", TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("1037.50"), TaxAmount = Decimal.Parse("155.63"), TransactionAmount = Decimal.Parse("1193.13"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 594, SupplierId = 12, TransactionTypeId = 5, PurchaseOrderId = 11, PaymentMethodId = 4, SupplierInvoiceNumber = "8170", TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("19869.50"), TaxAmount = Decimal.Parse("2980.43"), TransactionAmount = Decimal.Parse("22849.93"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 932, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 12, PaymentMethodId = 4, SupplierInvoiceNumber = "5075", TransactionDate = DateTime.Parse("2013-01-04"), AmountExcludingTax = Decimal.Parse("6661.50"), TaxAmount = Decimal.Parse("999.23"), TransactionAmount = Decimal.Parse("7660.73"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 935, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 13, PaymentMethodId = 4, SupplierInvoiceNumber = "134", TransactionDate = DateTime.Parse("2013-01-04"), AmountExcludingTax = Decimal.Parse("261.00"), TaxAmount = Decimal.Parse("39.15"), TransactionAmount = Decimal.Parse("300.15"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 952, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 14, PaymentMethodId = 4, SupplierInvoiceNumber = "999", TransactionDate = DateTime.Parse("2013-01-04"), AmountExcludingTax = Decimal.Parse("16279.45"), TaxAmount = Decimal.Parse("2441.92"), TransactionAmount = Decimal.Parse("18721.37"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 955, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 15, PaymentMethodId = 4, SupplierInvoiceNumber = "4943", TransactionDate = DateTime.Parse("2013-01-04"), AmountExcludingTax = Decimal.Parse("13325.00"), TaxAmount = Decimal.Parse("1998.75"), TransactionAmount = Decimal.Parse("15323.75"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 959, SupplierId = 12, TransactionTypeId = 5, PurchaseOrderId = 16, PaymentMethodId = 4, SupplierInvoiceNumber = "9907", TransactionDate = DateTime.Parse("2013-01-04"), AmountExcludingTax = Decimal.Parse("3768.00"), TaxAmount = Decimal.Parse("565.20"), TransactionAmount = Decimal.Parse("4333.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1390, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 17, PaymentMethodId = 4, SupplierInvoiceNumber = "4291", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("8808.00"), TaxAmount = Decimal.Parse("1321.20"), TransactionAmount = Decimal.Parse("10129.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1393, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 18, PaymentMethodId = 4, SupplierInvoiceNumber = "205", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("288.00"), TaxAmount = Decimal.Parse("43.21"), TransactionAmount = Decimal.Parse("331.21"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1400, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 19, PaymentMethodId = 4, SupplierInvoiceNumber = "7476", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("5230.20"), TaxAmount = Decimal.Parse("784.53"), TransactionAmount = Decimal.Parse("6014.73"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1402, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 20, PaymentMethodId = 4, SupplierInvoiceNumber = "364", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("7250.00"), TaxAmount = Decimal.Parse("1087.50"), TransactionAmount = Decimal.Parse("8337.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1408, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 21, PaymentMethodId = 4, SupplierInvoiceNumber = "252", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("5116.00"), TaxAmount = Decimal.Parse("767.40"), TransactionAmount = Decimal.Parse("5883.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1410, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 22, PaymentMethodId = 4, SupplierInvoiceNumber = "9981", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("157.50"), TaxAmount = Decimal.Parse("23.63"), TransactionAmount = Decimal.Parse("181.13"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1417, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 23, PaymentMethodId = 4, SupplierInvoiceNumber = "9410", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("3639.55"), TaxAmount = Decimal.Parse("545.93"), TransactionAmount = Decimal.Parse("4185.48"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1419, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 24, PaymentMethodId = 4, SupplierInvoiceNumber = "951", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("1245.00"), TaxAmount = Decimal.Parse("186.75"), TransactionAmount = Decimal.Parse("1431.75"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1422, SupplierId = 12, TransactionTypeId = 5, PurchaseOrderId = 25, PaymentMethodId = 4, SupplierInvoiceNumber = "4585", TransactionDate = DateTime.Parse("2013-01-07"), AmountExcludingTax = Decimal.Parse("19278.00"), TaxAmount = Decimal.Parse("2891.70"), TransactionAmount = Decimal.Parse("22169.70"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-07"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-07 09:00:00.0000000") },
                new SupplierTransaction { Id = 1873, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 26, PaymentMethodId = 4, SupplierInvoiceNumber = "2648", TransactionDate = DateTime.Parse("2013-01-08"), AmountExcludingTax = Decimal.Parse("1436.00"), TaxAmount = Decimal.Parse("215.40"), TransactionAmount = Decimal.Parse("1651.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 1880, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 27, PaymentMethodId = 4, SupplierInvoiceNumber = "7934", TransactionDate = DateTime.Parse("2013-01-08"), AmountExcludingTax = Decimal.Parse("832.50"), TaxAmount = Decimal.Parse("124.89"), TransactionAmount = Decimal.Parse("957.39"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 1882, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 28, PaymentMethodId = 4, SupplierInvoiceNumber = "359", TransactionDate = DateTime.Parse("2013-01-08"), AmountExcludingTax = Decimal.Parse("2380.00"), TaxAmount = Decimal.Parse("357.00"), TransactionAmount = Decimal.Parse("2737.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 1884, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 29, PaymentMethodId = 4, SupplierInvoiceNumber = "7757", TransactionDate = DateTime.Parse("2013-01-08"), AmountExcludingTax = Decimal.Parse("1037.50"), TaxAmount = Decimal.Parse("155.63"), TransactionAmount = Decimal.Parse("1193.13"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 1887, SupplierId = 12, TransactionTypeId = 5, PurchaseOrderId = 30, PaymentMethodId = 4, SupplierInvoiceNumber = "6742", TransactionDate = DateTime.Parse("2013-01-08"), AmountExcludingTax = Decimal.Parse("2376.00"), TaxAmount = Decimal.Parse("356.40"), TransactionAmount = Decimal.Parse("2732.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2087, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 31, PaymentMethodId = 4, SupplierInvoiceNumber = "2794", TransactionDate = DateTime.Parse("2013-01-09"), AmountExcludingTax = Decimal.Parse("10940.00"), TaxAmount = Decimal.Parse("1641.00"), TransactionAmount = Decimal.Parse("12581.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2351, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 32, PaymentMethodId = 4, SupplierInvoiceNumber = "2279", TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("168.00"), TaxAmount = Decimal.Parse("25.20"), TransactionAmount = Decimal.Parse("193.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2353, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 33, PaymentMethodId = 4, SupplierInvoiceNumber = "5876", TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("126.00"), TaxAmount = Decimal.Parse("18.90"), TransactionAmount = Decimal.Parse("144.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2356, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 34, PaymentMethodId = 4, SupplierInvoiceNumber = "1910", TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("10600.00"), TaxAmount = Decimal.Parse("1590.00"), TransactionAmount = Decimal.Parse("12190.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2358, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 35, PaymentMethodId = 4, SupplierInvoiceNumber = "5538", TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("8525.00"), TaxAmount = Decimal.Parse("1278.75"), TransactionAmount = Decimal.Parse("9803.75"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2719, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 36, PaymentMethodId = 4, SupplierInvoiceNumber = "1677", TransactionDate = DateTime.Parse("2013-01-11"), AmountExcludingTax = Decimal.Parse("1242.00"), TaxAmount = Decimal.Parse("186.30"), TransactionAmount = Decimal.Parse("1428.30"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2721, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 37, PaymentMethodId = 4, SupplierInvoiceNumber = "8004", TransactionDate = DateTime.Parse("2013-01-11"), AmountExcludingTax = Decimal.Parse("144.00"), TaxAmount = Decimal.Parse("21.60"), TransactionAmount = Decimal.Parse("165.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 2723, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 38, PaymentMethodId = 4, SupplierInvoiceNumber = "9443", TransactionDate = DateTime.Parse("2013-01-11"), AmountExcludingTax = Decimal.Parse("510.00"), TaxAmount = Decimal.Parse("76.50"), TransactionAmount = Decimal.Parse("586.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 3236, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 39, PaymentMethodId = 4, SupplierInvoiceNumber = "1097", TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("2646.00"), TaxAmount = Decimal.Parse("396.90"), TransactionAmount = Decimal.Parse("3042.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 3241, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 40, PaymentMethodId = 4, SupplierInvoiceNumber = "691", TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("553.50"), TaxAmount = Decimal.Parse("83.03"), TransactionAmount = Decimal.Parse("636.53"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 3244, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 41, PaymentMethodId = 4, SupplierInvoiceNumber = "5086", TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("1110.00"), TaxAmount = Decimal.Parse("166.50"), TransactionAmount = Decimal.Parse("1276.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 3246, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 42, PaymentMethodId = 4, SupplierInvoiceNumber = "4017", TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("1530.00"), TaxAmount = Decimal.Parse("229.50"), TransactionAmount = Decimal.Parse("1759.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-14"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-14 09:00:00.0000000") },
                new SupplierTransaction { Id = 3574, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 43, PaymentMethodId = 4, SupplierInvoiceNumber = "9295", TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("3648.00"), TaxAmount = Decimal.Parse("547.20"), TransactionAmount = Decimal.Parse("4195.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 3576, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 44, PaymentMethodId = 4, SupplierInvoiceNumber = "3601", TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("148.50"), TaxAmount = Decimal.Parse("22.28"), TransactionAmount = Decimal.Parse("170.78"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 3578, SupplierId = 7, TransactionTypeId = 5, PurchaseOrderId = 45, PaymentMethodId = 4, SupplierInvoiceNumber = "1718", TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("170.00"), TaxAmount = Decimal.Parse("25.50"), TransactionAmount = Decimal.Parse("195.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 3580, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 46, PaymentMethodId = 4, SupplierInvoiceNumber = "2921", TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("1150.00"), TaxAmount = Decimal.Parse("172.50"), TransactionAmount = Decimal.Parse("1322.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 4017, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 47, PaymentMethodId = 4, SupplierInvoiceNumber = "9303", TransactionDate = DateTime.Parse("2013-01-16"), AmountExcludingTax = Decimal.Parse("7494.00"), TaxAmount = Decimal.Parse("1124.10"), TransactionAmount = Decimal.Parse("8618.10"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 4020, SupplierId = 5, TransactionTypeId = 5, PurchaseOrderId = 48, PaymentMethodId = 4, SupplierInvoiceNumber = "1850", TransactionDate = DateTime.Parse("2013-01-16"), AmountExcludingTax = Decimal.Parse("297.00"), TaxAmount = Decimal.Parse("44.56"), TransactionAmount = Decimal.Parse("341.56"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 4022, SupplierId = 10, TransactionTypeId = 5, PurchaseOrderId = 49, PaymentMethodId = 4, SupplierInvoiceNumber = "5212", TransactionDate = DateTime.Parse("2013-01-16"), AmountExcludingTax = Decimal.Parse("1364.00"), TaxAmount = Decimal.Parse("204.60"), TransactionAmount = Decimal.Parse("1568.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") },
                new SupplierTransaction { Id = 4221, SupplierId = 4, TransactionTypeId = 5, PurchaseOrderId = 50, PaymentMethodId = 4, SupplierInvoiceNumber = "3650", TransactionDate = DateTime.Parse("2013-01-17"), AmountExcludingTax = Decimal.Parse("6162.00"), TaxAmount = Decimal.Parse("924.30"), TransactionAmount = Decimal.Parse("7086.30"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-21"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-21 09:00:00.0000000") }
            };

            context.SupplierTransactions.AddRange(supplierTransactions);
            await context.SaveChangesAsync();
        }

        #endregion Sample Purchasing Entities

        #region Sample Sales Entities

        private static async Task SeedBuyingGroupsAsync(WideWorldImportersContext context)
        {
            if (context.BuyingGroups.Any())
                return;

            var buyingGroups = new List<BuyingGroup>()
            {
                new BuyingGroup() { Id = 1, BuyingGroupName = "Tailspin Toys", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new BuyingGroup() { Id = 2, BuyingGroupName = "Wingtip Toys", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.BuyingGroups.AddRange(buyingGroups);
            await context.SaveChangesAsync();
        }

        private static async Task SeedCustomerCategoriesAsync(WideWorldImportersContext context)
        {
            if (context.CustomerCategories.Any())
                return;

            var customerCategories = new List<CustomerCategory>()
            {
                new CustomerCategory() { Id = 1, CustomerCategoryName = "Agent", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 2, CustomerCategoryName = "Wholesaler", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 3, CustomerCategoryName = "Novelty Shop", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 4, CustomerCategoryName = "Supermarket", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 5, CustomerCategoryName = "Computer Store", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 6, CustomerCategoryName = "Gift Store", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 7, CustomerCategoryName = "Corporate", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new CustomerCategory() { Id = 8, CustomerCategoryName = "General Retailer", LastEditedBy = 9, ValidFrom = DateTime.Parse("2014-01-01 16:15:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.CustomerCategories.AddRange(customerCategories);
            await context.SaveChangesAsync();
        }

        private static async Task SeedCustomersAsync(WideWorldImportersContext context)
        {
            if (context.Customers.Any())
                return;

            var customers = new List<Customer>()
            {
                new Customer { Id = 1, CustomerName = "Tailspin Toys (Head Office)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1001, AlternateContactPersonId = 1002, DeliveryMethodId = 3, DeliveryCityId = 19586, PostalCityId = 19586, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(308) 555-0100", FaxNumber = "(308) 555-0101", WebsiteUrl = "http://www.tailspintoys.com", DeliveryAddressLine1 = "Shop 38", DeliveryAddressLine2 = "1877 Mittal Road", DeliveryPostalCode = "90410", PostalAddressLine1 = "PO Box 8975", PostalAddressLine2 = "Ribeiroville", PostalPostalCode = "90410", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 2, CustomerName = "Tailspin Toys (Sylvanite, MT)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1003, AlternateContactPersonId = 1004, DeliveryMethodId = 3, DeliveryCityId = 33475, PostalCityId = 33475, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(406) 555-0100", FaxNumber = "(406) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Sylvanite", DeliveryAddressLine1 = "Shop 245", DeliveryAddressLine2 = "705 Dita Lane", DeliveryPostalCode = "90216", PostalAddressLine1 = "PO Box 259", PostalAddressLine2 = "Jogiville", PostalPostalCode = "90216", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 3, CustomerName = "Tailspin Toys (Peeples Valley, AZ)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1005, AlternateContactPersonId = 1006, DeliveryMethodId = 3, DeliveryCityId = 26483, PostalCityId = 26483, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(480) 555-0100", FaxNumber = "(480) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/PeeplesValley", DeliveryAddressLine1 = "Unit 217", DeliveryAddressLine2 = "1970 Khandke Road", DeliveryPostalCode = "90205", PostalAddressLine1 = "PO Box 3648", PostalAddressLine2 = "Lucescuville", PostalPostalCode = "90205", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 4, CustomerName = "Tailspin Toys (Medicine Lodge, KS)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1007, AlternateContactPersonId = 1008, DeliveryMethodId = 3, DeliveryCityId = 21692, PostalCityId = 21692, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(316) 555-0100", FaxNumber = "(316) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/MedicineLodge", DeliveryAddressLine1 = "Suite 164", DeliveryAddressLine2 = "967 Riutta Boulevard", DeliveryPostalCode = "90152", PostalAddressLine1 = "PO Box 5065", PostalAddressLine2 = "Maciasville", PostalPostalCode = "90152", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 5, CustomerName = "Tailspin Toys (Gasport, NY)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1009, AlternateContactPersonId = 1010, DeliveryMethodId = 3, DeliveryCityId = 12748, PostalCityId = 12748, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(212) 555-0100", FaxNumber = "(212) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Gasport", DeliveryAddressLine1 = "Unit 176", DeliveryAddressLine2 = "1674 Skujins Boulevard", DeliveryPostalCode = "90261", PostalAddressLine1 = "PO Box 6294", PostalAddressLine2 = "Kellnerovaville", PostalPostalCode = "90261", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 6, CustomerName = "Tailspin Toys (Jessie, ND)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1011, AlternateContactPersonId = 1012, DeliveryMethodId = 3, DeliveryCityId = 17054, PostalCityId = 17054, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(701) 555-0100", FaxNumber = "(701) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Jessie", DeliveryAddressLine1 = "Shop 196", DeliveryAddressLine2 = "483 Raut Lane", DeliveryPostalCode = "90298", PostalAddressLine1 = "PO Box 571", PostalAddressLine2 = "Booseville", PostalPostalCode = "90298", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 7, CustomerName = "Tailspin Toys (Frankewing, TN)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1013, AlternateContactPersonId = 1014, DeliveryMethodId = 3, DeliveryCityId = 12152, PostalCityId = 12152, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(423) 555-0100", FaxNumber = "(423) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Frankewing", DeliveryAddressLine1 = "Shop 27", DeliveryAddressLine2 = "904 Kellnerova Street", DeliveryPostalCode = "90761", PostalAddressLine1 = "PO Box 5684", PostalAddressLine2 = "Ghoshville", PostalPostalCode = "90761", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 8, CustomerName = "Tailspin Toys (Bow Mar, CO)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1015, AlternateContactPersonId = 1016, DeliveryMethodId = 3, DeliveryCityId = 3673, PostalCityId = 3673, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(303) 555-0100", FaxNumber = "(303) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/BowMar", DeliveryAddressLine1 = "Shop 282", DeliveryAddressLine2 = "752 Shaker Doust Boulevard", DeliveryPostalCode = "90484", PostalAddressLine1 = "PO Box 614", PostalAddressLine2 = "Vachaville", PostalPostalCode = "90484", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 9, CustomerName = "Tailspin Toys (Netcong, NJ)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1017, AlternateContactPersonId = 1018, DeliveryMethodId = 3, DeliveryCityId = 23805, PostalCityId = 23805, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(201) 555-0100", FaxNumber = "(201) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Netcong", DeliveryAddressLine1 = "Shop 33", DeliveryAddressLine2 = "25 Kasesalu Street", DeliveryPostalCode = "90129", PostalAddressLine1 = "PO Box 8369", PostalAddressLine2 = "Bouleville", PostalPostalCode = "90129", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 10, CustomerName = "Tailspin Toys (Wimbledon, ND)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1019, AlternateContactPersonId = 1020, DeliveryMethodId = 3, DeliveryCityId = 37403, PostalCityId = 37403, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(701) 555-0100", FaxNumber = "(701) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Wimbledon", DeliveryAddressLine1 = "Unit 67", DeliveryAddressLine2 = "372 Joo Lane", DeliveryPostalCode = "90061", PostalAddressLine1 = "PO Box 8702", PostalAddressLine2 = "Rajuville", PostalPostalCode = "90061", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 11, CustomerName = "Tailspin Toys (Devault, PA)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1021, AlternateContactPersonId = 1022, DeliveryMethodId = 3, DeliveryCityId = 8987, PostalCityId = 8987, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(215) 555-0100", FaxNumber = "(215) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Devault", DeliveryAddressLine1 = "Unit 250", DeliveryAddressLine2 = "1432 Pullela Street", DeliveryPostalCode = "90185", PostalAddressLine1 = "PO Box 2676", PostalAddressLine2 = "Rautville", PostalPostalCode = "90185", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 12, CustomerName = "Tailspin Toys (Biscay, MN)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1023, AlternateContactPersonId = 1024, DeliveryMethodId = 3, DeliveryCityId = 3081, PostalCityId = 3081, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(218) 555-0100", FaxNumber = "(218) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Biscay", DeliveryAddressLine1 = "Suite 67", DeliveryAddressLine2 = "413 Keskkula Lane", DeliveryPostalCode = "90054", PostalAddressLine1 = "PO Box 5649", PostalAddressLine2 = "Klausville", PostalPostalCode = "90054", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 13, CustomerName = "Tailspin Toys (Stonefort, IL)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1025, AlternateContactPersonId = 1026, DeliveryMethodId = 3, DeliveryCityId = 32887, PostalCityId = 32887, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(217) 555-0100", FaxNumber = "(217) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Stonefort", DeliveryAddressLine1 = "Suite 185", DeliveryAddressLine2 = "1492 Shah Road", DeliveryPostalCode = "90685", PostalAddressLine1 = "PO Box 1618", PostalAddressLine2 = "Hanville", PostalPostalCode = "90685", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 14, CustomerName = "Tailspin Toys (Long Meadow, MD)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1027, AlternateContactPersonId = 1028, DeliveryMethodId = 3, DeliveryCityId = 19908, PostalCityId = 19908, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(240) 555-0100", FaxNumber = "(240) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/LongMeadow", DeliveryAddressLine1 = "Unit 221", DeliveryAddressLine2 = "151 Vasiljevic Road", DeliveryPostalCode = "90633", PostalAddressLine1 = "PO Box 2724", PostalAddressLine2 = "Viidingville", PostalPostalCode = "90633", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 15, CustomerName = "Tailspin Toys (Batson, TX)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1029, AlternateContactPersonId = 1030, DeliveryMethodId = 3, DeliveryCityId = 2111, PostalCityId = 2111, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(210) 555-0100", FaxNumber = "(210) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Batson", DeliveryAddressLine1 = "Shop 124", DeliveryAddressLine2 = "671 Mudigonda Boulevard", DeliveryPostalCode = "90631", PostalAddressLine1 = "PO Box 1645", PostalAddressLine2 = "Acharyaville", PostalPostalCode = "90631", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 16, CustomerName = "Tailspin Toys (Coney Island, MO)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1031, AlternateContactPersonId = 1032, DeliveryMethodId = 3, DeliveryCityId = 7409, PostalCityId = 7409, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(314) 555-0100", FaxNumber = "(314) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/ConeyIsland", DeliveryAddressLine1 = "Suite 111", DeliveryAddressLine2 = "27 Vidovic Boulevard", DeliveryPostalCode = "90467", PostalAddressLine1 = "PO Box 260", PostalAddressLine2 = "Nishadville", PostalPostalCode = "90467", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 17, CustomerName = "Tailspin Toys (East Fultonham, OH)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1033, AlternateContactPersonId = 1034, DeliveryMethodId = 3, DeliveryCityId = 9791, PostalCityId = 9791, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(216) 555-0100", FaxNumber = "(216) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/EastFultonham", DeliveryAddressLine1 = "Unit 278", DeliveryAddressLine2 = "224 Hinojosa Road", DeliveryPostalCode = "90416", PostalAddressLine1 = "PO Box 7519", PostalAddressLine2 = "Gillville", PostalPostalCode = "90416", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 18, CustomerName = "Tailspin Toys (Goffstown, NH)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1035, AlternateContactPersonId = 1036, DeliveryMethodId = 3, DeliveryCityId = 13304, PostalCityId = 13304, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(603) 555-0100", FaxNumber = "(603) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Goffstown", DeliveryAddressLine1 = "Unit 166", DeliveryAddressLine2 = "1822 Gruber Lane", DeliveryPostalCode = "90321", PostalAddressLine1 = "PO Box 3254", PostalAddressLine2 = "Linnaville", PostalPostalCode = "90321", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 19, CustomerName = "Tailspin Toys (Lemeta, AK)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1037, AlternateContactPersonId = 1038, DeliveryMethodId = 3, DeliveryCityId = 19124, PostalCityId = 19124, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(907) 555-0100", FaxNumber = "(907) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Lemeta", DeliveryAddressLine1 = "Unit 174", DeliveryAddressLine2 = "1507 Izmaylov Crescent", DeliveryPostalCode = "90303", PostalAddressLine1 = "PO Box 7468", PostalAddressLine2 = "Kamasamudramville", PostalPostalCode = "90303", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 20, CustomerName = "Tailspin Toys (College Place, WA)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1039, AlternateContactPersonId = 1040, DeliveryMethodId = 3, DeliveryCityId = 7160, PostalCityId = 7160, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(206) 555-0100", FaxNumber = "(206) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/CollegePlace", DeliveryAddressLine1 = "Shop 151", DeliveryAddressLine2 = "1536 Bhutia Avenue", DeliveryPostalCode = "90050", PostalAddressLine1 = "PO Box 5317", PostalAddressLine2 = "Profisville", PostalPostalCode = "90050", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 21, CustomerName = "Tailspin Toys (Tresckow, PA)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1041, AlternateContactPersonId = 1042, DeliveryMethodId = 3, DeliveryCityId = 34403, PostalCityId = 34403, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(215) 555-0100", FaxNumber = "(215) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Tresckow", DeliveryAddressLine1 = "Shop 147", DeliveryAddressLine2 = "640 Chakraborty Street", DeliveryPostalCode = "90790", PostalAddressLine1 = "PO Box 3237", PostalAddressLine2 = "Kasesaluville", PostalPostalCode = "90790", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 22, CustomerName = "Tailspin Toys (Ward Ridge, FL)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1043, AlternateContactPersonId = 1044, DeliveryMethodId = 3, DeliveryCityId = 35844, PostalCityId = 35844, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(239) 555-0100", FaxNumber = "(239) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/WardRidge", DeliveryAddressLine1 = "Shop 26", DeliveryAddressLine2 = "73 Berg Crescent", DeliveryPostalCode = "90784", PostalAddressLine1 = "PO Box 4356", PostalAddressLine2 = "Liepaville", PostalPostalCode = "90784", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 23, CustomerName = "Tailspin Toys (Ikatan, AK)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1045, AlternateContactPersonId = 1046, DeliveryMethodId = 3, DeliveryCityId = 16411, PostalCityId = 16411, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(907) 555-0100", FaxNumber = "(907) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Ikatan", DeliveryAddressLine1 = "Unit 300", DeliveryAddressLine2 = "1467 Chang Lane", DeliveryPostalCode = "90019", PostalAddressLine1 = "PO Box 144", PostalAddressLine2 = "Vinjamuriville", PostalPostalCode = "90019", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 24, CustomerName = "Tailspin Toys (Dundarrach, NC)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1047, AlternateContactPersonId = 1048, DeliveryMethodId = 3, DeliveryCityId = 9524, PostalCityId = 9524, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(252) 555-0100", FaxNumber = "(252) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Dundarrach", DeliveryAddressLine1 = "Shop 181", DeliveryAddressLine2 = "818 Paulet Avenue", DeliveryPostalCode = "90758", PostalAddressLine1 = "PO Box 8090", PostalAddressLine2 = "Novacek ville", PostalPostalCode = "90758", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 25, CustomerName = "Tailspin Toys (Avenal, CA)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1049, AlternateContactPersonId = 1050, DeliveryMethodId = 3, DeliveryCityId = 1604, PostalCityId = 1604, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(209) 555-0100", FaxNumber = "(209) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Avenal", DeliveryAddressLine1 = "Shop 37", DeliveryAddressLine2 = "1143 Caune Crescent", DeliveryPostalCode = "90352", PostalAddressLine1 = "PO Box 8769", PostalAddressLine2 = "Mitraville", PostalPostalCode = "90352", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 26, CustomerName = "Tailspin Toys (Hedrick, IA)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1051, AlternateContactPersonId = 1052, DeliveryMethodId = 3, DeliveryCityId = 15102, PostalCityId = 15102, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(319) 555-0100", FaxNumber = "(319) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Hedrick", DeliveryAddressLine1 = "Shop 119", DeliveryAddressLine2 = "1022 Folliero Street", DeliveryPostalCode = "90331", PostalAddressLine1 = "PO Box 9620", PostalAddressLine2 = "Ivanovville", PostalPostalCode = "90331", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Customer { Id = 27, CustomerName = "Tailspin Toys (Bowlus, MN)", BillToCustomerId = 1, CustomerCategoryId = 3, BuyingGroupId = 1, PrimaryContactPersonId = 1053, AlternateContactPersonId = 1054, DeliveryMethodId = 3, DeliveryCityId = 3707, PostalCityId = 3707, AccountOpenedDate = DateTime.Parse("01.01.2013"), StandardDiscountPercentage = Decimal.Parse("0.000"), IsStatementSent = false, IsOnCreditHold = false, PaymentDays = 7, PhoneNumber = "(218) 555-0100", FaxNumber = "(218) 555-0101", WebsiteUrl = "http://www.tailspintoys.com/Bowlus", DeliveryAddressLine1 = "Shop 13", DeliveryAddressLine2 = "575 Pandit Crescent", DeliveryPostalCode = "90703", PostalAddressLine1 = "PO Box 6430", PostalAddressLine2 = "Akbulutville", PostalPostalCode = "90703", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.Customers.AddRange(customers);
            await context.SaveChangesAsync();
        }

        private static async Task SeedCustomerTransactionsAsync(WideWorldImportersContext context)
        {
            if (context.CustomerTransactions.Any())
                return;

            var customerTransactions = new List<CustomerTransaction>()
            {
                new CustomerTransaction { Id = 103, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 33,TransactionDate = DateTime.Parse("2013-01-01"), AmountExcludingTax = Decimal.Parse("32.40"), TaxAmount = Decimal.Parse("4.86"), TransactionAmount = Decimal.Parse("37.26"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-02"), IsFinalized = true, LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-02 11:30:00.0000000") },
                new CustomerTransaction { Id = 338, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 72,TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("463.20"), TaxAmount = Decimal.Parse("69.48"), TransactionAmount = Decimal.Parse("532.68"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-03"), IsFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-03 11:30:00.0000000") },
                new CustomerTransaction { Id = 404, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 92,TransactionDate = DateTime.Parse("2013-01-02"), AmountExcludingTax = Decimal.Parse("104.00"), TaxAmount = Decimal.Parse("15.60"), TransactionAmount = Decimal.Parse("119.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-03"), IsFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-03 11:30:00.0000000") },
                new CustomerTransaction { Id = 864, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 196,TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("178.00"), TaxAmount = Decimal.Parse("26.70"), TransactionAmount = Decimal.Parse("204.70"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-04"), IsFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-04 11:30:00.0000000") },
                new CustomerTransaction { Id = 868, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 197,TransactionDate = DateTime.Parse("2013-01-03"), AmountExcludingTax = Decimal.Parse("8272.00"), TaxAmount = Decimal.Parse("1240.80"), TransactionAmount = Decimal.Parse("9512.80"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-04"), IsFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-04 11:30:00.0000000") },
                new CustomerTransaction { Id = 1257, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 279,TransactionDate = DateTime.Parse("2013-01-05"), AmountExcludingTax = Decimal.Parse("475.00"), TaxAmount = Decimal.Parse("71.25"), TransactionAmount = Decimal.Parse("546.25"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-06"), IsFinalized = true, LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-06 11:30:00.0000000") },
                new CustomerTransaction { Id = 1277, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 285,TransactionDate = DateTime.Parse("2013-01-05"), AmountExcludingTax = Decimal.Parse("317.00"), TaxAmount = Decimal.Parse("47.55"), TransactionAmount = Decimal.Parse("364.55"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-06"), IsFinalized = true, LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-06 11:30:00.0000000") },
                new CustomerTransaction { Id = 1925, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 418,TransactionDate = DateTime.Parse("2013-01-08"), AmountExcludingTax = Decimal.Parse("2014.00"), TaxAmount = Decimal.Parse("302.10"), TransactionAmount = Decimal.Parse("2316.10"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-09"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-09 11:30:00.0000000") },
                new CustomerTransaction { Id = 2381, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 511,TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("509.00"), TaxAmount = Decimal.Parse("76.35"), TransactionAmount = Decimal.Parse("585.35"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-11"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-11 11:30:00.0000000") },
                new CustomerTransaction { Id = 2386, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 512,TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("588.75"), TaxAmount = Decimal.Parse("88.31"), TransactionAmount = Decimal.Parse("677.06"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-11"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-11 11:30:00.0000000") },
                new CustomerTransaction { Id = 2392, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 513,TransactionDate = DateTime.Parse("2013-01-10"), AmountExcludingTax = Decimal.Parse("846.00"), TaxAmount = Decimal.Parse("126.90"), TransactionAmount = Decimal.Parse("972.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-11"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-11 11:30:00.0000000") },
                new CustomerTransaction { Id = 2750, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 590,TransactionDate = DateTime.Parse("2013-01-11"), AmountExcludingTax = Decimal.Parse("2108.00"), TaxAmount = Decimal.Parse("316.20"), TransactionAmount = Decimal.Parse("2424.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-12"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 2755, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 591,TransactionDate = DateTime.Parse("2013-01-11"), AmountExcludingTax = Decimal.Parse("9718.00"), TaxAmount = Decimal.Parse("1457.70"), TransactionAmount = Decimal.Parse("11175.70"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-12"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 2759, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 592,TransactionDate = DateTime.Parse("2013-01-11"), AmountExcludingTax = Decimal.Parse("320.00"), TaxAmount = Decimal.Parse("48.00"), TransactionAmount = Decimal.Parse("368.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-12"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 3118, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 665,TransactionDate = DateTime.Parse("2013-01-12"), AmountExcludingTax = Decimal.Parse("624.00"), TaxAmount = Decimal.Parse("93.60"), TransactionAmount = Decimal.Parse("717.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-13"), IsFinalized = true, LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-13 11:30:00.0000000") },
                new CustomerTransaction { Id = 3123, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 666,TransactionDate = DateTime.Parse("2013-01-12"), AmountExcludingTax = Decimal.Parse("5343.40"), TaxAmount = Decimal.Parse("801.51"), TransactionAmount = Decimal.Parse("6144.91"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-13"), IsFinalized = true, LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-13 11:30:00.0000000") },
                new CustomerTransaction { Id = 3127, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 667,TransactionDate = DateTime.Parse("2013-01-12"), AmountExcludingTax = Decimal.Parse("8749.00"), TaxAmount = Decimal.Parse("1312.35"), TransactionAmount = Decimal.Parse("10061.35"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-13"), IsFinalized = true, LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-13 11:30:00.0000000") },
                new CustomerTransaction { Id = 3255, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 689,TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("3139.65"), TaxAmount = Decimal.Parse("470.95"), TransactionAmount = Decimal.Parse("3610.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-15"), IsFinalized = true, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-15 11:30:00.0000000") },
                new CustomerTransaction { Id = 3259, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 690,TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("877.00"), TaxAmount = Decimal.Parse("131.55"), TransactionAmount = Decimal.Parse("1008.55"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-15"), IsFinalized = true, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-15 11:30:00.0000000") },
                new CustomerTransaction { Id = 3265, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 691,TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("2549.20"), TaxAmount = Decimal.Parse("382.38"), TransactionAmount = Decimal.Parse("2931.58"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-15"), IsFinalized = true, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-15 11:30:00.0000000") },
                new CustomerTransaction { Id = 3271, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 692,TransactionDate = DateTime.Parse("2013-01-14"), AmountExcludingTax = Decimal.Parse("5700.00"), TaxAmount = Decimal.Parse("855.00"), TransactionAmount = Decimal.Parse("6555.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-15"), IsFinalized = true, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-15 11:30:00.0000000") },
                new CustomerTransaction { Id = 3612, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 761,TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("2160.00"), TaxAmount = Decimal.Parse("324.00"), TransactionAmount = Decimal.Parse("2484.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-16"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-16 11:30:00.0000000") },
                new CustomerTransaction { Id = 3615, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 762,TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("416.00"), TaxAmount = Decimal.Parse("62.40"), TransactionAmount = Decimal.Parse("478.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-16"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-16 11:30:00.0000000") },
                new CustomerTransaction { Id = 3620, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 763,TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("702.00"), TaxAmount = Decimal.Parse("105.30"), TransactionAmount = Decimal.Parse("807.30"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-16"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-16 11:30:00.0000000") },
                new CustomerTransaction { Id = 3625, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 764,TransactionDate = DateTime.Parse("2013-01-15"), AmountExcludingTax = Decimal.Parse("1642.00"), TaxAmount = Decimal.Parse("246.30"), TransactionAmount = Decimal.Parse("1888.30"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-16"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-16 11:30:00.0000000") },
                new CustomerTransaction { Id = 4056, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 854,TransactionDate = DateTime.Parse("2013-01-16"), AmountExcludingTax = Decimal.Parse("2676.00"), TaxAmount = Decimal.Parse("401.40"), TransactionAmount = Decimal.Parse("3077.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-17"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-17 11:30:00.0000000") },
                new CustomerTransaction { Id = 4059, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 855,TransactionDate = DateTime.Parse("2013-01-16"), AmountExcludingTax = Decimal.Parse("639.00"), TaxAmount = Decimal.Parse("95.85"), TransactionAmount = Decimal.Parse("734.85"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-17"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-17 11:30:00.0000000") },
                new CustomerTransaction { Id = 4065, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 856,TransactionDate = DateTime.Parse("2013-01-16"), AmountExcludingTax = Decimal.Parse("1853.50"), TaxAmount = Decimal.Parse("278.03"), TransactionAmount = Decimal.Parse("2131.53"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-17"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-17 11:30:00.0000000") },
                new CustomerTransaction { Id = 4501, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 949,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("4325.00"), TaxAmount = Decimal.Parse("648.75"), TransactionAmount = Decimal.Parse("4973.75"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4506, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 950,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("1787.50"), TaxAmount = Decimal.Parse("268.13"), TransactionAmount = Decimal.Parse("2055.63"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4518, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 953,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("2608.00"), TaxAmount = Decimal.Parse("391.20"), TransactionAmount = Decimal.Parse("2999.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4734, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1001,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("778.00"), TaxAmount = Decimal.Parse("116.70"), TransactionAmount = Decimal.Parse("894.70"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4742, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1003,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("586.00"), TaxAmount = Decimal.Parse("87.90"), TransactionAmount = Decimal.Parse("673.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4745, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1004,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("182.50"), TaxAmount = Decimal.Parse("27.38"), TransactionAmount = Decimal.Parse("209.88"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4780, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1012,TransactionDate = DateTime.Parse("2013-01-18"), AmountExcludingTax = Decimal.Parse("2100.00"), TaxAmount = Decimal.Parse("315.00"), TransactionAmount = Decimal.Parse("2415.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-19"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 4883, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1032,TransactionDate = DateTime.Parse("2013-01-19"), AmountExcludingTax = Decimal.Parse("3379.20"), TaxAmount = Decimal.Parse("506.88"), TransactionAmount = Decimal.Parse("3886.08"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-20"), IsFinalized = true, LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-20 11:30:00.0000000") },
                new CustomerTransaction { Id = 5129, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1082,TransactionDate = DateTime.Parse("2013-01-21"), AmountExcludingTax = Decimal.Parse("1921.60"), TaxAmount = Decimal.Parse("288.24"), TransactionAmount = Decimal.Parse("2209.84"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-22"), IsFinalized = true, LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-22 11:30:00.0000000") },
                new CustomerTransaction { Id = 5217, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1099,TransactionDate = DateTime.Parse("2013-01-22"), AmountExcludingTax = Decimal.Parse("1387.00"), TaxAmount = Decimal.Parse("208.05"), TransactionAmount = Decimal.Parse("1595.05"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-23"), IsFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-23 11:30:00.0000000") },
                new CustomerTransaction { Id = 5232, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1103,TransactionDate = DateTime.Parse("2013-01-22"), AmountExcludingTax = Decimal.Parse("1297.20"), TaxAmount = Decimal.Parse("194.58"), TransactionAmount = Decimal.Parse("1491.78"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-23"), IsFinalized = true, LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-23 11:30:00.0000000") },
                new CustomerTransaction { Id = 5421, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1143,TransactionDate = DateTime.Parse("2013-01-23"), AmountExcludingTax = Decimal.Parse("2304.00"), TaxAmount = Decimal.Parse("345.60"), TransactionAmount = Decimal.Parse("2649.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-24"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-24 11:30:00.0000000") },
                new CustomerTransaction { Id = 5504, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1162,TransactionDate = DateTime.Parse("2013-01-23"), AmountExcludingTax = Decimal.Parse("2802.00"), TaxAmount = Decimal.Parse("420.30"), TransactionAmount = Decimal.Parse("3222.30"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-24"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-24 11:30:00.0000000") },
                new CustomerTransaction { Id = 5625, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1189,TransactionDate = DateTime.Parse("2013-01-23"), AmountExcludingTax = Decimal.Parse("10679.00"), TaxAmount = Decimal.Parse("1601.85"), TransactionAmount = Decimal.Parse("12280.85"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-24"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-24 11:30:00.0000000") },
                new CustomerTransaction { Id = 5824, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1228,TransactionDate = DateTime.Parse("2013-01-24"), AmountExcludingTax = Decimal.Parse("10301.00"), TaxAmount = Decimal.Parse("1545.15"), TransactionAmount = Decimal.Parse("11846.15"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-25"), IsFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-25 11:30:00.0000000") },
                new CustomerTransaction { Id = 6058, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1278,TransactionDate = DateTime.Parse("2013-01-25"), AmountExcludingTax = Decimal.Parse("1419.65"), TaxAmount = Decimal.Parse("212.95"), TransactionAmount = Decimal.Parse("1632.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-26"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-26 11:30:00.0000000") },
                new CustomerTransaction { Id = 6201, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1311,TransactionDate = DateTime.Parse("2013-01-25"), AmountExcludingTax = Decimal.Parse("3232.00"), TaxAmount = Decimal.Parse("484.80"), TransactionAmount = Decimal.Parse("3716.80"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-26"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-26 11:30:00.0000000") },
                new CustomerTransaction { Id = 6213, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1314,TransactionDate = DateTime.Parse("2013-01-25"), AmountExcludingTax = Decimal.Parse("833.50"), TaxAmount = Decimal.Parse("125.03"), TransactionAmount = Decimal.Parse("958.53"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-26"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-26 11:30:00.0000000") },
                new CustomerTransaction { Id = 6227, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1317,TransactionDate = DateTime.Parse("2013-01-25"), AmountExcludingTax = Decimal.Parse("461.00"), TaxAmount = Decimal.Parse("69.15"), TransactionAmount = Decimal.Parse("530.15"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-26"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-26 11:30:00.0000000") },
                new CustomerTransaction { Id = 6366, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1343,TransactionDate = DateTime.Parse("2013-01-26"), AmountExcludingTax = Decimal.Parse("3660.00"), TaxAmount = Decimal.Parse("549.00"), TransactionAmount = Decimal.Parse("4209.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-27"), IsFinalized = true, LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-27 11:30:00.0000000") },
                new CustomerTransaction { Id = 6471, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1361,TransactionDate = DateTime.Parse("2013-01-28"), AmountExcludingTax = Decimal.Parse("1190.00"), TaxAmount = Decimal.Parse("178.50"), TransactionAmount = Decimal.Parse("1368.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-29"), IsFinalized = true, LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-29 11:30:00.0000000") },
                new CustomerTransaction { Id = 6492, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1365,TransactionDate = DateTime.Parse("2013-01-28"), AmountExcludingTax = Decimal.Parse("10977.00"), TaxAmount = Decimal.Parse("1646.55"), TransactionAmount = Decimal.Parse("12623.55"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-29"), IsFinalized = true, LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-29 11:30:00.0000000") },
                new CustomerTransaction { Id = 6522, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1371,TransactionDate = DateTime.Parse("2013-01-28"), AmountExcludingTax = Decimal.Parse("494.00"), TaxAmount = Decimal.Parse("74.10"), TransactionAmount = Decimal.Parse("568.10"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-29"), IsFinalized = true, LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-29 11:30:00.0000000") },
                new CustomerTransaction { Id = 6636, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1396,TransactionDate = DateTime.Parse("2013-01-28"), AmountExcludingTax = Decimal.Parse("5734.05"), TaxAmount = Decimal.Parse("860.11"), TransactionAmount = Decimal.Parse("6594.16"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-29"), IsFinalized = true, LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-29 11:30:00.0000000") },
                new CustomerTransaction { Id = 6765, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1419,TransactionDate = DateTime.Parse("2013-01-29"), AmountExcludingTax = Decimal.Parse("1080.00"), TaxAmount = Decimal.Parse("162.00"), TransactionAmount = Decimal.Parse("1242.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-30"), IsFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-30 11:30:00.0000000") },
                new CustomerTransaction { Id = 6808, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1429,TransactionDate = DateTime.Parse("2013-01-29"), AmountExcludingTax = Decimal.Parse("1570.00"), TaxAmount = Decimal.Parse("235.50"), TransactionAmount = Decimal.Parse("1805.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-30"), IsFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-30 11:30:00.0000000") },
                new CustomerTransaction { Id = 6826, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1434,TransactionDate = DateTime.Parse("2013-01-29"), AmountExcludingTax = Decimal.Parse("5495.00"), TaxAmount = Decimal.Parse("824.25"), TransactionAmount = Decimal.Parse("6319.25"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-30"), IsFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-30 11:30:00.0000000") },
                new CustomerTransaction { Id = 6889, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1447,TransactionDate = DateTime.Parse("2013-01-29"), AmountExcludingTax = Decimal.Parse("490.40"), TaxAmount = Decimal.Parse("73.56"), TransactionAmount = Decimal.Parse("563.96"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-30"), IsFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-30 11:30:00.0000000") },
                new CustomerTransaction { Id = 6962, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1462,TransactionDate = DateTime.Parse("2013-01-29"), AmountExcludingTax = Decimal.Parse("8216.85"), TaxAmount = Decimal.Parse("1232.53"), TransactionAmount = Decimal.Parse("9449.38"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-30"), IsFinalized = true, LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-30 11:30:00.0000000") },
                new CustomerTransaction { Id = 7164, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1498,TransactionDate = DateTime.Parse("2013-01-30"), AmountExcludingTax = Decimal.Parse("2160.00"), TaxAmount = Decimal.Parse("324.00"), TransactionAmount = Decimal.Parse("2484.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-31"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-31 11:30:00.0000000") },
                new CustomerTransaction { Id = 7287, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1528,TransactionDate = DateTime.Parse("2013-01-30"), AmountExcludingTax = Decimal.Parse("551.00"), TaxAmount = Decimal.Parse("82.65"), TransactionAmount = Decimal.Parse("633.65"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-31"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-31 11:30:00.0000000") },
                new CustomerTransaction { Id = 7335, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1538,TransactionDate = DateTime.Parse("2013-01-30"), AmountExcludingTax = Decimal.Parse("5346.00"), TaxAmount = Decimal.Parse("801.90"), TransactionAmount = Decimal.Parse("6147.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-31"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-31 11:30:00.0000000") },
                new CustomerTransaction { Id = 7360, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1544,TransactionDate = DateTime.Parse("2013-01-30"), AmountExcludingTax = Decimal.Parse("1734.00"), TaxAmount = Decimal.Parse("260.10"), TransactionAmount = Decimal.Parse("1994.10"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-31"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-31 11:30:00.0000000") },
                new CustomerTransaction { Id = 7448, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1563,TransactionDate = DateTime.Parse("2013-01-30"), AmountExcludingTax = Decimal.Parse("11511.00"), TaxAmount = Decimal.Parse("1726.65"), TransactionAmount = Decimal.Parse("13237.65"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-01-31"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-31 11:30:00.0000000") },
                new CustomerTransaction { Id = 7744, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1620,TransactionDate = DateTime.Parse("2013-01-31"), AmountExcludingTax = Decimal.Parse("313.00"), TaxAmount = Decimal.Parse("46.95"), TransactionAmount = Decimal.Parse("359.95"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-01"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-02-01 11:30:00.0000000") },
                new CustomerTransaction { Id = 7764, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1625,TransactionDate = DateTime.Parse("2013-01-31"), AmountExcludingTax = Decimal.Parse("836.00"), TaxAmount = Decimal.Parse("125.40"), TransactionAmount = Decimal.Parse("961.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-01"), IsFinalized = true, LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-02-01 11:30:00.0000000") },
                new CustomerTransaction { Id = 7942, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1660,TransactionDate = DateTime.Parse("2013-02-01"), AmountExcludingTax = Decimal.Parse("3608.00"), TaxAmount = Decimal.Parse("541.20"), TransactionAmount = Decimal.Parse("4149.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-02"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-02 11:30:00.0000000") },
                new CustomerTransaction { Id = 8134, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1704,TransactionDate = DateTime.Parse("2013-02-01"), AmountExcludingTax = Decimal.Parse("615.00"), TaxAmount = Decimal.Parse("92.25"), TransactionAmount = Decimal.Parse("707.25"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-02"), IsFinalized = true, LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-02 11:30:00.0000000") },
                new CustomerTransaction { Id = 8227, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1718,TransactionDate = DateTime.Parse("2013-02-02"), AmountExcludingTax = Decimal.Parse("1071.00"), TaxAmount = Decimal.Parse("160.65"), TransactionAmount = Decimal.Parse("1231.65"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-03"), IsFinalized = true, LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-03 11:30:00.0000000") },
                new CustomerTransaction { Id = 8319, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1740,TransactionDate = DateTime.Parse("2013-02-02"), AmountExcludingTax = Decimal.Parse("2606.00"), TaxAmount = Decimal.Parse("390.90"), TransactionAmount = Decimal.Parse("2996.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-03"), IsFinalized = true, LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-03 11:30:00.0000000") },
                new CustomerTransaction { Id = 8368, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1745,TransactionDate = DateTime.Parse("2013-02-04"), AmountExcludingTax = Decimal.Parse("2947.00"), TaxAmount = Decimal.Parse("442.05"), TransactionAmount = Decimal.Parse("3389.05"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-05"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-05 11:30:00.0000000") },
                new CustomerTransaction { Id = 8372, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1746,TransactionDate = DateTime.Parse("2013-02-04"), AmountExcludingTax = Decimal.Parse("807.00"), TaxAmount = Decimal.Parse("121.05"), TransactionAmount = Decimal.Parse("928.05"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-05"), IsFinalized = true, LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-05 11:30:00.0000000") },
                new CustomerTransaction { Id = 8835, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1840,TransactionDate = DateTime.Parse("2013-02-06"), AmountExcludingTax = Decimal.Parse("3572.00"), TaxAmount = Decimal.Parse("535.80"), TransactionAmount = Decimal.Parse("4107.80"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-07"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-07 11:30:00.0000000") },
                new CustomerTransaction { Id = 8841, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1841,TransactionDate = DateTime.Parse("2013-02-06"), AmountExcludingTax = Decimal.Parse("1096.00"), TaxAmount = Decimal.Parse("164.40"), TransactionAmount = Decimal.Parse("1260.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-07"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-07 11:30:00.0000000") },
                new CustomerTransaction { Id = 8846, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1842,TransactionDate = DateTime.Parse("2013-02-06"), AmountExcludingTax = Decimal.Parse("2673.60"), TaxAmount = Decimal.Parse("401.04"), TransactionAmount = Decimal.Parse("3074.64"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-07"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-07 11:30:00.0000000") },
                new CustomerTransaction { Id = 8850, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1843,TransactionDate = DateTime.Parse("2013-02-06"), AmountExcludingTax = Decimal.Parse("1661.00"), TaxAmount = Decimal.Parse("249.15"), TransactionAmount = Decimal.Parse("1910.15"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-07"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-07 11:30:00.0000000") },
                new CustomerTransaction { Id = 9026, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1876,TransactionDate = DateTime.Parse("2013-02-07"), AmountExcludingTax = Decimal.Parse("2165.00"), TaxAmount = Decimal.Parse("324.75"), TransactionAmount = Decimal.Parse("2489.75"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-08"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-08 11:30:00.0000000") },
                new CustomerTransaction { Id = 9199, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1911,TransactionDate = DateTime.Parse("2013-02-08"), AmountExcludingTax = Decimal.Parse("295.00"), TaxAmount = Decimal.Parse("44.25"), TransactionAmount = Decimal.Parse("339.25"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-09"), IsFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-09 11:30:00.0000000") },
                new CustomerTransaction { Id = 9203, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1912,TransactionDate = DateTime.Parse("2013-02-08"), AmountExcludingTax = Decimal.Parse("1808.00"), TaxAmount = Decimal.Parse("271.20"), TransactionAmount = Decimal.Parse("2079.20"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-09"), IsFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-09 11:30:00.0000000") },
                new CustomerTransaction { Id = 9206, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1913,TransactionDate = DateTime.Parse("2013-02-08"), AmountExcludingTax = Decimal.Parse("2390.00"), TaxAmount = Decimal.Parse("358.50"), TransactionAmount = Decimal.Parse("2748.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-09"), IsFinalized = true, LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-09 11:30:00.0000000") },
                new CustomerTransaction { Id = 9478, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1970,TransactionDate = DateTime.Parse("2013-02-09"), AmountExcludingTax = Decimal.Parse("10090.00"), TaxAmount = Decimal.Parse("1513.50"), TransactionAmount = Decimal.Parse("11603.50"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-10"), IsFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-02-10 11:30:00.0000000") },
                new CustomerTransaction { Id = 9481, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 1971,TransactionDate = DateTime.Parse("2013-02-09"), AmountExcludingTax = Decimal.Parse("138.00"), TaxAmount = Decimal.Parse("20.70"), TransactionAmount = Decimal.Parse("158.70"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-10"), IsFinalized = true, LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-02-10 11:30:00.0000000") },
                new CustomerTransaction { Id = 9710, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2015,TransactionDate = DateTime.Parse("2013-02-11"), AmountExcludingTax = Decimal.Parse("4377.00"), TaxAmount = Decimal.Parse("656.55"), TransactionAmount = Decimal.Parse("5033.55"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-12"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 9712, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2016,TransactionDate = DateTime.Parse("2013-02-11"), AmountExcludingTax = Decimal.Parse("1680.00"), TaxAmount = Decimal.Parse("252.00"), TransactionAmount = Decimal.Parse("1932.00"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-12"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 9716, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2017,TransactionDate = DateTime.Parse("2013-02-11"), AmountExcludingTax = Decimal.Parse("2532.80"), TaxAmount = Decimal.Parse("379.92"), TransactionAmount = Decimal.Parse("2912.72"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-12"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 9719, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2018,TransactionDate = DateTime.Parse("2013-02-11"), AmountExcludingTax = Decimal.Parse("1176.00"), TaxAmount = Decimal.Parse("176.40"), TransactionAmount = Decimal.Parse("1352.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-12"), IsFinalized = true, LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-02-12 11:30:00.0000000") },
                new CustomerTransaction { Id = 10053, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2084,TransactionDate = DateTime.Parse("2013-02-12"), AmountExcludingTax = Decimal.Parse("2824.00"), TaxAmount = Decimal.Parse("423.60"), TransactionAmount = Decimal.Parse("3247.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-13"), IsFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-13 11:30:00.0000000") },
                new CustomerTransaction { Id = 10204, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2117,TransactionDate = DateTime.Parse("2013-02-13"), AmountExcludingTax = Decimal.Parse("864.00"), TaxAmount = Decimal.Parse("129.60"), TransactionAmount = Decimal.Parse("993.60"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-14"), IsFinalized = true, LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-14 11:30:00.0000000") },
                new CustomerTransaction { Id = 10208, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2118,TransactionDate = DateTime.Parse("2013-02-13"), AmountExcludingTax = Decimal.Parse("2422.00"), TaxAmount = Decimal.Parse("363.30"), TransactionAmount = Decimal.Parse("2785.30"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-14"), IsFinalized = true, LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-14 11:30:00.0000000") },
                new CustomerTransaction { Id = 10390, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2157,TransactionDate = DateTime.Parse("2013-02-14"), AmountExcludingTax = Decimal.Parse("8973.00"), TaxAmount = Decimal.Parse("1345.95"), TransactionAmount = Decimal.Parse("10318.95"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-15"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-15 11:30:00.0000000") },
                new CustomerTransaction { Id = 10665, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2216,TransactionDate = DateTime.Parse("2013-02-15"), AmountExcludingTax = Decimal.Parse("511.00"), TaxAmount = Decimal.Parse("76.65"), TransactionAmount = Decimal.Parse("587.65"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-16"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 11:30:00.0000000") },
                new CustomerTransaction { Id = 10669, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2217,TransactionDate = DateTime.Parse("2013-02-15"), AmountExcludingTax = Decimal.Parse("506.00"), TaxAmount = Decimal.Parse("75.90"), TransactionAmount = Decimal.Parse("581.90"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-16"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 11:30:00.0000000") },
                new CustomerTransaction { Id = 10851, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2256,TransactionDate = DateTime.Parse("2013-02-16"), AmountExcludingTax = Decimal.Parse("1174.50"), TaxAmount = Decimal.Parse("176.18"), TransactionAmount = Decimal.Parse("1350.68"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-17"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-17 11:30:00.0000000") },
                new CustomerTransaction { Id = 10856, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2257,TransactionDate = DateTime.Parse("2013-02-16"), AmountExcludingTax = Decimal.Parse("7252.80"), TaxAmount = Decimal.Parse("1087.92"), TransactionAmount = Decimal.Parse("8340.72"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-17"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-17 11:30:00.0000000") },
                new CustomerTransaction { Id = 10862, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2258,TransactionDate = DateTime.Parse("2013-02-16"), AmountExcludingTax = Decimal.Parse("972.00"), TaxAmount = Decimal.Parse("145.80"), TransactionAmount = Decimal.Parse("1117.80"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-17"), IsFinalized = true, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-17 11:30:00.0000000") },
                new CustomerTransaction { Id = 11085, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2306,TransactionDate = DateTime.Parse("2013-02-18"), AmountExcludingTax = Decimal.Parse("3296.00"), TaxAmount = Decimal.Parse("494.40"), TransactionAmount = Decimal.Parse("3790.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-19"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 11094, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2308,TransactionDate = DateTime.Parse("2013-02-18"), AmountExcludingTax = Decimal.Parse("2056.00"), TaxAmount = Decimal.Parse("308.40"), TransactionAmount = Decimal.Parse("2364.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-19"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 11155, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2321,TransactionDate = DateTime.Parse("2013-02-18"), AmountExcludingTax = Decimal.Parse("4374.00"), TaxAmount = Decimal.Parse("656.10"), TransactionAmount = Decimal.Parse("5030.10"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-19"), IsFinalized = true, LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-19 11:30:00.0000000") },
                new CustomerTransaction { Id = 11292, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2344,TransactionDate = DateTime.Parse("2013-02-19"), AmountExcludingTax = Decimal.Parse("1296.00"), TaxAmount = Decimal.Parse("194.40"), TransactionAmount = Decimal.Parse("1490.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-20"), IsFinalized = true, LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-20 11:30:00.0000000") },
                new CustomerTransaction { Id = 12456, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2585,TransactionDate = DateTime.Parse("2013-02-25"), AmountExcludingTax = Decimal.Parse("1296.00"), TaxAmount = Decimal.Parse("194.40"), TransactionAmount = Decimal.Parse("1490.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-26"), IsFinalized = true, LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-26 11:30:00.0000000") },
                new CustomerTransaction { Id = 12910, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2682,TransactionDate = DateTime.Parse("2013-02-27"), AmountExcludingTax = Decimal.Parse("1296.00"), TaxAmount = Decimal.Parse("194.40"), TransactionAmount = Decimal.Parse("1490.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-02-28"), IsFinalized = true, LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-28 11:30:00.0000000") },
                new CustomerTransaction { Id = 13095, CustomerId = 1, TransactionTypeId = 1, InvoiceId = 2718,TransactionDate = DateTime.Parse("2013-02-28"), AmountExcludingTax = Decimal.Parse("1296.00"), TaxAmount = Decimal.Parse("194.40"), TransactionAmount = Decimal.Parse("1490.40"), OutstandingBalance = Decimal.Parse("0.00"), FinalizationDate = DateTime.Parse("2013-03-01"), IsFinalized = true, LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-03-01 11:30:00.0000000") }
            };

            context.CustomerTransactions.AddRange(customerTransactions);
            await context.SaveChangesAsync();
        }

        private static async Task SeedInvoicesAsync(WideWorldImportersContext context)
        {
            if (context.Invoices.Any())
                return;

            var invoices = new List<Invoice>()
            {
                new Invoice { Id = 33, CustomerId = 10, BillToCustomerId = 1, OrderId = 36, DeliveryMethodId = 3, ContactPersonId = 1019, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-01"), CustomerPurchaseOrderNumber = "14486", IsCreditNote = false, DeliveryInstructions = "Unit 67, 372 Joo Lane", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-01T12:00:00\",\"ConNote\":\"EAN-125-1083\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-02T09:45:00\",\"ConNote\":\"EAN-125-1083\",\"DriverID\":15,\"Latitude\":47.1697143,\"Longitude\":-98.4598177,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-02T09:45:00\",\"ReceivedBy\":\"Siddhartha Parkar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-02 09:45:00.0000000"), ConfirmedReceivedBy = "Siddhartha Parkar", LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-02 07:00:00.0000000") },
                new Invoice { Id = 72, CustomerId = 10, BillToCustomerId = 1, OrderId = 72, DeliveryMethodId = 3, ContactPersonId = 1019, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 2, InvoiceDate = DateTime.Parse("2013-01-02"), CustomerPurchaseOrderNumber = "14486", IsCreditNote = false, DeliveryInstructions = "Unit 67, 372 Joo Lane", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-02T12:00:00\",\"ConNote\":\"EAN-125-1122\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-03T09:35:00\",\"ConNote\":\"EAN-125-1122\",\"DriverID\":17,\"Latitude\":47.1697143,\"Longitude\":-98.4598177,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-03T09:35:00\",\"ReceivedBy\":\"Siddhartha Parkar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-03 09:35:00.0000000"), ConfirmedReceivedBy = "Siddhartha Parkar", LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new Invoice { Id = 92, CustomerId = 3, BillToCustomerId = 1, OrderId = 93, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 2, InvoiceDate = DateTime.Parse("2013-01-02"), CustomerPurchaseOrderNumber = "11991", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-02T12:00:00\",\"ConNote\":\"EAN-125-1142\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-03T11:15:00\",\"ConNote\":\"EAN-125-1142\",\"DriverID\":17,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-03T11:15:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-03 11:15:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-03 07:00:00.0000000") },
                new Invoice { Id = 196, CustomerId = 27, BillToCustomerId = 1, OrderId = 196, DeliveryMethodId = 3, ContactPersonId = 1053, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 19, InvoiceDate = DateTime.Parse("2013-01-03"), CustomerPurchaseOrderNumber = "14441", IsCreditNote = false, DeliveryInstructions = "Shop 13, 575 Pandit Crescent", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-03T12:00:00\",\"ConNote\":\"EAN-125-1246\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-04T12:45:00\",\"ConNote\":\"EAN-125-1246\",\"DriverID\":10,\"Latitude\":45.8194098,\"Longitude\":-94.4094468,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-04T12:45:00\",\"ReceivedBy\":\"Paula Gonzales\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-04 12:45:00.0000000"), ConfirmedReceivedBy = "Paula Gonzales", LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new Invoice { Id = 197, CustomerId = 14, BillToCustomerId = 1, OrderId = 197, DeliveryMethodId = 3, ContactPersonId = 1027, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 19, InvoiceDate = DateTime.Parse("2013-01-03"), CustomerPurchaseOrderNumber = "19357", IsCreditNote = false, DeliveryInstructions = "Unit 221, 151 Vasiljevic Road", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-03T12:00:00\",\"ConNote\":\"EAN-125-1247\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-04T12:50:00\",\"ConNote\":\"EAN-125-1247\",\"DriverID\":10,\"Latitude\":39.6862063,\"Longitude\":-77.7122154,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-04T12:50:00\",\"ReceivedBy\":\"Tereza Valentova\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-04 12:50:00.0000000"), ConfirmedReceivedBy = "Tereza Valentova", LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-01-04 07:00:00.0000000") },
                new Invoice { Id = 279, CustomerId = 2, BillToCustomerId = 1, OrderId = 288, DeliveryMethodId = 3, ContactPersonId = 1003, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 11, InvoiceDate = DateTime.Parse("2013-01-05"), CustomerPurchaseOrderNumber = "18246", IsCreditNote = false, DeliveryInstructions = "Shop 245, 705 Dita Lane", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-05T12:00:00\",\"ConNote\":\"EAN-125-1329\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-06T07:50:00\",\"ConNote\":\"EAN-125-1329\",\"DriverID\":9,\"Latitude\":48.7163356,\"Longitude\":-115.8743507,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-06T07:50:00\",\"ReceivedBy\":\"Lorena Cindric\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-06 07:50:00.0000000"), ConfirmedReceivedBy = "Lorena Cindric", LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-06 07:00:00.0000000") },
                new Invoice { Id = 285, CustomerId = 6, BillToCustomerId = 1, OrderId = 294, DeliveryMethodId = 3, ContactPersonId = 1011, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 11, InvoiceDate = DateTime.Parse("2013-01-05"), CustomerPurchaseOrderNumber = "15464", IsCreditNote = false, DeliveryInstructions = "Shop 196, 483 Raut Lane", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-05T12:00:00\",\"ConNote\":\"EAN-125-1335\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-06T08:20:00\",\"ConNote\":\"EAN-125-1335\",\"DriverID\":9,\"Latitude\":47.5422180,\"Longitude\":-98.2381519,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-06T08:20:00\",\"ReceivedBy\":\"Biswajeet Thakur\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-06 08:20:00.0000000"), ConfirmedReceivedBy = "Biswajeet Thakur", LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-06 07:00:00.0000000") },
                new Invoice { Id = 418, CustomerId = 26, BillToCustomerId = 1, OrderId = 434, DeliveryMethodId = 3, ContactPersonId = 1051, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-08"), CustomerPurchaseOrderNumber = "13768", IsCreditNote = false, DeliveryInstructions = "Shop 119, 1022 Folliero Street", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-08T12:00:00\",\"ConNote\":\"EAN-125-1468\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-09T07:05:00\",\"ConNote\":\"EAN-125-1468\",\"DriverID\":6,\"Latitude\":41.1725134,\"Longitude\":-92.3087945,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-09T07:05:00\",\"ReceivedBy\":\"Dhanishta Majji\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-09 07:05:00.0000000"), ConfirmedReceivedBy = "Dhanishta Majji", LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-09 07:00:00.0000000") },
                new Invoice { Id = 511, CustomerId = 8, BillToCustomerId = 1, OrderId = 582, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 12, InvoiceDate = DateTime.Parse("2013-01-10"), CustomerPurchaseOrderNumber = "19664", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-10T12:00:00\",\"ConNote\":\"EAN-125-1561\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-11T07:05:00\",\"ConNote\":\"EAN-125-1561\",\"DriverID\":9,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-11T07:05:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-11 07:05:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-11 07:00:00.0000000") },
                new Invoice { Id = 512, CustomerId = 14, BillToCustomerId = 1, OrderId = 523, DeliveryMethodId = 3, ContactPersonId = 1027, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 12, InvoiceDate = DateTime.Parse("2013-01-10"), CustomerPurchaseOrderNumber = "10924", IsCreditNote = false, DeliveryInstructions = "Unit 221, 151 Vasiljevic Road", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-10T12:00:00\",\"ConNote\":\"EAN-125-1562\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-11T07:10:00\",\"ConNote\":\"EAN-125-1562\",\"DriverID\":9,\"Latitude\":39.6862063,\"Longitude\":-77.7122154,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-11T07:10:00\",\"ReceivedBy\":\"Tereza Valentova\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-11 07:10:00.0000000"), ConfirmedReceivedBy = "Tereza Valentova", LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-11 07:00:00.0000000") },
                new Invoice { Id = 513, CustomerId = 16, BillToCustomerId = 1, OrderId = 584, DeliveryMethodId = 3, ContactPersonId = 1031, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 12, InvoiceDate = DateTime.Parse("2013-01-10"), CustomerPurchaseOrderNumber = "10978", IsCreditNote = false, DeliveryInstructions = "Suite 111, 27 Vidovic Boulevard", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-10T12:00:00\",\"ConNote\":\"EAN-125-1563\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-11T07:15:00\",\"ConNote\":\"EAN-125-1563\",\"DriverID\":9,\"Latitude\":36.5931192,\"Longitude\":-93.3971299,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-11T07:15:00\",\"ReceivedBy\":\"Nitin Matondkar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-11 07:15:00.0000000"), ConfirmedReceivedBy = "Nitin Matondkar", LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-11 07:00:00.0000000") },
                new Invoice { Id = 590, CustomerId = 5, BillToCustomerId = 1, OrderId = 600, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 20, InvoiceDate = DateTime.Parse("2013-01-11"), CustomerPurchaseOrderNumber = "15687", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-11T12:00:00\",\"ConNote\":\"EAN-125-1640\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-12T07:05:00\",\"ConNote\":\"EAN-125-1640\",\"DriverID\":8,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-12T07:05:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-12 07:05:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-12 07:00:00.0000000") },
                new Invoice { Id = 591, CustomerId = 8, BillToCustomerId = 1, OrderId = 658, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 20, InvoiceDate = DateTime.Parse("2013-01-11"), CustomerPurchaseOrderNumber = "19863", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-11T12:00:00\",\"ConNote\":\"EAN-125-1641\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-12T07:10:00\",\"ConNote\":\"EAN-125-1641\",\"DriverID\":8,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-12T07:10:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-12 07:10:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-12 07:00:00.0000000") },
                new Invoice { Id = 592, CustomerId = 11, BillToCustomerId = 1, OrderId = 594, DeliveryMethodId = 3, ContactPersonId = 1021, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 20, InvoiceDate = DateTime.Parse("2013-01-11"), CustomerPurchaseOrderNumber = "19528", IsCreditNote = false, DeliveryInstructions = "Unit 250, 1432 Pullela Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-11T12:00:00\",\"ConNote\":\"EAN-125-1642\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-12T07:15:00\",\"ConNote\":\"EAN-125-1642\",\"DriverID\":8,\"Latitude\":40.0745503,\"Longitude\":-75.5351981,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-12T07:15:00\",\"ReceivedBy\":\"Elnaz Javan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-12 07:15:00.0000000"), ConfirmedReceivedBy = "Elnaz Javan", LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-12 07:00:00.0000000") },
                new Invoice { Id = 665, CustomerId = 8, BillToCustomerId = 1, OrderId = 677, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-01-12"), CustomerPurchaseOrderNumber = "11175", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-12T12:00:00\",\"ConNote\":\"EAN-125-1715\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-13T07:05:00\",\"ConNote\":\"EAN-125-1715\",\"DriverID\":14,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-13T07:05:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-13 07:05:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-13 07:00:00.0000000") },
                new Invoice { Id = 666, CustomerId = 22, BillToCustomerId = 1, OrderId = 685, DeliveryMethodId = 3, ContactPersonId = 1043, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-01-12"), CustomerPurchaseOrderNumber = "18709", IsCreditNote = false, DeliveryInstructions = "Shop 26, 73 Berg Crescent", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-12T12:00:00\",\"ConNote\":\"EAN-125-1716\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-13T07:10:00\",\"ConNote\":\"EAN-125-1716\",\"DriverID\":14,\"Latitude\":29.7885429,\"Longitude\":-85.2849181,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-13T07:10:00\",\"ReceivedBy\":\"Cristina Longo\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-13 07:10:00.0000000"), ConfirmedReceivedBy = "Cristina Longo", LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-13 07:00:00.0000000") },
                new Invoice { Id = 667, CustomerId = 27, BillToCustomerId = 1, OrderId = 686, DeliveryMethodId = 3, ContactPersonId = 1053, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-01-12"), CustomerPurchaseOrderNumber = "13940", IsCreditNote = false, DeliveryInstructions = "Shop 13, 575 Pandit Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-12T12:00:00\",\"ConNote\":\"EAN-125-1717\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-13T07:15:00\",\"ConNote\":\"EAN-125-1717\",\"DriverID\":14,\"Latitude\":45.8194098,\"Longitude\":-94.4094468,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-13T07:15:00\",\"ReceivedBy\":\"Paula Gonzales\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-13 07:15:00.0000000"), ConfirmedReceivedBy = "Paula Gonzales", LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-13 07:00:00.0000000") },
                new Invoice { Id = 689, CustomerId = 6, BillToCustomerId = 1, OrderId = 709, DeliveryMethodId = 3, ContactPersonId = 1011, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "13516", IsCreditNote = false, DeliveryInstructions = "Shop 196, 483 Raut Lane", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-14T12:00:00\",\"ConNote\":\"EAN-125-1739\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-15T07:05:00\",\"ConNote\":\"EAN-125-1739\",\"DriverID\":18,\"Latitude\":47.5422180,\"Longitude\":-98.2381519,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-15T07:05:00\",\"ReceivedBy\":\"Biswajeet Thakur\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-15 07:05:00.0000000"), ConfirmedReceivedBy = "Biswajeet Thakur", LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new Invoice { Id = 690, CustomerId = 11, BillToCustomerId = 1, OrderId = 712, DeliveryMethodId = 3, ContactPersonId = 1021, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "15290", IsCreditNote = false, DeliveryInstructions = "Unit 250, 1432 Pullela Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-14T12:00:00\",\"ConNote\":\"EAN-125-1740\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-15T07:10:00\",\"ConNote\":\"EAN-125-1740\",\"DriverID\":18,\"Latitude\":40.0745503,\"Longitude\":-75.5351981,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-15T07:10:00\",\"ReceivedBy\":\"Elnaz Javan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-15 07:10:00.0000000"), ConfirmedReceivedBy = "Elnaz Javan", LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new Invoice { Id = 691, CustomerId = 12, BillToCustomerId = 1, OrderId = 711, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "17021", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-14T12:00:00\",\"ConNote\":\"EAN-125-1741\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-15T07:15:00\",\"ConNote\":\"EAN-125-1741\",\"DriverID\":18,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-15T07:15:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-15 07:15:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new Invoice { Id = 692, CustomerId = 18, BillToCustomerId = 1, OrderId = 724, DeliveryMethodId = 3, ContactPersonId = 1035, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "18980", IsCreditNote = false, DeliveryInstructions = "Unit 166, 1822 Gruber Lane", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-14T12:00:00\",\"ConNote\":\"EAN-125-1742\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-15T07:20:00\",\"ConNote\":\"EAN-125-1742\",\"DriverID\":18,\"Latitude\":43.0203609,\"Longitude\":-71.6003490,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-15T07:20:00\",\"ReceivedBy\":\"Isabelle Vodlan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-15 07:20:00.0000000"), ConfirmedReceivedBy = "Isabelle Vodlan", LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-15 07:00:00.0000000") },
                new Invoice { Id = 761, CustomerId = 8, BillToCustomerId = 1, OrderId = 665, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "19863", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-15T12:00:00\",\"ConNote\":\"EAN-125-1811\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-16T07:05:00\",\"ConNote\":\"EAN-125-1811\",\"DriverID\":7,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-16T07:05:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-16 07:05:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new Invoice { Id = 762, CustomerId = 12, BillToCustomerId = 1, OrderId = 853, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "18406", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-15T12:00:00\",\"ConNote\":\"EAN-125-1812\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-16T07:10:00\",\"ConNote\":\"EAN-125-1812\",\"DriverID\":7,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-16T07:10:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-16 07:10:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new Invoice { Id = 763, CustomerId = 17, BillToCustomerId = 1, OrderId = 850, DeliveryMethodId = 3, ContactPersonId = 1033, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "17120", IsCreditNote = false, DeliveryInstructions = "Unit 278, 224 Hinojosa Road", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-15T12:00:00\",\"ConNote\":\"EAN-125-1813\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-16T07:15:00\",\"ConNote\":\"EAN-125-1813\",\"DriverID\":7,\"Latitude\":39.8500679,\"Longitude\":-82.1220868,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-16T07:15:00\",\"ReceivedBy\":\"Adam Kubat\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-16 07:15:00.0000000"), ConfirmedReceivedBy = "Adam Kubat", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new Invoice { Id = 764, CustomerId = 17, BillToCustomerId = 1, OrderId = 824, DeliveryMethodId = 3, ContactPersonId = 1033, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "19829", IsCreditNote = false, DeliveryInstructions = "Unit 278, 224 Hinojosa Road", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-15T12:00:00\",\"ConNote\":\"EAN-125-1814\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-16T07:20:00\",\"ConNote\":\"EAN-125-1814\",\"DriverID\":7,\"Latitude\":39.8500679,\"Longitude\":-82.1220868,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-16T07:20:00\",\"ReceivedBy\":\"Adam Kubat\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-16 07:20:00.0000000"), ConfirmedReceivedBy = "Adam Kubat", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 07:00:00.0000000") },
                new Invoice { Id = 854, CustomerId = 8, BillToCustomerId = 1, OrderId = 869, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 10, InvoiceDate = DateTime.Parse("2013-01-16"), CustomerPurchaseOrderNumber = "15606", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-16T12:00:00\",\"ConNote\":\"EAN-125-1904\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-17T07:05:00\",\"ConNote\":\"EAN-125-1904\",\"DriverID\":13,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-17T07:05:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-17 07:05:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-17 07:00:00.0000000") },
                new Invoice { Id = 855, CustomerId = 8, BillToCustomerId = 1, OrderId = 901, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 10, InvoiceDate = DateTime.Parse("2013-01-16"), CustomerPurchaseOrderNumber = "16758", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-16T12:00:00\",\"ConNote\":\"EAN-125-1905\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-17T07:10:00\",\"ConNote\":\"EAN-125-1905\",\"DriverID\":13,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-17T07:10:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-17 07:10:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-17 07:00:00.0000000") },
                new Invoice { Id = 856, CustomerId = 16, BillToCustomerId = 1, OrderId = 885, DeliveryMethodId = 3, ContactPersonId = 1031, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 10, InvoiceDate = DateTime.Parse("2013-01-16"), CustomerPurchaseOrderNumber = "16330", IsCreditNote = false, DeliveryInstructions = "Suite 111, 27 Vidovic Boulevard", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-16T12:00:00\",\"ConNote\":\"EAN-125-1906\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-17T07:15:00\",\"ConNote\":\"EAN-125-1906\",\"DriverID\":13,\"Latitude\":36.5931192,\"Longitude\":-93.3971299,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-17T07:15:00\",\"ReceivedBy\":\"Nitin Matondkar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-17 07:15:00.0000000"), ConfirmedReceivedBy = "Nitin Matondkar", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-17 07:00:00.0000000") },
                new Invoice { Id = 949, CustomerId = 3, BillToCustomerId = 1, OrderId = 960, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "10197", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-1999\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T07:15:00\",\"ConNote\":\"EAN-125-1999\",\"DriverID\":12,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T07:15:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 07:15:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 950, CustomerId = 23, BillToCustomerId = 1, OrderId = 961, DeliveryMethodId = 3, ContactPersonId = 1045, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "18568", IsCreditNote = false, DeliveryInstructions = "Unit 300, 1467 Chang Lane", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-2000\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T07:20:00\",\"ConNote\":\"EAN-125-2000\",\"DriverID\":12,\"Latitude\":54.7500000,\"Longitude\":-163.3083333,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T07:20:00\",\"ReceivedBy\":\"Hang Tang\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 07:20:00.0000000"), ConfirmedReceivedBy = "Hang Tang", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 953, CustomerId = 4, BillToCustomerId = 1, OrderId = 964, DeliveryMethodId = 3, ContactPersonId = 1007, AccountsPersonId = 1001, SalespersonPersonId = 6, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "15524", IsCreditNote = false, DeliveryInstructions = "Suite 164, 967 Riutta Boulevard", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-2003\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T07:35:00\",\"ConNote\":\"EAN-125-2003\",\"DriverID\":12,\"Latitude\":37.2811339,\"Longitude\":-98.5803610,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T07:35:00\",\"ReceivedBy\":\"Daniel Roman\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 07:35:00.0000000"), ConfirmedReceivedBy = "Daniel Roman", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 1001, CustomerId = 22, BillToCustomerId = 1, OrderId = 1012, DeliveryMethodId = 3, ContactPersonId = 1043, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "17387", IsCreditNote = false, DeliveryInstructions = "Shop 26, 73 Berg Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-2051\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T11:35:00\",\"ConNote\":\"EAN-125-2051\",\"DriverID\":12,\"Latitude\":29.7885429,\"Longitude\":-85.2849181,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T11:35:00\",\"ReceivedBy\":\"Cristina Longo\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 11:35:00.0000000"), ConfirmedReceivedBy = "Cristina Longo", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 1003, CustomerId = 16, BillToCustomerId = 1, OrderId = 1014, DeliveryMethodId = 3, ContactPersonId = 1031, AccountsPersonId = 1001, SalespersonPersonId = 6, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "13732", IsCreditNote = false, DeliveryInstructions = "Suite 111, 27 Vidovic Boulevard", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-2053\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T11:45:00\",\"ConNote\":\"EAN-125-2053\",\"DriverID\":12,\"Latitude\":36.5931192,\"Longitude\":-93.3971299,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T11:45:00\",\"ReceivedBy\":\"Nitin Matondkar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 11:45:00.0000000"), ConfirmedReceivedBy = "Nitin Matondkar", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 1004, CustomerId = 5, BillToCustomerId = 1, OrderId = 1015, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "11932", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-2054\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T11:50:00\",\"ConNote\":\"EAN-125-2054\",\"DriverID\":12,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T11:50:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 11:50:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 1012, CustomerId = 25, BillToCustomerId = 1, OrderId = 1023, DeliveryMethodId = 3, ContactPersonId = 1049, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-18"), CustomerPurchaseOrderNumber = "14874", IsCreditNote = false, DeliveryInstructions = "Shop 37, 1143 Caune Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-18T12:00:00\",\"ConNote\":\"EAN-125-2062\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-19T12:30:00\",\"ConNote\":\"EAN-125-2062\",\"DriverID\":12,\"Latitude\":36.0041223,\"Longitude\":-120.1290272,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-19T12:30:00\",\"ReceivedBy\":\"Sulabha Khalsa\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-19 12:30:00.0000000"), ConfirmedReceivedBy = "Sulabha Khalsa", LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-19 07:00:00.0000000") },
                new Invoice { Id = 1032, CustomerId = 5, BillToCustomerId = 1, OrderId = 1047, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 9, InvoiceDate = DateTime.Parse("2013-01-19"), CustomerPurchaseOrderNumber = "15368", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-19T12:00:00\",\"ConNote\":\"EAN-125-2082\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-20T07:50:00\",\"ConNote\":\"EAN-125-2082\",\"DriverID\":16,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-20T07:50:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-20 07:50:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-20 07:00:00.0000000") },
                new Invoice { Id = 1082, CustomerId = 23, BillToCustomerId = 1, OrderId = 1095, DeliveryMethodId = 3, ContactPersonId = 1045, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "15511", IsCreditNote = false, DeliveryInstructions = "Unit 300, 1467 Chang Lane", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-21T12:00:00\",\"ConNote\":\"EAN-125-2132\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-22T09:45:00\",\"ConNote\":\"EAN-125-2132\",\"DriverID\":5,\"Latitude\":54.7500000,\"Longitude\":-163.3083333,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-22T09:45:00\",\"ReceivedBy\":\"Hang Tang\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-22 09:45:00.0000000"), ConfirmedReceivedBy = "Hang Tang", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-22 07:00:00.0000000") },
                new Invoice { Id = 1099, CustomerId = 8, BillToCustomerId = 1, OrderId = 1111, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-22"), CustomerPurchaseOrderNumber = "11012", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-22T12:00:00\",\"ConNote\":\"EAN-125-2149\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-23T07:50:00\",\"ConNote\":\"EAN-125-2149\",\"DriverID\":4,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-23T07:50:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-23 07:50:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-23 07:00:00.0000000") },
                new Invoice { Id = 1103, CustomerId = 25, BillToCustomerId = 1, OrderId = 1115, DeliveryMethodId = 3, ContactPersonId = 1049, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-22"), CustomerPurchaseOrderNumber = "13810", IsCreditNote = false, DeliveryInstructions = "Shop 37, 1143 Caune Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-22T12:00:00\",\"ConNote\":\"EAN-125-2153\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-23T08:10:00\",\"ConNote\":\"EAN-125-2153\",\"DriverID\":4,\"Latitude\":36.0041223,\"Longitude\":-120.1290272,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-23T08:10:00\",\"ReceivedBy\":\"Sulabha Khalsa\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-23 08:10:00.0000000"), ConfirmedReceivedBy = "Sulabha Khalsa", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-23 07:00:00.0000000") },
                new Invoice { Id = 1143, CustomerId = 22, BillToCustomerId = 1, OrderId = 1156, DeliveryMethodId = 3, ContactPersonId = 1043, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-01-23"), CustomerPurchaseOrderNumber = "14690", IsCreditNote = false, DeliveryInstructions = "Shop 26, 73 Berg Crescent", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-23T12:00:00\",\"ConNote\":\"EAN-125-2193\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-24T07:35:00\",\"ConNote\":\"EAN-125-2193\",\"DriverID\":20,\"Latitude\":29.7885429,\"Longitude\":-85.2849181,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-24T07:35:00\",\"ReceivedBy\":\"Cristina Longo\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-24 07:35:00.0000000"), ConfirmedReceivedBy = "Cristina Longo", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-24 07:00:00.0000000") },
                new Invoice { Id = 1162, CustomerId = 21, BillToCustomerId = 1, OrderId = 1175, DeliveryMethodId = 3, ContactPersonId = 1041, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-01-23"), CustomerPurchaseOrderNumber = "18012", IsCreditNote = false, DeliveryInstructions = "Shop 147, 640 Chakraborty Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-23T12:00:00\",\"ConNote\":\"EAN-125-2212\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-24T09:10:00\",\"ConNote\":\"EAN-125-2212\",\"DriverID\":20,\"Latitude\":40.9134194,\"Longitude\":-75.9665916,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-24T09:10:00\",\"ReceivedBy\":\"Duleep Raju\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-24 09:10:00.0000000"), ConfirmedReceivedBy = "Duleep Raju", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-24 07:00:00.0000000") },
                new Invoice { Id = 1189, CustomerId = 11, BillToCustomerId = 1, OrderId = 1202, DeliveryMethodId = 3, ContactPersonId = 1021, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-01-23"), CustomerPurchaseOrderNumber = "15575", IsCreditNote = false, DeliveryInstructions = "Unit 250, 1432 Pullela Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-23T12:00:00\",\"ConNote\":\"EAN-125-2239\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-24T11:25:00\",\"ConNote\":\"EAN-125-2239\",\"DriverID\":20,\"Latitude\":40.0745503,\"Longitude\":-75.5351981,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-24T11:25:00\",\"ReceivedBy\":\"Elnaz Javan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-24 11:25:00.0000000"), ConfirmedReceivedBy = "Elnaz Javan", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-24 07:00:00.0000000") },
                new Invoice { Id = 1228, CustomerId = 3, BillToCustomerId = 1, OrderId = 1247, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-24"), CustomerPurchaseOrderNumber = "13258", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-24T12:00:00\",\"ConNote\":\"EAN-125-2278\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-25T09:00:00\",\"ConNote\":\"EAN-125-2278\",\"DriverID\":20,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-25T09:00:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-25 09:00:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-25 07:00:00.0000000") },
                new Invoice { Id = 1278, CustomerId = 24, BillToCustomerId = 1, OrderId = 1300, DeliveryMethodId = 3, ContactPersonId = 1047, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-25"), CustomerPurchaseOrderNumber = "15668", IsCreditNote = false, DeliveryInstructions = "Shop 181, 818 Paulet Avenue", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-25T12:00:00\",\"ConNote\":\"EAN-125-2328\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-26T10:00:00\",\"ConNote\":\"EAN-125-2328\",\"DriverID\":13,\"Latitude\":34.9293315,\"Longitude\":-79.1550330,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-26T10:00:00\",\"ReceivedBy\":\"Intira Mookjai\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-26 10:00:00.0000000"), ConfirmedReceivedBy = "Intira Mookjai", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-26 07:00:00.0000000") },
                new Invoice { Id = 1311, CustomerId = 12, BillToCustomerId = 1, OrderId = 1333, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-25"), CustomerPurchaseOrderNumber = "15326", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-25T12:00:00\",\"ConNote\":\"EAN-125-2361\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-26T12:45:00\",\"ConNote\":\"EAN-125-2361\",\"DriverID\":13,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-26T12:45:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-26 12:45:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-26 07:00:00.0000000") },
                new Invoice { Id = 1314, CustomerId = 23, BillToCustomerId = 1, OrderId = 1336, DeliveryMethodId = 3, ContactPersonId = 1045, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-25"), CustomerPurchaseOrderNumber = "15603", IsCreditNote = false, DeliveryInstructions = "Unit 300, 1467 Chang Lane", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-25T12:00:00\",\"ConNote\":\"EAN-125-2364\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-26T13:00:00\",\"ConNote\":\"EAN-125-2364\",\"DriverID\":13,\"Latitude\":54.7500000,\"Longitude\":-163.3083333,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-26T13:00:00\",\"ReceivedBy\":\"Hang Tang\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-26 13:00:00.0000000"), ConfirmedReceivedBy = "Hang Tang", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-26 07:00:00.0000000") },
                new Invoice { Id = 1317, CustomerId = 12, BillToCustomerId = 1, OrderId = 1339, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 17, InvoiceDate = DateTime.Parse("2013-01-25"), CustomerPurchaseOrderNumber = "19199", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-25T12:00:00\",\"ConNote\":\"EAN-125-2367\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-26T13:15:00\",\"ConNote\":\"EAN-125-2367\",\"DriverID\":13,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-26T13:15:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-26 13:15:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-26 07:00:00.0000000") },
                new Invoice { Id = 1343, CustomerId = 26, BillToCustomerId = 1, OrderId = 1366, DeliveryMethodId = 3, ContactPersonId = 1051, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 12, InvoiceDate = DateTime.Parse("2013-01-26"), CustomerPurchaseOrderNumber = "19397", IsCreditNote = false, DeliveryInstructions = "Shop 119, 1022 Folliero Street", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-26T12:00:00\",\"ConNote\":\"EAN-125-2393\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-27T08:55:00\",\"ConNote\":\"EAN-125-2393\",\"DriverID\":18,\"Latitude\":41.1725134,\"Longitude\":-92.3087945,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-27T08:55:00\",\"ReceivedBy\":\"Dhanishta Majji\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-27 08:55:00.0000000"), ConfirmedReceivedBy = "Dhanishta Majji", LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-01-27 07:00:00.0000000") },
                new Invoice { Id = 1361, CustomerId = 26, BillToCustomerId = 1, OrderId = 1385, DeliveryMethodId = 3, ContactPersonId = 1051, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "16296", IsCreditNote = false, DeliveryInstructions = "Shop 119, 1022 Folliero Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-28T12:00:00\",\"ConNote\":\"EAN-125-2411\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-29T07:25:00\",\"ConNote\":\"EAN-125-2411\",\"DriverID\":19,\"Latitude\":41.1725134,\"Longitude\":-92.3087945,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-29T07:25:00\",\"ReceivedBy\":\"Dhanishta Majji\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-29 07:25:00.0000000"), ConfirmedReceivedBy = "Dhanishta Majji", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-29 07:00:00.0000000") },
                new Invoice { Id = 1365, CustomerId = 8, BillToCustomerId = 1, OrderId = 1389, DeliveryMethodId = 3, ContactPersonId = 1015, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "11117", IsCreditNote = false, DeliveryInstructions = "Shop 282, 752 Shaker Doust Boulevard", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-28T12:00:00\",\"ConNote\":\"EAN-125-2415\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-29T07:45:00\",\"ConNote\":\"EAN-125-2415\",\"DriverID\":19,\"Latitude\":39.6283210,\"Longitude\":-105.0499841,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-29T07:45:00\",\"ReceivedBy\":\"Kanti Kotadia\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-29 07:45:00.0000000"), ConfirmedReceivedBy = "Kanti Kotadia", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-29 07:00:00.0000000") },
                new Invoice { Id = 1371, CustomerId = 5, BillToCustomerId = 1, OrderId = 1395, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "19436", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-28T12:00:00\",\"ConNote\":\"EAN-125-2421\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-29T08:15:00\",\"ConNote\":\"EAN-125-2421\",\"DriverID\":19,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-01-29T08:15:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-29 08:15:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-29 07:00:00.0000000") },
                new Invoice { Id = 1396, CustomerId = 12, BillToCustomerId = 1, OrderId = 1420, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "13636", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-28T12:00:00\",\"ConNote\":\"EAN-125-2446\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-29T10:20:00\",\"ConNote\":\"EAN-125-2446\",\"DriverID\":19,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-29T10:20:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-29 10:20:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-29 07:00:00.0000000") },
                new Invoice { Id = 1419, CustomerId = 22, BillToCustomerId = 1, OrderId = 1218, DeliveryMethodId = 3, ContactPersonId = 1043, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "14690", IsCreditNote = false, DeliveryInstructions = "Shop 26, 73 Berg Crescent", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-29T12:00:00\",\"ConNote\":\"EAN-125-2469\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-30T07:10:00\",\"ConNote\":\"EAN-125-2469\",\"DriverID\":19,\"Latitude\":29.7885429,\"Longitude\":-85.2849181,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-30T07:10:00\",\"ReceivedBy\":\"Cristina Longo\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-30 07:10:00.0000000"), ConfirmedReceivedBy = "Cristina Longo", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-30 07:00:00.0000000") },
                new Invoice { Id = 1429, CustomerId = 25, BillToCustomerId = 1, OrderId = 1453, DeliveryMethodId = 3, ContactPersonId = 1049, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "13272", IsCreditNote = false, DeliveryInstructions = "Shop 37, 1143 Caune Crescent", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-29T12:00:00\",\"ConNote\":\"EAN-125-2479\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-30T08:00:00\",\"ConNote\":\"EAN-125-2479\",\"DriverID\":19,\"Latitude\":36.0041223,\"Longitude\":-120.1290272,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-30T08:00:00\",\"ReceivedBy\":\"Sulabha Khalsa\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-30 08:00:00.0000000"), ConfirmedReceivedBy = "Sulabha Khalsa", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-30 07:00:00.0000000") },
                new Invoice { Id = 1434, CustomerId = 2, BillToCustomerId = 1, OrderId = 1458, DeliveryMethodId = 3, ContactPersonId = 1003, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "12882", IsCreditNote = false, DeliveryInstructions = "Shop 245, 705 Dita Lane", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-29T12:00:00\",\"ConNote\":\"EAN-125-2484\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-30T08:25:00\",\"ConNote\":\"EAN-125-2484\",\"DriverID\":19,\"Latitude\":48.7163356,\"Longitude\":-115.8743507,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-30T08:25:00\",\"ReceivedBy\":\"Lorena Cindric\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-30 08:25:00.0000000"), ConfirmedReceivedBy = "Lorena Cindric", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-30 07:00:00.0000000") },
                new Invoice { Id = 1447, CustomerId = 21, BillToCustomerId = 1, OrderId = 1471, DeliveryMethodId = 3, ContactPersonId = 1041, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "19415", IsCreditNote = false, DeliveryInstructions = "Shop 147, 640 Chakraborty Street", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-29T12:00:00\",\"ConNote\":\"EAN-125-2497\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-30T09:30:00\",\"ConNote\":\"EAN-125-2497\",\"DriverID\":19,\"Latitude\":40.9134194,\"Longitude\":-75.9665916,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-30T09:30:00\",\"ReceivedBy\":\"Duleep Raju\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-30 09:30:00.0000000"), ConfirmedReceivedBy = "Duleep Raju", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-30 07:00:00.0000000") },
                new Invoice { Id = 1462, CustomerId = 14, BillToCustomerId = 1, OrderId = 1486, DeliveryMethodId = 3, ContactPersonId = 1027, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "13321", IsCreditNote = false, DeliveryInstructions = "Unit 221, 151 Vasiljevic Road", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-29T12:00:00\",\"ConNote\":\"EAN-125-2512\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-30T10:45:00\",\"ConNote\":\"EAN-125-2512\",\"DriverID\":19,\"Latitude\":39.6862063,\"Longitude\":-77.7122154,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-30T10:45:00\",\"ReceivedBy\":\"Tereza Valentova\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-30 10:45:00.0000000"), ConfirmedReceivedBy = "Tereza Valentova", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-30 07:00:00.0000000") },
                new Invoice { Id = 1498, CustomerId = 21, BillToCustomerId = 1, OrderId = 1524, DeliveryMethodId = 3, ContactPersonId = 1041, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 9, InvoiceDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "19415", IsCreditNote = false, DeliveryInstructions = "Shop 147, 640 Chakraborty Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-30T12:00:00\",\"ConNote\":\"EAN-125-2548\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-31T07:10:00\",\"ConNote\":\"EAN-125-2548\",\"DriverID\":3,\"Latitude\":40.9134194,\"Longitude\":-75.9665916,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-31T07:10:00\",\"ReceivedBy\":\"Duleep Raju\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-31 07:10:00.0000000"), ConfirmedReceivedBy = "Duleep Raju", LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-31 07:00:00.0000000") },
                new Invoice { Id = 1528, CustomerId = 13, BillToCustomerId = 1, OrderId = 1557, DeliveryMethodId = 3, ContactPersonId = 1025, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 9, InvoiceDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "18781", IsCreditNote = false, DeliveryInstructions = "Suite 185, 1492 Shah Road", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-30T12:00:00\",\"ConNote\":\"EAN-125-2578\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-31T09:40:00\",\"ConNote\":\"EAN-125-2578\",\"DriverID\":3,\"Latitude\":37.6142165,\"Longitude\":-88.7081133,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-31T09:40:00\",\"ReceivedBy\":\"Razeena Hosseini\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-31 09:40:00.0000000"), ConfirmedReceivedBy = "Razeena Hosseini", LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-31 07:00:00.0000000") },
                new Invoice { Id = 1538, CustomerId = 12, BillToCustomerId = 1, OrderId = 1567, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 9, InvoiceDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "17730", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-30T12:00:00\",\"ConNote\":\"EAN-125-2588\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-31T10:30:00\",\"ConNote\":\"EAN-125-2588\",\"DriverID\":3,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-31T10:30:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-31 10:30:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-31 07:00:00.0000000") },
                new Invoice { Id = 1544, CustomerId = 7, BillToCustomerId = 1, OrderId = 1573, DeliveryMethodId = 3, ContactPersonId = 1013, AccountsPersonId = 1001, SalespersonPersonId = 13, PackedByPersonId = 9, InvoiceDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "12911", IsCreditNote = false, DeliveryInstructions = "Shop 27, 904 Kellnerova Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-30T12:00:00\",\"ConNote\":\"EAN-125-2594\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-31T11:00:00\",\"ConNote\":\"EAN-125-2594\",\"DriverID\":3,\"Latitude\":35.1925800,\"Longitude\":-86.8511135,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-31T11:00:00\",\"ReceivedBy\":\"Kalidas Nadar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-31 11:00:00.0000000"), ConfirmedReceivedBy = "Kalidas Nadar", LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-31 07:00:00.0000000") },
                new Invoice { Id = 1563, CustomerId = 18, BillToCustomerId = 1, OrderId = 1592, DeliveryMethodId = 3, ContactPersonId = 1035, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 9, InvoiceDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "15997", IsCreditNote = false, DeliveryInstructions = "Unit 166, 1822 Gruber Lane", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-30T12:00:00\",\"ConNote\":\"EAN-125-2613\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-01-31T12:35:00\",\"ConNote\":\"EAN-125-2613\",\"DriverID\":3,\"Latitude\":43.0203609,\"Longitude\":-71.6003490,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-01-31T12:35:00\",\"ReceivedBy\":\"Isabelle Vodlan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-01-31 12:35:00.0000000"), ConfirmedReceivedBy = "Isabelle Vodlan", LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-31 07:00:00.0000000") },
                new Invoice { Id = 1620, CustomerId = 20, BillToCustomerId = 1, OrderId = 1651, DeliveryMethodId = 3, ContactPersonId = 1039, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-31"), CustomerPurchaseOrderNumber = "19083", IsCreditNote = false, DeliveryInstructions = "Shop 151, 1536 Bhutia Avenue", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-31T12:00:00\",\"ConNote\":\"EAN-125-2670\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-01T10:55:00\",\"ConNote\":\"EAN-125-2670\",\"DriverID\":7,\"Latitude\":46.0493026,\"Longitude\":-118.3883012,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-01T10:55:00\",\"ReceivedBy\":\"Nghi Hua\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-01 10:55:00.0000000"), ConfirmedReceivedBy = "Nghi Hua", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-01 07:00:00.0000000") },
                new Invoice { Id = 1625, CustomerId = 26, BillToCustomerId = 1, OrderId = 1656, DeliveryMethodId = 3, ContactPersonId = 1051, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 5, InvoiceDate = DateTime.Parse("2013-01-31"), CustomerPurchaseOrderNumber = "18708", IsCreditNote = false, DeliveryInstructions = "Shop 119, 1022 Folliero Street", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-01-31T12:00:00\",\"ConNote\":\"EAN-125-2675\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-01T11:20:00\",\"ConNote\":\"EAN-125-2675\",\"DriverID\":7,\"Latitude\":41.1725134,\"Longitude\":-92.3087945,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-01T11:20:00\",\"ReceivedBy\":\"Dhanishta Majji\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-01 11:20:00.0000000"), ConfirmedReceivedBy = "Dhanishta Majji", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-01 07:00:00.0000000") },
                new Invoice { Id = 1660, CustomerId = 5, BillToCustomerId = 1, OrderId = 1695, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 13, InvoiceDate = DateTime.Parse("2013-02-01"), CustomerPurchaseOrderNumber = "16903", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-01T12:00:00\",\"ConNote\":\"EAN-125-2710\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-02T08:45:00\",\"ConNote\":\"EAN-125-2710\",\"DriverID\":11,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-02T08:45:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-02 08:45:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 07:00:00.0000000") },
                new Invoice { Id = 1704, CustomerId = 25, BillToCustomerId = 1, OrderId = 1739, DeliveryMethodId = 3, ContactPersonId = 1049, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 13, InvoiceDate = DateTime.Parse("2013-02-01"), CustomerPurchaseOrderNumber = "19271", IsCreditNote = false, DeliveryInstructions = "Shop 37, 1143 Caune Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-01T12:00:00\",\"ConNote\":\"EAN-125-2754\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-02T12:25:00\",\"ConNote\":\"EAN-125-2754\",\"DriverID\":11,\"Latitude\":36.0041223,\"Longitude\":-120.1290272,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-02T12:25:00\",\"ReceivedBy\":\"Sulabha Khalsa\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-02 12:25:00.0000000"), ConfirmedReceivedBy = "Sulabha Khalsa", LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 07:00:00.0000000") },
                new Invoice { Id = 1718, CustomerId = 27, BillToCustomerId = 1, OrderId = 1757, DeliveryMethodId = 3, ContactPersonId = 1053, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 20, InvoiceDate = DateTime.Parse("2013-02-02"), CustomerPurchaseOrderNumber = "12429", IsCreditNote = false, DeliveryInstructions = "Shop 13, 575 Pandit Crescent", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-02T12:00:00\",\"ConNote\":\"EAN-125-2768\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-03T07:40:00\",\"ConNote\":\"EAN-125-2768\",\"DriverID\":5,\"Latitude\":45.8194098,\"Longitude\":-94.4094468,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-03T07:40:00\",\"ReceivedBy\":\"Paula Gonzales\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-03 07:40:00.0000000"), ConfirmedReceivedBy = "Paula Gonzales", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-03 07:00:00.0000000") },
                new Invoice { Id = 1740, CustomerId = 3, BillToCustomerId = 1, OrderId = 1779, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 20, InvoiceDate = DateTime.Parse("2013-02-02"), CustomerPurchaseOrderNumber = "14794", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-02T12:00:00\",\"ConNote\":\"EAN-125-2790\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-03T09:30:00\",\"ConNote\":\"EAN-125-2790\",\"DriverID\":5,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-03T09:30:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-03 09:30:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-03 07:00:00.0000000") },
                new Invoice { Id = 1745, CustomerId = 3, BillToCustomerId = 1, OrderId = 1829, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "10531", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-04T12:00:00\",\"ConNote\":\"EAN-125-2795\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-05T07:05:00\",\"ConNote\":\"EAN-125-2795\",\"DriverID\":20,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-02-05T07:05:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-05 07:05:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-05 07:00:00.0000000") },
                new Invoice { Id = 1746, CustomerId = 27, BillToCustomerId = 1, OrderId = 1799, DeliveryMethodId = 3, ContactPersonId = 1053, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 3, InvoiceDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "11970", IsCreditNote = false, DeliveryInstructions = "Shop 13, 575 Pandit Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-04T12:00:00\",\"ConNote\":\"EAN-125-2796\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-05T07:10:00\",\"ConNote\":\"EAN-125-2796\",\"DriverID\":20,\"Latitude\":45.8194098,\"Longitude\":-94.4094468,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-05T07:10:00\",\"ReceivedBy\":\"Paula Gonzales\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-05 07:10:00.0000000"), ConfirmedReceivedBy = "Paula Gonzales", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-05 07:00:00.0000000") },
                new Invoice { Id = 1840, CustomerId = 11, BillToCustomerId = 1, OrderId = 1892, DeliveryMethodId = 3, ContactPersonId = 1021, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-06"), CustomerPurchaseOrderNumber = "13120", IsCreditNote = false, DeliveryInstructions = "Unit 250, 1432 Pullela Street", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-06T12:00:00\",\"ConNote\":\"EAN-125-2890\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-07T07:05:00\",\"ConNote\":\"EAN-125-2890\",\"DriverID\":4,\"Latitude\":40.0745503,\"Longitude\":-75.5351981,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-07T07:05:00\",\"ReceivedBy\":\"Elnaz Javan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-07 07:05:00.0000000"), ConfirmedReceivedBy = "Elnaz Javan", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-07 07:00:00.0000000") },
                new Invoice { Id = 1841, CustomerId = 17, BillToCustomerId = 1, OrderId = 1899, DeliveryMethodId = 3, ContactPersonId = 1033, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-06"), CustomerPurchaseOrderNumber = "15290", IsCreditNote = false, DeliveryInstructions = "Unit 278, 224 Hinojosa Road", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-06T12:00:00\",\"ConNote\":\"EAN-125-2891\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-07T07:10:00\",\"ConNote\":\"EAN-125-2891\",\"DriverID\":4,\"Latitude\":39.8500679,\"Longitude\":-82.1220868,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-07T07:10:00\",\"ReceivedBy\":\"Adam Kubat\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-07 07:10:00.0000000"), ConfirmedReceivedBy = "Adam Kubat", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-07 07:00:00.0000000") },
                new Invoice { Id = 1842, CustomerId = 18, BillToCustomerId = 1, OrderId = 1889, DeliveryMethodId = 3, ContactPersonId = 1035, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-06"), CustomerPurchaseOrderNumber = "14526", IsCreditNote = false, DeliveryInstructions = "Unit 166, 1822 Gruber Lane", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-06T12:00:00\",\"ConNote\":\"EAN-125-2892\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-07T07:15:00\",\"ConNote\":\"EAN-125-2892\",\"DriverID\":4,\"Latitude\":43.0203609,\"Longitude\":-71.6003490,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-07T07:15:00\",\"ReceivedBy\":\"Isabelle Vodlan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-07 07:15:00.0000000"), ConfirmedReceivedBy = "Isabelle Vodlan", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-07 07:00:00.0000000") },
                new Invoice { Id = 1843, CustomerId = 22, BillToCustomerId = 1, OrderId = 1900, DeliveryMethodId = 3, ContactPersonId = 1043, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-06"), CustomerPurchaseOrderNumber = "11241", IsCreditNote = false, DeliveryInstructions = "Shop 26, 73 Berg Crescent", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-06T12:00:00\",\"ConNote\":\"EAN-125-2893\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-07T07:20:00\",\"ConNote\":\"EAN-125-2893\",\"DriverID\":4,\"Latitude\":29.7885429,\"Longitude\":-85.2849181,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-07T07:20:00\",\"ReceivedBy\":\"Cristina Longo\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-07 07:20:00.0000000"), ConfirmedReceivedBy = "Cristina Longo", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-07 07:00:00.0000000") },
                new Invoice { Id = 1876, CustomerId = 19, BillToCustomerId = 1, OrderId = 1941, DeliveryMethodId = 3, ContactPersonId = 1037, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 20, InvoiceDate = DateTime.Parse("2013-02-07"), CustomerPurchaseOrderNumber = "10854", IsCreditNote = false, DeliveryInstructions = "Unit 174, 1507 Izmaylov Crescent", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-07T12:00:00\",\"ConNote\":\"EAN-125-2926\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-08T07:05:00\",\"ConNote\":\"EAN-125-2926\",\"DriverID\":20,\"Latitude\":64.8597222,\"Longitude\":-147.7322222,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-08T07:05:00\",\"ReceivedBy\":\"Mithun Bhattacharya\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-08 07:05:00.0000000"), ConfirmedReceivedBy = "Mithun Bhattacharya", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-08 07:00:00.0000000") },
                new Invoice { Id = 1911, CustomerId = 2, BillToCustomerId = 1, OrderId = 1973, DeliveryMethodId = 3, ContactPersonId = 1003, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 4, InvoiceDate = DateTime.Parse("2013-02-08"), CustomerPurchaseOrderNumber = "11240", IsCreditNote = false, DeliveryInstructions = "Shop 245, 705 Dita Lane", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-08T12:00:00\",\"ConNote\":\"EAN-125-2961\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-09T07:05:00\",\"ConNote\":\"EAN-125-2961\",\"DriverID\":19,\"Latitude\":48.7163356,\"Longitude\":-115.8743507,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-09T07:05:00\",\"ReceivedBy\":\"Lorena Cindric\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-09 07:05:00.0000000"), ConfirmedReceivedBy = "Lorena Cindric", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-09 07:00:00.0000000") },
                new Invoice { Id = 1912, CustomerId = 4, BillToCustomerId = 1, OrderId = 1992, DeliveryMethodId = 3, ContactPersonId = 1007, AccountsPersonId = 1001, SalespersonPersonId = 6, PackedByPersonId = 4, InvoiceDate = DateTime.Parse("2013-02-08"), CustomerPurchaseOrderNumber = "14695", IsCreditNote = false, DeliveryInstructions = "Suite 164, 967 Riutta Boulevard", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-08T12:00:00\",\"ConNote\":\"EAN-125-2962\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-09T07:10:00\",\"ConNote\":\"EAN-125-2962\",\"DriverID\":19,\"Latitude\":37.2811339,\"Longitude\":-98.5803610,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-09T07:10:00\",\"ReceivedBy\":\"Daniel Roman\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-09 07:10:00.0000000"), ConfirmedReceivedBy = "Daniel Roman", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-09 07:00:00.0000000") },
                new Invoice { Id = 1913, CustomerId = 17, BillToCustomerId = 1, OrderId = 1988, DeliveryMethodId = 3, ContactPersonId = 1033, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 4, InvoiceDate = DateTime.Parse("2013-02-08"), CustomerPurchaseOrderNumber = "13675", IsCreditNote = false, DeliveryInstructions = "Unit 278, 224 Hinojosa Road", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-08T12:00:00\",\"ConNote\":\"EAN-125-2963\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-09T07:15:00\",\"ConNote\":\"EAN-125-2963\",\"DriverID\":19,\"Latitude\":39.8500679,\"Longitude\":-82.1220868,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-09T07:15:00\",\"ReceivedBy\":\"Adam Kubat\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-09 07:15:00.0000000"), ConfirmedReceivedBy = "Adam Kubat", LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-02-09 07:00:00.0000000") },
                new Invoice { Id = 1970, CustomerId = 3, BillToCustomerId = 1, OrderId = 2010, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-09"), CustomerPurchaseOrderNumber = "18638", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-09T12:00:00\",\"ConNote\":\"EAN-125-3020\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-10T07:05:00\",\"ConNote\":\"EAN-125-3020\",\"DriverID\":11,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-10T07:05:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-10 07:05:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-10 07:00:00.0000000") },
                new Invoice { Id = 1971, CustomerId = 13, BillToCustomerId = 1, OrderId = 2013, DeliveryMethodId = 3, ContactPersonId = 1025, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-09"), CustomerPurchaseOrderNumber = "14076", IsCreditNote = false, DeliveryInstructions = "Suite 185, 1492 Shah Road", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-09T12:00:00\",\"ConNote\":\"EAN-125-3021\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-10T07:10:00\",\"ConNote\":\"EAN-125-3021\",\"DriverID\":11,\"Latitude\":37.6142165,\"Longitude\":-88.7081133,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-02-10T07:10:00\",\"ReceivedBy\":\"Razeena Hosseini\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-10 07:10:00.0000000"), ConfirmedReceivedBy = "Razeena Hosseini", LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-10 07:00:00.0000000") },
                new Invoice { Id = 2015, CustomerId = 3, BillToCustomerId = 1, OrderId = 2067, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 6, InvoiceDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "18655", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-11T12:00:00\",\"ConNote\":\"EAN-125-3065\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-12T07:05:00\",\"ConNote\":\"EAN-125-3065\",\"DriverID\":17,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-12T07:05:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-12 07:05:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-02-12 07:00:00.0000000") },
                new Invoice { Id = 2016, CustomerId = 4, BillToCustomerId = 1, OrderId = 2089, DeliveryMethodId = 3, ContactPersonId = 1007, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 6, InvoiceDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "12759", IsCreditNote = false, DeliveryInstructions = "Suite 164, 967 Riutta Boulevard", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-11T12:00:00\",\"ConNote\":\"EAN-125-3066\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-12T07:10:00\",\"ConNote\":\"EAN-125-3066\",\"DriverID\":17,\"Latitude\":37.2811339,\"Longitude\":-98.5803610,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-12T07:10:00\",\"ReceivedBy\":\"Daniel Roman\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-12 07:10:00.0000000"), ConfirmedReceivedBy = "Daniel Roman", LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-02-12 07:00:00.0000000") },
                new Invoice { Id = 2017, CustomerId = 13, BillToCustomerId = 1, OrderId = 2125, DeliveryMethodId = 3, ContactPersonId = 1025, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 6, InvoiceDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "16322", IsCreditNote = false, DeliveryInstructions = "Suite 185, 1492 Shah Road", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-11T12:00:00\",\"ConNote\":\"EAN-125-3067\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-12T07:15:00\",\"ConNote\":\"EAN-125-3067\",\"DriverID\":17,\"Latitude\":37.6142165,\"Longitude\":-88.7081133,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-12T07:15:00\",\"ReceivedBy\":\"Razeena Hosseini\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-12 07:15:00.0000000"), ConfirmedReceivedBy = "Razeena Hosseini", LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-02-12 07:00:00.0000000") },
                new Invoice { Id = 2018, CustomerId = 24, BillToCustomerId = 1, OrderId = 2077, DeliveryMethodId = 3, ContactPersonId = 1047, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 6, InvoiceDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "19545", IsCreditNote = false, DeliveryInstructions = "Shop 181, 818 Paulet Avenue", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-11T12:00:00\",\"ConNote\":\"EAN-125-3068\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-12T07:20:00\",\"ConNote\":\"EAN-125-3068\",\"DriverID\":17,\"Latitude\":34.9293315,\"Longitude\":-79.1550330,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-12T07:20:00\",\"ReceivedBy\":\"Intira Mookjai\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-12 07:20:00.0000000"), ConfirmedReceivedBy = "Intira Mookjai", LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-02-12 07:00:00.0000000") },
                new Invoice { Id = 2084, CustomerId = 22, BillToCustomerId = 1, OrderId = 2157, DeliveryMethodId = 3, ContactPersonId = 1043, AccountsPersonId = 1001, SalespersonPersonId = 14, PackedByPersonId = 16, InvoiceDate = DateTime.Parse("2013-02-12"), CustomerPurchaseOrderNumber = "14644", IsCreditNote = false, DeliveryInstructions = "Shop 26, 73 Berg Crescent", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-12T12:00:00\",\"ConNote\":\"EAN-125-3134\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-13T07:05:00\",\"ConNote\":\"EAN-125-3134\",\"DriverID\":5,\"Latitude\":29.7885429,\"Longitude\":-85.2849181,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-13T07:05:00\",\"ReceivedBy\":\"Cristina Longo\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-13 07:05:00.0000000"), ConfirmedReceivedBy = "Cristina Longo", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-13 07:00:00.0000000") },
                new Invoice { Id = 2117, CustomerId = 4, BillToCustomerId = 1, OrderId = 2128, DeliveryMethodId = 3, ContactPersonId = 1007, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 2, InvoiceDate = DateTime.Parse("2013-02-13"), CustomerPurchaseOrderNumber = "12759", IsCreditNote = false, DeliveryInstructions = "Suite 164, 967 Riutta Boulevard", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-13T12:00:00\",\"ConNote\":\"EAN-125-3167\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-14T07:05:00\",\"ConNote\":\"EAN-125-3167\",\"DriverID\":20,\"Latitude\":37.2811339,\"Longitude\":-98.5803610,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-14T07:05:00\",\"ReceivedBy\":\"Daniel Roman\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-14 07:05:00.0000000"), ConfirmedReceivedBy = "Daniel Roman", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-14 07:00:00.0000000") },
                new Invoice { Id = 2118, CustomerId = 7, BillToCustomerId = 1, OrderId = 2185, DeliveryMethodId = 3, ContactPersonId = 1013, AccountsPersonId = 1001, SalespersonPersonId = 6, PackedByPersonId = 2, InvoiceDate = DateTime.Parse("2013-02-13"), CustomerPurchaseOrderNumber = "14034", IsCreditNote = false, DeliveryInstructions = "Shop 27, 904 Kellnerova Street", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-13T12:00:00\",\"ConNote\":\"EAN-125-3168\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-14T07:10:00\",\"ConNote\":\"EAN-125-3168\",\"DriverID\":20,\"Latitude\":35.1925800,\"Longitude\":-86.8511135,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-14T07:10:00\",\"ReceivedBy\":\"Kalidas Nadar\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-14 07:10:00.0000000"), ConfirmedReceivedBy = "Kalidas Nadar", LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-14 07:00:00.0000000") },
                new Invoice { Id = 2157, CustomerId = 21, BillToCustomerId = 1, OrderId = 2220, DeliveryMethodId = 3, ContactPersonId = 1041, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 7, InvoiceDate = DateTime.Parse("2013-02-14"), CustomerPurchaseOrderNumber = "18496", IsCreditNote = false, DeliveryInstructions = "Shop 147, 640 Chakraborty Street", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-14T12:00:00\",\"ConNote\":\"EAN-125-3207\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-15T07:05:00\",\"ConNote\":\"EAN-125-3207\",\"DriverID\":7,\"Latitude\":40.9134194,\"Longitude\":-75.9665916,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-15T07:05:00\",\"ReceivedBy\":\"Duleep Raju\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-15 07:05:00.0000000"), ConfirmedReceivedBy = "Duleep Raju", LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-15 07:00:00.0000000") },
                new Invoice { Id = 2216, CustomerId = 17, BillToCustomerId = 1, OrderId = 2289, DeliveryMethodId = 3, ContactPersonId = 1033, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 15, InvoiceDate = DateTime.Parse("2013-02-15"), CustomerPurchaseOrderNumber = "14232", IsCreditNote = false, DeliveryInstructions = "Unit 278, 224 Hinojosa Road", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-15T12:00:00\",\"ConNote\":\"EAN-125-3266\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-16T07:05:00\",\"ConNote\":\"EAN-125-3266\",\"DriverID\":5,\"Latitude\":39.8500679,\"Longitude\":-82.1220868,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-16T07:05:00\",\"ReceivedBy\":\"Adam Kubat\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-16 07:05:00.0000000"), ConfirmedReceivedBy = "Adam Kubat", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-16 07:00:00.0000000") },
                new Invoice { Id = 2217, CustomerId = 24, BillToCustomerId = 1, OrderId = 2309, DeliveryMethodId = 3, ContactPersonId = 1047, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 15, InvoiceDate = DateTime.Parse("2013-02-15"), CustomerPurchaseOrderNumber = "12678", IsCreditNote = false, DeliveryInstructions = "Shop 181, 818 Paulet Avenue", TotalDryItems = 3, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-15T12:00:00\",\"ConNote\":\"EAN-125-3267\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-16T07:10:00\",\"ConNote\":\"EAN-125-3267\",\"DriverID\":5,\"Latitude\":34.9293315,\"Longitude\":-79.1550330,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-16T07:10:00\",\"ReceivedBy\":\"Intira Mookjai\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-16 07:10:00.0000000"), ConfirmedReceivedBy = "Intira Mookjai", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-16 07:00:00.0000000") },
                new Invoice { Id = 2256, CustomerId = 5, BillToCustomerId = 1, OrderId = 2339, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 16, InvoiceDate = DateTime.Parse("2013-02-16"), CustomerPurchaseOrderNumber = "14038", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-16T12:00:00\",\"ConNote\":\"EAN-125-3306\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-17T07:05:00\",\"ConNote\":\"EAN-125-3306\",\"DriverID\":5,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-02-17T07:05:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-17 07:05:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-17 07:00:00.0000000") },
                new Invoice { Id = 2257, CustomerId = 12, BillToCustomerId = 1, OrderId = 2318, DeliveryMethodId = 3, ContactPersonId = 1023, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 16, InvoiceDate = DateTime.Parse("2013-02-16"), CustomerPurchaseOrderNumber = "13210", IsCreditNote = false, DeliveryInstructions = "Suite 67, 413 Keskkula Lane", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-16T12:00:00\",\"ConNote\":\"EAN-125-3307\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-17T07:10:00\",\"ConNote\":\"EAN-125-3307\",\"DriverID\":5,\"Latitude\":44.8274625,\"Longitude\":-94.2749801,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-17T07:10:00\",\"ReceivedBy\":\"Heloisa Fernandes\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-17 07:10:00.0000000"), ConfirmedReceivedBy = "Heloisa Fernandes", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-17 07:00:00.0000000") },
                new Invoice { Id = 2258, CustomerId = 18, BillToCustomerId = 1, OrderId = 2322, DeliveryMethodId = 3, ContactPersonId = 1035, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 16, InvoiceDate = DateTime.Parse("2013-02-16"), CustomerPurchaseOrderNumber = "14393", IsCreditNote = false, DeliveryInstructions = "Unit 166, 1822 Gruber Lane", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-16T12:00:00\",\"ConNote\":\"EAN-125-3308\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-17T07:15:00\",\"ConNote\":\"EAN-125-3308\",\"DriverID\":5,\"Latitude\":43.0203609,\"Longitude\":-71.6003490,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-02-17T07:15:00\",\"ReceivedBy\":\"Isabelle Vodlan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-17 07:15:00.0000000"), ConfirmedReceivedBy = "Isabelle Vodlan", LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-02-17 07:00:00.0000000") },
                new Invoice { Id = 2306, CustomerId = 26, BillToCustomerId = 1, OrderId = 2361, DeliveryMethodId = 3, ContactPersonId = 1051, AccountsPersonId = 1001, SalespersonPersonId = 2, PackedByPersonId = 15, InvoiceDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "12233", IsCreditNote = false, DeliveryInstructions = "Shop 119, 1022 Folliero Street", TotalDryItems = 2, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-18T12:00:00\",\"ConNote\":\"EAN-125-3356\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-19T07:55:00\",\"ConNote\":\"EAN-125-3356\",\"DriverID\":14,\"Latitude\":41.1725134,\"Longitude\":-92.3087945,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-19T07:55:00\",\"ReceivedBy\":\"Dhanishta Majji\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-19 07:55:00.0000000"), ConfirmedReceivedBy = "Dhanishta Majji", LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-02-19 07:00:00.0000000") },
                new Invoice { Id = 2308, CustomerId = 25, BillToCustomerId = 1, OrderId = 2363, DeliveryMethodId = 3, ContactPersonId = 1049, AccountsPersonId = 1001, SalespersonPersonId = 16, PackedByPersonId = 15, InvoiceDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "16668", IsCreditNote = false, DeliveryInstructions = "Shop 37, 1143 Caune Crescent", TotalDryItems = 4, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-18T12:00:00\",\"ConNote\":\"EAN-125-3358\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-19T08:05:00\",\"ConNote\":\"EAN-125-3358\",\"DriverID\":14,\"Latitude\":36.0041223,\"Longitude\":-120.1290272,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-19T08:05:00\",\"ReceivedBy\":\"Sulabha Khalsa\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-19 08:05:00.0000000"), ConfirmedReceivedBy = "Sulabha Khalsa", LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-02-19 07:00:00.0000000") },
                new Invoice { Id = 2321, CustomerId = 25, BillToCustomerId = 1, OrderId = 2376, DeliveryMethodId = 3, ContactPersonId = 1049, AccountsPersonId = 1001, SalespersonPersonId = 3, PackedByPersonId = 15, InvoiceDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "13265", IsCreditNote = false, DeliveryInstructions = "Shop 37, 1143 Caune Crescent", TotalDryItems = 5, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-18T12:00:00\",\"ConNote\":\"EAN-125-3371\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-19T09:10:00\",\"ConNote\":\"EAN-125-3371\",\"DriverID\":14,\"Latitude\":36.0041223,\"Longitude\":-120.1290272,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-19T09:10:00\",\"ReceivedBy\":\"Sulabha Khalsa\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-19 09:10:00.0000000"), ConfirmedReceivedBy = "Sulabha Khalsa", LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-02-19 07:00:00.0000000") },
                new Invoice { Id = 2344, CustomerId = 3, BillToCustomerId = 1, OrderId = 1786, DeliveryMethodId = 3, ContactPersonId = 1005, AccountsPersonId = 1001, SalespersonPersonId = 7, PackedByPersonId = 8, InvoiceDate = DateTime.Parse("2013-02-19"), CustomerPurchaseOrderNumber = "14794", IsCreditNote = false, DeliveryInstructions = "Unit 217, 1970 Khandke Road", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-19T12:00:00\",\"ConNote\":\"EAN-125-3394\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-20T07:05:00\",\"ConNote\":\"EAN-125-3394\",\"DriverID\":4,\"Latitude\":34.2689145,\"Longitude\":-112.7271223,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-02-20T07:05:00\",\"ReceivedBy\":\"Bhaargav Rambhatla\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-20 07:05:00.0000000"), ConfirmedReceivedBy = "Bhaargav Rambhatla", LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-20 07:00:00.0000000") },
                new Invoice { Id = 2585, CustomerId = 5, BillToCustomerId = 1, OrderId = 1748, DeliveryMethodId = 3, ContactPersonId = 1009, AccountsPersonId = 1001, SalespersonPersonId = 15, PackedByPersonId = 14, InvoiceDate = DateTime.Parse("2013-02-25"), CustomerPurchaseOrderNumber = "16903", IsCreditNote = false, DeliveryInstructions = "Unit 176, 1674 Skujins Boulevard", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-25T12:00:00\",\"ConNote\":\"EAN-125-3635\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-26T07:15:00\",\"ConNote\":\"EAN-125-3635\",\"DriverID\":3,\"Latitude\":43.1992244,\"Longitude\":-78.5761394,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-02-26T07:15:00\",\"ReceivedBy\":\"Johanna Huiting\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-26 07:15:00.0000000"), ConfirmedReceivedBy = "Johanna Huiting", LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-26 07:00:00.0000000") },
                new Invoice { Id = 2682, CustomerId = 13, BillToCustomerId = 1, OrderId = 2055, DeliveryMethodId = 3, ContactPersonId = 1025, AccountsPersonId = 1001, SalespersonPersonId = 20, PackedByPersonId = 2, InvoiceDate = DateTime.Parse("2013-02-27"), CustomerPurchaseOrderNumber = "14076", IsCreditNote = false, DeliveryInstructions = "Suite 185, 1492 Shah Road", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-27T12:00:00\",\"ConNote\":\"EAN-125-3732\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-02-28T07:05:00\",\"ConNote\":\"EAN-125-3732\",\"DriverID\":11,\"Latitude\":37.6142165,\"Longitude\":-88.7081133,\"Comment\":\"Receiver not present\"}],\"DeliveredWhen\":\"2013-02-28T07:05:00\",\"ReceivedBy\":\"Razeena Hosseini\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-02-28 07:05:00.0000000"), ConfirmedReceivedBy = "Razeena Hosseini", LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-28 07:00:00.0000000") },
                new Invoice { Id = 2718, CustomerId = 11, BillToCustomerId = 1, OrderId = 1221, DeliveryMethodId = 3, ContactPersonId = 1021, AccountsPersonId = 1001, SalespersonPersonId = 8, PackedByPersonId = 18, InvoiceDate = DateTime.Parse("2013-02-28"), CustomerPurchaseOrderNumber = "15575", IsCreditNote = false, DeliveryInstructions = "Unit 250, 1432 Pullela Street", TotalDryItems = 1, TotalChillerItems = 0, ReturnedDeliveryData = "{\"Events\": [{ \"Event\":\"Ready for collection\",\"EventTime\":\"2013-02-28T12:00:00\",\"ConNote\":\"EAN-125-3768\"},{ \"Event\":\"DeliveryAttempt\",\"EventTime\":\"2013-03-01T07:05:00\",\"ConNote\":\"EAN-125-3768\",\"DriverID\":9,\"Latitude\":40.0745503,\"Longitude\":-75.5351981,\"Status\":\"Delivered\"}],\"DeliveredWhen\":\"2013-03-01T07:05:00\",\"ReceivedBy\":\"Elnaz Javan\"}", ConfirmedDeliveryTime = DateTime.Parse("2013-03-01 07:05:00.0000000"), ConfirmedReceivedBy = "Elnaz Javan", LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-03-01 07:00:00.0000000") }
            };

            context.Invoices.AddRange(invoices);
            await context.SaveChangesAsync();
        }

        private static async Task SeedOrdersAsync(WideWorldImportersContext context)
        {
            if (context.Orders.Any())
                return;

            var orders = new List<Order>()
            {
                new Order { Id = 36, CustomerId = 10, SalespersonPersonId = 15, ContactPersonId = 1019, BackorderOrderId = 72, OrderDate = DateTime.Parse("2013-01-01"), ExpectedDeliveryDate = DateTime.Parse("2013-01-02"), CustomerPurchaseOrderNumber = "14486", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-01 12:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-01 12:00:00.0000000") },
                new Order { Id = 72, CustomerId = 10, SalespersonPersonId = 15, PickedByPersonId = 4, ContactPersonId = 1019, OrderDate = DateTime.Parse("2013-01-01"), ExpectedDeliveryDate = DateTime.Parse("2013-01-02"), CustomerPurchaseOrderNumber = "14486", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000") },
                new Order { Id = 93, CustomerId = 3, SalespersonPersonId = 15, PickedByPersonId = 4, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-01-02"), ExpectedDeliveryDate = DateTime.Parse("2013-01-03"), CustomerPurchaseOrderNumber = "11991", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000") },
                new Order { Id = 196, CustomerId = 27, SalespersonPersonId = 14, PickedByPersonId = 14, ContactPersonId = 1053, OrderDate = DateTime.Parse("2013-01-03"), ExpectedDeliveryDate = DateTime.Parse("2013-01-04"), CustomerPurchaseOrderNumber = "14441", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-03 11:00:00.0000000"), LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-03 11:00:00.0000000") },
                new Order { Id = 197, CustomerId = 14, SalespersonPersonId = 13, PickedByPersonId = 14, ContactPersonId = 1027, OrderDate = DateTime.Parse("2013-01-03"), ExpectedDeliveryDate = DateTime.Parse("2013-01-04"), CustomerPurchaseOrderNumber = "19357", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-03 11:00:00.0000000"), LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-03 11:00:00.0000000") },
                new Order { Id = 288, CustomerId = 2, SalespersonPersonId = 20, PickedByPersonId = 11, ContactPersonId = 1003, OrderDate = DateTime.Parse("2013-01-05"), ExpectedDeliveryDate = DateTime.Parse("2013-01-07"), CustomerPurchaseOrderNumber = "18246", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000") },
                new Order { Id = 294, CustomerId = 6, SalespersonPersonId = 16, PickedByPersonId = 11, ContactPersonId = 1011, OrderDate = DateTime.Parse("2013-01-05"), ExpectedDeliveryDate = DateTime.Parse("2013-01-07"), CustomerPurchaseOrderNumber = "15464", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000") },
                new Order { Id = 434, CustomerId = 26, SalespersonPersonId = 14, PickedByPersonId = 17, ContactPersonId = 1051, OrderDate = DateTime.Parse("2013-01-08"), ExpectedDeliveryDate = DateTime.Parse("2013-01-09"), CustomerPurchaseOrderNumber = "13768", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-08 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 11:00:00.0000000") },
                new Order { Id = 523, CustomerId = 14, SalespersonPersonId = 15, PickedByPersonId = 13, ContactPersonId = 1027, OrderDate = DateTime.Parse("2013-01-10"), ExpectedDeliveryDate = DateTime.Parse("2013-01-11"), CustomerPurchaseOrderNumber = "10924", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new Order { Id = 582, CustomerId = 8, SalespersonPersonId = 13, PickedByPersonId = 13, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-10"), ExpectedDeliveryDate = DateTime.Parse("2013-01-11"), CustomerPurchaseOrderNumber = "19664", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new Order { Id = 584, CustomerId = 16, SalespersonPersonId = 15, PickedByPersonId = 13, ContactPersonId = 1031, OrderDate = DateTime.Parse("2013-01-10"), ExpectedDeliveryDate = DateTime.Parse("2013-01-11"), CustomerPurchaseOrderNumber = "10978", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new Order { Id = 594, CustomerId = 11, SalespersonPersonId = 8, PickedByPersonId = 20, ContactPersonId = 1021, OrderDate = DateTime.Parse("2013-01-11"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "19528", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000") },
                new Order { Id = 600, CustomerId = 5, SalespersonPersonId = 15, PickedByPersonId = 20, ContactPersonId = 1009, OrderDate = DateTime.Parse("2013-01-11"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "15687", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000") },
                new Order { Id = 658, CustomerId = 8, SalespersonPersonId = 16, ContactPersonId = 1015, BackorderOrderId = 665, OrderDate = DateTime.Parse("2013-01-11"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "19863", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new Order { Id = 665, CustomerId = 8, SalespersonPersonId = 16, PickedByPersonId = 9, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-11"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "19863", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000") },
                new Order { Id = 677, CustomerId = 8, SalespersonPersonId = 2, PickedByPersonId = 11, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-12"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "11175", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000") },
                new Order { Id = 685, CustomerId = 22, SalespersonPersonId = 7, PickedByPersonId = 11, ContactPersonId = 1043, OrderDate = DateTime.Parse("2013-01-12"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "18709", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000") },
                new Order { Id = 686, CustomerId = 27, SalespersonPersonId = 3, PickedByPersonId = 11, ContactPersonId = 1053, OrderDate = DateTime.Parse("2013-01-12"), ExpectedDeliveryDate = DateTime.Parse("2013-01-14"), CustomerPurchaseOrderNumber = "13940", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000") },
                new Order { Id = 709, CustomerId = 6, SalespersonPersonId = 14, PickedByPersonId = 6, ContactPersonId = 1011, OrderDate = DateTime.Parse("2013-01-14"), ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "13516", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000") },
                new Order { Id = 711, CustomerId = 12, SalespersonPersonId = 15, PickedByPersonId = 6, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-01-14"), ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "17021", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000") },
                new Order { Id = 712, CustomerId = 11, SalespersonPersonId = 13, PickedByPersonId = 6, ContactPersonId = 1021, OrderDate = DateTime.Parse("2013-01-14"), ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "15290", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000") },
                new Order { Id = 724, CustomerId = 18, SalespersonPersonId = 20, PickedByPersonId = 6, ContactPersonId = 1035, OrderDate = DateTime.Parse("2013-01-14"), ExpectedDeliveryDate = DateTime.Parse("2013-01-15"), CustomerPurchaseOrderNumber = "18980", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000") },
                new Order { Id = 824, CustomerId = 17, SalespersonPersonId = 15, PickedByPersonId = 9, ContactPersonId = 1033, OrderDate = DateTime.Parse("2013-01-15"), ExpectedDeliveryDate = DateTime.Parse("2013-01-16"), CustomerPurchaseOrderNumber = "19829", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000") },
                new Order { Id = 850, CustomerId = 17, SalespersonPersonId = 2, PickedByPersonId = 9, ContactPersonId = 1033, OrderDate = DateTime.Parse("2013-01-15"), ExpectedDeliveryDate = DateTime.Parse("2013-01-16"), CustomerPurchaseOrderNumber = "17120", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000") },
                new Order { Id = 853, CustomerId = 12, SalespersonPersonId = 20, PickedByPersonId = 9, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-01-15"), ExpectedDeliveryDate = DateTime.Parse("2013-01-16"), CustomerPurchaseOrderNumber = "18406", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000") },
                new Order { Id = 869, CustomerId = 8, SalespersonPersonId = 15, PickedByPersonId = 15, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-16"), ExpectedDeliveryDate = DateTime.Parse("2013-01-17"), CustomerPurchaseOrderNumber = "15606", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new Order { Id = 885, CustomerId = 16, SalespersonPersonId = 13, PickedByPersonId = 15, ContactPersonId = 1031, OrderDate = DateTime.Parse("2013-01-16"), ExpectedDeliveryDate = DateTime.Parse("2013-01-17"), CustomerPurchaseOrderNumber = "16330", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new Order { Id = 901, CustomerId = 8, SalespersonPersonId = 2, PickedByPersonId = 15, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-16"), ExpectedDeliveryDate = DateTime.Parse("2013-01-17"), CustomerPurchaseOrderNumber = "16758", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new Order { Id = 960, CustomerId = 3, SalespersonPersonId = 15, PickedByPersonId = 4, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "10197", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 961, CustomerId = 23, SalespersonPersonId = 16, PickedByPersonId = 4, ContactPersonId = 1045, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "18568", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 964, CustomerId = 4, SalespersonPersonId = 6, PickedByPersonId = 4, ContactPersonId = 1007, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "15524", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 1012, CustomerId = 22, SalespersonPersonId = 7, PickedByPersonId = 4, ContactPersonId = 1043, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "17387", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 1014, CustomerId = 16, SalespersonPersonId = 6, PickedByPersonId = 4, ContactPersonId = 1031, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "13732", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 1015, CustomerId = 5, SalespersonPersonId = 3, PickedByPersonId = 4, ContactPersonId = 1009, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "11932", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 1023, CustomerId = 25, SalespersonPersonId = 20, PickedByPersonId = 4, ContactPersonId = 1049, OrderDate = DateTime.Parse("2013-01-18"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "14874", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new Order { Id = 1047, CustomerId = 5, SalespersonPersonId = 13, PickedByPersonId = 11, ContactPersonId = 1009, OrderDate = DateTime.Parse("2013-01-19"), ExpectedDeliveryDate = DateTime.Parse("2013-01-21"), CustomerPurchaseOrderNumber = "15368", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-19 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-19 11:00:00.0000000") },
                new Order { Id = 1095, CustomerId = 23, SalespersonPersonId = 16, PickedByPersonId = 15, ContactPersonId = 1045, OrderDate = DateTime.Parse("2013-01-21"), ExpectedDeliveryDate = DateTime.Parse("2013-01-22"), CustomerPurchaseOrderNumber = "15511", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-21 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-21 11:00:00.0000000") },
                new Order { Id = 1111, CustomerId = 8, SalespersonPersonId = 16, PickedByPersonId = 16, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-22"), ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), CustomerPurchaseOrderNumber = "11012", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-22 11:00:00.0000000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-22 11:00:00.0000000") },
                new Order { Id = 1115, CustomerId = 25, SalespersonPersonId = 2, PickedByPersonId = 16, ContactPersonId = 1049, OrderDate = DateTime.Parse("2013-01-22"), ExpectedDeliveryDate = DateTime.Parse("2013-01-23"), CustomerPurchaseOrderNumber = "13810", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-22 11:00:00.0000000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-22 11:00:00.0000000") },
                new Order { Id = 1156, CustomerId = 22, SalespersonPersonId = 14, ContactPersonId = 1043, BackorderOrderId = 1218, OrderDate = DateTime.Parse("2013-01-23"), ExpectedDeliveryDate = DateTime.Parse("2013-01-24"), CustomerPurchaseOrderNumber = "14690", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-23 12:00:00.0000000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-23 12:00:00.0000000") },
                new Order { Id = 1175, CustomerId = 21, SalespersonPersonId = 16, PickedByPersonId = 20, ContactPersonId = 1041, OrderDate = DateTime.Parse("2013-01-23"), ExpectedDeliveryDate = DateTime.Parse("2013-01-24"), CustomerPurchaseOrderNumber = "18012", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-23 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-23 11:00:00.0000000") },
                new Order { Id = 1202, CustomerId = 11, SalespersonPersonId = 8, ContactPersonId = 1021, BackorderOrderId = 1221, OrderDate = DateTime.Parse("2013-01-23"), ExpectedDeliveryDate = DateTime.Parse("2013-01-24"), CustomerPurchaseOrderNumber = "15575", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-23 12:00:00.0000000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-23 12:00:00.0000000") },
                new Order { Id = 1218, CustomerId = 22, SalespersonPersonId = 14, PickedByPersonId = 8, ContactPersonId = 1043, OrderDate = DateTime.Parse("2013-01-23"), ExpectedDeliveryDate = DateTime.Parse("2013-01-24"), CustomerPurchaseOrderNumber = "14690", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new Order { Id = 1221, CustomerId = 11, SalespersonPersonId = 8, PickedByPersonId = 9, ContactPersonId = 1021, OrderDate = DateTime.Parse("2013-01-23"), ExpectedDeliveryDate = DateTime.Parse("2013-01-24"), CustomerPurchaseOrderNumber = "15575", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-28 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-28 11:00:00.0000000") },
                new Order { Id = 1247, CustomerId = 3, SalespersonPersonId = 16, PickedByPersonId = 12, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-01-24"), ExpectedDeliveryDate = DateTime.Parse("2013-01-25"), CustomerPurchaseOrderNumber = "13258", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-24 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-01-24 11:00:00.0000000") },
                new Order { Id = 1300, CustomerId = 24, SalespersonPersonId = 7, PickedByPersonId = 17, ContactPersonId = 1047, OrderDate = DateTime.Parse("2013-01-25"), ExpectedDeliveryDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "15668", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new Order { Id = 1333, CustomerId = 12, SalespersonPersonId = 15, PickedByPersonId = 17, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-01-25"), ExpectedDeliveryDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "15326", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new Order { Id = 1336, CustomerId = 23, SalespersonPersonId = 20, PickedByPersonId = 17, ContactPersonId = 1045, OrderDate = DateTime.Parse("2013-01-25"), ExpectedDeliveryDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "15603", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new Order { Id = 1339, CustomerId = 12, SalespersonPersonId = 15, PickedByPersonId = 17, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-01-25"), ExpectedDeliveryDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "19199", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new Order { Id = 1366, CustomerId = 26, SalespersonPersonId = 16, PickedByPersonId = 4, ContactPersonId = 1051, OrderDate = DateTime.Parse("2013-01-26"), ExpectedDeliveryDate = DateTime.Parse("2013-01-28"), CustomerPurchaseOrderNumber = "19397", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-26 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-26 11:00:00.0000000") },
                new Order { Id = 1385, CustomerId = 26, SalespersonPersonId = 3, PickedByPersonId = 5, ContactPersonId = 1051, OrderDate = DateTime.Parse("2013-01-28"), ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "16296", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000") },
                new Order { Id = 1389, CustomerId = 8, SalespersonPersonId = 7, PickedByPersonId = 5, ContactPersonId = 1015, OrderDate = DateTime.Parse("2013-01-28"), ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "11117", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000") },
                new Order { Id = 1395, CustomerId = 5, SalespersonPersonId = 16, PickedByPersonId = 5, ContactPersonId = 1009, OrderDate = DateTime.Parse("2013-01-28"), ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "19436", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000") },
                new Order { Id = 1420, CustomerId = 12, SalespersonPersonId = 14, PickedByPersonId = 5, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-01-28"), ExpectedDeliveryDate = DateTime.Parse("2013-01-29"), CustomerPurchaseOrderNumber = "13636", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000") },
                new Order { Id = 1453, CustomerId = 25, SalespersonPersonId = 13, PickedByPersonId = 8, ContactPersonId = 1049, OrderDate = DateTime.Parse("2013-01-29"), ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "13272", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new Order { Id = 1458, CustomerId = 2, SalespersonPersonId = 16, PickedByPersonId = 8, ContactPersonId = 1003, OrderDate = DateTime.Parse("2013-01-29"), ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "12882", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new Order { Id = 1471, CustomerId = 21, SalespersonPersonId = 7, ContactPersonId = 1041, BackorderOrderId = 1524, OrderDate = DateTime.Parse("2013-01-29"), ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "19415", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new Order { Id = 1486, CustomerId = 14, SalespersonPersonId = 15, PickedByPersonId = 8, ContactPersonId = 1027, OrderDate = DateTime.Parse("2013-01-29"), ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "13321", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new Order { Id = 1524, CustomerId = 21, SalespersonPersonId = 7, PickedByPersonId = 5, ContactPersonId = 1041, OrderDate = DateTime.Parse("2013-01-29"), ExpectedDeliveryDate = DateTime.Parse("2013-01-30"), CustomerPurchaseOrderNumber = "19415", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new Order { Id = 1557, CustomerId = 13, SalespersonPersonId = 2, PickedByPersonId = 5, ContactPersonId = 1025, OrderDate = DateTime.Parse("2013-01-30"), ExpectedDeliveryDate = DateTime.Parse("2013-01-31"), CustomerPurchaseOrderNumber = "18781", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new Order { Id = 1567, CustomerId = 12, SalespersonPersonId = 16, PickedByPersonId = 5, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-01-30"), ExpectedDeliveryDate = DateTime.Parse("2013-01-31"), CustomerPurchaseOrderNumber = "17730", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new Order { Id = 1573, CustomerId = 7, SalespersonPersonId = 13, PickedByPersonId = 5, ContactPersonId = 1013, OrderDate = DateTime.Parse("2013-01-30"), ExpectedDeliveryDate = DateTime.Parse("2013-01-31"), CustomerPurchaseOrderNumber = "12911", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new Order { Id = 1592, CustomerId = 18, SalespersonPersonId = 20, PickedByPersonId = 5, ContactPersonId = 1035, OrderDate = DateTime.Parse("2013-01-30"), ExpectedDeliveryDate = DateTime.Parse("2013-01-31"), CustomerPurchaseOrderNumber = "15997", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new Order { Id = 1651, CustomerId = 20, SalespersonPersonId = 3, PickedByPersonId = 2, ContactPersonId = 1039, OrderDate = DateTime.Parse("2013-01-31"), ExpectedDeliveryDate = DateTime.Parse("2013-02-01"), CustomerPurchaseOrderNumber = "19083", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-31 11:00:00.0000000"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-31 11:00:00.0000000") },
                new Order { Id = 1656, CustomerId = 26, SalespersonPersonId = 8, PickedByPersonId = 2, ContactPersonId = 1051, OrderDate = DateTime.Parse("2013-01-31"), ExpectedDeliveryDate = DateTime.Parse("2013-02-01"), CustomerPurchaseOrderNumber = "18708", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-01-31 11:00:00.0000000"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-31 11:00:00.0000000") },
                new Order { Id = 1695, CustomerId = 5, SalespersonPersonId = 15, ContactPersonId = 1009, BackorderOrderId = 1748, OrderDate = DateTime.Parse("2013-02-01"), ExpectedDeliveryDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "16903", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-01 12:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-01 12:00:00.0000000") },
                new Order { Id = 1739, CustomerId = 25, SalespersonPersonId = 15, PickedByPersonId = 7, ContactPersonId = 1049, OrderDate = DateTime.Parse("2013-02-01"), ExpectedDeliveryDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "19271", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-01 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-01 11:00:00.0000000") },
                new Order { Id = 1748, CustomerId = 5, SalespersonPersonId = 15, PickedByPersonId = 13, ContactPersonId = 1009, OrderDate = DateTime.Parse("2013-02-01"), ExpectedDeliveryDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "16903", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-25 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-02-25 11:00:00.0000000") },
                new Order { Id = 1757, CustomerId = 27, SalespersonPersonId = 16, PickedByPersonId = 8, ContactPersonId = 1053, OrderDate = DateTime.Parse("2013-02-02"), ExpectedDeliveryDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "12429", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-02 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-02 11:00:00.0000000") },
                new Order { Id = 1779, CustomerId = 3, SalespersonPersonId = 7, ContactPersonId = 1005, BackorderOrderId = 1786, OrderDate = DateTime.Parse("2013-02-02"), ExpectedDeliveryDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "14794", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-02 12:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 12:00:00.0000000") },
                new Order { Id = 1786, CustomerId = 3, SalespersonPersonId = 7, PickedByPersonId = 18, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-02-02"), ExpectedDeliveryDate = DateTime.Parse("2013-02-04"), CustomerPurchaseOrderNumber = "14794", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-19 11:00:00.0000000"), LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-02-19 11:00:00.0000000") },
                new Order { Id = 1799, CustomerId = 27, SalespersonPersonId = 20, PickedByPersonId = 20, ContactPersonId = 1053, OrderDate = DateTime.Parse("2013-02-04"), ExpectedDeliveryDate = DateTime.Parse("2013-02-05"), CustomerPurchaseOrderNumber = "11970", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000") },
                new Order { Id = 1829, CustomerId = 3, SalespersonPersonId = 3, PickedByPersonId = 20, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-02-04"), ExpectedDeliveryDate = DateTime.Parse("2013-02-05"), CustomerPurchaseOrderNumber = "10531", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000") },
                new Order { Id = 1889, CustomerId = 18, SalespersonPersonId = 14, PickedByPersonId = 7, ContactPersonId = 1035, OrderDate = DateTime.Parse("2013-02-06"), ExpectedDeliveryDate = DateTime.Parse("2013-02-07"), CustomerPurchaseOrderNumber = "14526", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new Order { Id = 1892, CustomerId = 11, SalespersonPersonId = 14, PickedByPersonId = 7, ContactPersonId = 1021, OrderDate = DateTime.Parse("2013-02-06"), ExpectedDeliveryDate = DateTime.Parse("2013-02-07"), CustomerPurchaseOrderNumber = "13120", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new Order { Id = 1899, CustomerId = 17, SalespersonPersonId = 20, PickedByPersonId = 7, ContactPersonId = 1033, OrderDate = DateTime.Parse("2013-02-06"), ExpectedDeliveryDate = DateTime.Parse("2013-02-07"), CustomerPurchaseOrderNumber = "15290", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new Order { Id = 1900, CustomerId = 22, SalespersonPersonId = 3, PickedByPersonId = 7, ContactPersonId = 1043, OrderDate = DateTime.Parse("2013-02-06"), ExpectedDeliveryDate = DateTime.Parse("2013-02-07"), CustomerPurchaseOrderNumber = "11241", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new Order { Id = 1941, CustomerId = 19, SalespersonPersonId = 20, PickedByPersonId = 12, ContactPersonId = 1037, OrderDate = DateTime.Parse("2013-02-07"), ExpectedDeliveryDate = DateTime.Parse("2013-02-08"), CustomerPurchaseOrderNumber = "10854", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-07 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-07 11:00:00.0000000") },
                new Order { Id = 1973, CustomerId = 2, SalespersonPersonId = 16, PickedByPersonId = 11, ContactPersonId = 1003, OrderDate = DateTime.Parse("2013-02-08"), ExpectedDeliveryDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "11240", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000") },
                new Order { Id = 1988, CustomerId = 17, SalespersonPersonId = 8, PickedByPersonId = 11, ContactPersonId = 1033, OrderDate = DateTime.Parse("2013-02-08"), ExpectedDeliveryDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "13675", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000") },
                new Order { Id = 1992, CustomerId = 4, SalespersonPersonId = 6, PickedByPersonId = 11, ContactPersonId = 1007, OrderDate = DateTime.Parse("2013-02-08"), ExpectedDeliveryDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "14695", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000") },
                new Order { Id = 2010, CustomerId = 3, SalespersonPersonId = 3, PickedByPersonId = 6, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-02-09"), ExpectedDeliveryDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "18638", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-09 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-09 11:00:00.0000000") },
                new Order { Id = 2013, CustomerId = 13, SalespersonPersonId = 20, ContactPersonId = 1025, BackorderOrderId = 2055, OrderDate = DateTime.Parse("2013-02-09"), ExpectedDeliveryDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "14076", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-09 12:00:00.0000000"), LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-02-09 12:00:00.0000000") },
                new Order { Id = 2055, CustomerId = 13, SalespersonPersonId = 20, PickedByPersonId = 14, ContactPersonId = 1025, OrderDate = DateTime.Parse("2013-02-09"), ExpectedDeliveryDate = DateTime.Parse("2013-02-11"), CustomerPurchaseOrderNumber = "14076", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-27 11:00:00.0000000"), LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-02-27 11:00:00.0000000") },
                new Order { Id = 2067, CustomerId = 3, SalespersonPersonId = 15, PickedByPersonId = 6, ContactPersonId = 1005, OrderDate = DateTime.Parse("2013-02-11"), ExpectedDeliveryDate = DateTime.Parse("2013-02-12"), CustomerPurchaseOrderNumber = "18655", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new Order { Id = 2077, CustomerId = 24, SalespersonPersonId = 8, PickedByPersonId = 6, ContactPersonId = 1047, OrderDate = DateTime.Parse("2013-02-11"), ExpectedDeliveryDate = DateTime.Parse("2013-02-12"), CustomerPurchaseOrderNumber = "19545", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new Order { Id = 2089, CustomerId = 4, SalespersonPersonId = 8, ContactPersonId = 1007, BackorderOrderId = 2128, OrderDate = DateTime.Parse("2013-02-11"), ExpectedDeliveryDate = DateTime.Parse("2013-02-12"), CustomerPurchaseOrderNumber = "12759", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new Order { Id = 2125, CustomerId = 13, SalespersonPersonId = 14, PickedByPersonId = 6, ContactPersonId = 1025, OrderDate = DateTime.Parse("2013-02-11"), ExpectedDeliveryDate = DateTime.Parse("2013-02-12"), CustomerPurchaseOrderNumber = "16322", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new Order { Id = 2128, CustomerId = 4, SalespersonPersonId = 8, PickedByPersonId = 4, ContactPersonId = 1007, OrderDate = DateTime.Parse("2013-02-11"), ExpectedDeliveryDate = DateTime.Parse("2013-02-12"), CustomerPurchaseOrderNumber = "12759", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-13 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-13 11:00:00.0000000") },
                new Order { Id = 2157, CustomerId = 22, SalespersonPersonId = 14, PickedByPersonId = 12, ContactPersonId = 1043, OrderDate = DateTime.Parse("2013-02-12"), ExpectedDeliveryDate = DateTime.Parse("2013-02-13"), CustomerPurchaseOrderNumber = "14644", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-12 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-12 11:00:00.0000000") },
                new Order { Id = 2185, CustomerId = 7, SalespersonPersonId = 6, PickedByPersonId = 4, ContactPersonId = 1013, OrderDate = DateTime.Parse("2013-02-13"), ExpectedDeliveryDate = DateTime.Parse("2013-02-14"), CustomerPurchaseOrderNumber = "14034", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-13 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-13 11:00:00.0000000") },
                new Order { Id = 2220, CustomerId = 21, SalespersonPersonId = 3, PickedByPersonId = 10, ContactPersonId = 1041, OrderDate = DateTime.Parse("2013-02-14"), ExpectedDeliveryDate = DateTime.Parse("2013-02-15"), CustomerPurchaseOrderNumber = "18496", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-14 11:00:00.0000000"), LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-02-14 11:00:00.0000000") },
                new Order { Id = 2289, CustomerId = 17, SalespersonPersonId = 15, PickedByPersonId = 10, ContactPersonId = 1033, OrderDate = DateTime.Parse("2013-02-15"), ExpectedDeliveryDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "14232", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000"), LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000") },
                new Order { Id = 2309, CustomerId = 24, SalespersonPersonId = 7, PickedByPersonId = 10, ContactPersonId = 1047, OrderDate = DateTime.Parse("2013-02-15"), ExpectedDeliveryDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "12678", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000"), LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000") },
                new Order { Id = 2318, CustomerId = 12, SalespersonPersonId = 8, PickedByPersonId = 12, ContactPersonId = 1023, OrderDate = DateTime.Parse("2013-02-16"), ExpectedDeliveryDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "13210", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new Order { Id = 2322, CustomerId = 18, SalespersonPersonId = 2, PickedByPersonId = 12, ContactPersonId = 1035, OrderDate = DateTime.Parse("2013-02-16"), ExpectedDeliveryDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "14393", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new Order { Id = 2339, CustomerId = 5, SalespersonPersonId = 15, PickedByPersonId = 12, ContactPersonId = 1009, OrderDate = DateTime.Parse("2013-02-16"), ExpectedDeliveryDate = DateTime.Parse("2013-02-18"), CustomerPurchaseOrderNumber = "14038", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new Order { Id = 2361, CustomerId = 26, SalespersonPersonId = 2, PickedByPersonId = 9, ContactPersonId = 1051, OrderDate = DateTime.Parse("2013-02-18"), ExpectedDeliveryDate = DateTime.Parse("2013-02-19"), CustomerPurchaseOrderNumber = "12233", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000") },
                new Order { Id = 2363, CustomerId = 25, SalespersonPersonId = 16, PickedByPersonId = 9, ContactPersonId = 1049, OrderDate = DateTime.Parse("2013-02-18"), ExpectedDeliveryDate = DateTime.Parse("2013-02-19"), CustomerPurchaseOrderNumber = "16668", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000") },
                new Order { Id = 2376, CustomerId = 25, SalespersonPersonId = 3, PickedByPersonId = 9, ContactPersonId = 1049, OrderDate = DateTime.Parse("2013-02-18"), ExpectedDeliveryDate = DateTime.Parse("2013-02-19"), CustomerPurchaseOrderNumber = "13265", IsUndersupplyBackordered = true, PickingCompletedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000") }
            };

            context.Orders.AddRange(orders);
            await context.SaveChangesAsync();
        }

        private static async Task SeedOrderLinesAsync(WideWorldImportersContext context)
        {
            if (context.OrderLines.Any())
                return;

            var orderLines = new List<OrderLine>()
            {
                new OrderLine() { Id = 197, OrderId = 93, StockItemId = 36, Description = "Developer joke mug - when your hammer is C++ (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000") },
                new OrderLine() { Id = 198, OrderId = 93, StockItemId = 29, Description = "DBA joke mug - two types of DBAs (Black)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-02 11:00:00.0000000") },
                new OrderLine() { Id = 489, OrderId = 196, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-01-03 11:00:00.0000000"), LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-01-03 11:00:00.0000000") },
                new OrderLine() { Id = 699, OrderId = 288, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000") },
                new OrderLine() { Id = 700, OrderId = 288, StockItemId = 40, Description = "Developer joke mug - (hip, hip, array) (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000") },
                new OrderLine() { Id = 712, OrderId = 294, StockItemId = 37, Description = "Developer joke mug - when your hammer is C++ (Black)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 2, PickingCompletedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000") },
                new OrderLine() { Id = 714, OrderId = 294, StockItemId = 33, Description = "Developer joke mug - that's a hardware problem (Black)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-05 11:00:00.0000000") },
                new OrderLine() { Id = 1141, OrderId = 434, StockItemId = 38, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-01-08 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 11:00:00.0000000") },
                new OrderLine() { Id = 1143, OrderId = 434, StockItemId = 14, Description = "USB food flash drive - fortune cookie", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 2, PickingCompletedWhen = DateTime.Parse("2013-01-08 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-08 11:00:00.0000000") },
                new OrderLine() { Id = 1457, OrderId = 523, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new OrderLine() { Id = 1652, OrderId = 582, StockItemId = 16, Description = "DBA joke mug - mind if I join you? (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new OrderLine() { Id = 1657, OrderId = 584, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new OrderLine() { Id = 1659, OrderId = 584, StockItemId = 28, Description = "DBA joke mug - two types of DBAs (White)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new OrderLine() { Id = 1660, OrderId = 584, StockItemId = 13, Description = "USB food flash drive - shrimp cocktail", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-01-10 11:00:00.0000000") },
                new OrderLine() { Id = 1686, OrderId = 594, StockItemId = 47, Description = "Developer joke mug - a foo walks into a bar (Black)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000") },
                new OrderLine() { Id = 1710, OrderId = 600, StockItemId = 35, Description = "Developer joke mug - fun was unexpected at this time (Black)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000") },
                new OrderLine() { Id = 1711, OrderId = 600, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000") },
                new OrderLine() { Id = 1929, OrderId = 658, StockItemId = 42, Description = "Developer joke mug - understanding recursion requires understanding recursion (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-11 11:00:00.0000000") },
                new OrderLine() { Id = 2008, OrderId = 685, StockItemId = 16, Description = "DBA joke mug - mind if I join you? (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-01-12 11:00:00.0000000") },
                new OrderLine() { Id = 2084, OrderId = 711, StockItemId = 14, Description = "USB food flash drive - fortune cookie", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000") },
                new OrderLine() { Id = 2085, OrderId = 712, StockItemId = 43, Description = "Developer joke mug - understanding recursion requires understanding recursion (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-01-14 11:00:00.0000000") },
                new OrderLine() { Id = 2483, OrderId = 824, StockItemId = 1, Description = "USB missile launcher (Green)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000") },
                new OrderLine() { Id = 2582, OrderId = 853, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 11:00:00.0000000") },
                new OrderLine() { Id = 2662, OrderId = 885, StockItemId = 24, Description = "DBA joke mug - I will get you in order (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new OrderLine() { Id = 2663, OrderId = 885, StockItemId = 6, Description = "USB food flash drive - hot dog", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new OrderLine() { Id = 2664, OrderId = 885, StockItemId = 38, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 1, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new OrderLine() { Id = 2717, OrderId = 901, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-16 11:00:00.0000000") },
                new OrderLine() { Id = 2908, OrderId = 960, StockItemId = 38, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 2920, OrderId = 964, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 2921, OrderId = 964, StockItemId = 41, Description = "Developer joke mug - (hip, hip, array) (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3095, OrderId = 1012, StockItemId = 34, Description = "Developer joke mug - fun was unexpected at this time (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3098, OrderId = 1014, StockItemId = 45, Description = "Developer joke mug - there are 10 types of people in the world (Black)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3099, OrderId = 1014, StockItemId = 23, Description = "DBA joke mug - it depends (Black)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3101, OrderId = 1014, StockItemId = 25, Description = "DBA joke mug - I will get you in order (Black)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3103, OrderId = 1015, StockItemId = 19, Description = "DBA joke mug - daaaaaa-ta (Black)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3128, OrderId = 1023, StockItemId = 24, Description = "DBA joke mug - I will get you in order (White)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 5, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3129, OrderId = 1023, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-18 11:00:00.0000000") },
                new OrderLine() { Id = 3713, OrderId = 1202, StockItemId = 30, Description = "Developer joke mug - Oct 31 = Dec 25 (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-23 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-01-23 11:00:00.0000000") },
                new OrderLine() { Id = 4125, OrderId = 1333, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 2, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new OrderLine() { Id = 4132, OrderId = 1336, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new OrderLine() { Id = 4142, OrderId = 1339, StockItemId = 20, Description = "DBA joke mug - you might be a DBA if (White)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 2, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new OrderLine() { Id = 4144, OrderId = 1339, StockItemId = 28, Description = "DBA joke mug - two types of DBAs (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new OrderLine() { Id = 4145, OrderId = 1339, StockItemId = 25, Description = "DBA joke mug - I will get you in order (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-25 11:00:00.0000000") },
                new OrderLine() { Id = 4231, OrderId = 1366, StockItemId = 39, Description = "Developer joke mug - inheritance is the OO way to become wealthy (Black)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-01-26 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-26 11:00:00.0000000") },
                new OrderLine() { Id = 4416, OrderId = 1420, StockItemId = 15, Description = "USB food flash drive - dessert 10 drive variety pack", PackageTypeId = 9, Quantity = 8, UnitPrice = Decimal.Parse("240.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-28 11:00:00.0000000") },
                new OrderLine() { Id = 4527, OrderId = 1453, StockItemId = 15, Description = "USB food flash drive - dessert 10 drive variety pack", PackageTypeId = 9, Quantity = 6, UnitPrice = Decimal.Parse("240.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new OrderLine() { Id = 4528, OrderId = 1453, StockItemId = 23, Description = "DBA joke mug - it depends (Black)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new OrderLine() { Id = 4596, OrderId = 1471, StockItemId = 4, Description = "USB food flash drive - sushi roll", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-01-29 11:00:00.0000000") },
                new OrderLine() { Id = 4877, OrderId = 1557, StockItemId = 11, Description = "USB food flash drive - cookie", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new OrderLine() { Id = 4878, OrderId = 1557, StockItemId = 10, Description = "USB food flash drive - chocolate bar", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new OrderLine() { Id = 4879, OrderId = 1557, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new OrderLine() { Id = 5008, OrderId = 1592, StockItemId = 18, Description = "DBA joke mug - daaaaaa-ta (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-30 11:00:00.0000000") },
                new OrderLine() { Id = 5229, OrderId = 1656, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-01-31 11:00:00.0000000"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-31 11:00:00.0000000") },
                new OrderLine() { Id = 5494, OrderId = 1739, StockItemId = 6, Description = "USB food flash drive - hot dog", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-02-01 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-01 11:00:00.0000000") },
                new OrderLine() { Id = 5547, OrderId = 1757, StockItemId = 28, Description = "DBA joke mug - two types of DBAs (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 1, PickingCompletedWhen = DateTime.Parse("2013-02-02 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-02 11:00:00.0000000") },
                new OrderLine() { Id = 5621, OrderId = 1779, StockItemId = 1, Description = "USB missile launcher (Green)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 2, PickingCompletedWhen = DateTime.Parse("2013-02-02 11:00:00.0000000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-02 11:00:00.0000000") },
                new OrderLine() { Id = 5681, OrderId = 1799, StockItemId = 1, Description = "USB missile launcher (Green)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 1, PickingCompletedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000") },
                new OrderLine() { Id = 5785, OrderId = 1829, StockItemId = 36, Description = "Developer joke mug - when your hammer is C++ (White)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 5, PickingCompletedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-04 11:00:00.0000000") },
                new OrderLine() { Id = 5991, OrderId = 1889, StockItemId = 39, Description = "Developer joke mug - inheritance is the OO way to become wealthy (Black)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new OrderLine() { Id = 6032, OrderId = 1899, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new OrderLine() { Id = 6037, OrderId = 1900, StockItemId = 23, Description = "DBA joke mug - it depends (Black)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 2, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new OrderLine() { Id = 6038, OrderId = 1900, StockItemId = 3, Description = "Office cube periscope (Black)", PackageTypeId = 7, Quantity = 30, UnitPrice = Decimal.Parse("18.50"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 30, PickingCompletedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-02-06 11:00:00.0000000") },
                new OrderLine() { Id = 6180, OrderId = 1941, StockItemId = 6, Description = "USB food flash drive - hot dog", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-02-07 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-07 11:00:00.0000000") },
                new OrderLine() { Id = 6289, OrderId = 1973, StockItemId = 17, Description = "DBA joke mug - mind if I join you? (Black)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000") },
                new OrderLine() { Id = 6290, OrderId = 1973, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-08 11:00:00.0000000") },
                new OrderLine() { Id = 6423, OrderId = 2013, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 1, PickingCompletedWhen = DateTime.Parse("2013-02-09 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-09 11:00:00.0000000") },
                new OrderLine() { Id = 6596, OrderId = 2067, StockItemId = 33, Description = "Developer joke mug - that's a hardware problem (Black)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new OrderLine() { Id = 6597, OrderId = 2067, StockItemId = 47, Description = "Developer joke mug - a foo walks into a bar (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new OrderLine() { Id = 6600, OrderId = 2067, StockItemId = 30, Description = "Developer joke mug - Oct 31 = Dec 25 (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new OrderLine() { Id = 6634, OrderId = 2077, StockItemId = 11, Description = "USB food flash drive - cookie", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 3, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new OrderLine() { Id = 6679, OrderId = 2089, StockItemId = 15, Description = "USB food flash drive - dessert 10 drive variety pack", PackageTypeId = 9, Quantity = 7, UnitPrice = Decimal.Parse("240.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000"), LastEditedBy = 6, LastEditedWhen = DateTime.Parse("2013-02-11 11:00:00.0000000") },
                new OrderLine() { Id = 6993, OrderId = 2185, StockItemId = 25, Description = "DBA joke mug - I will get you in order (Black)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-02-13 11:00:00.0000000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-02-13 11:00:00.0000000") },
                new OrderLine() { Id = 7092, OrderId = 2220, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 1, PickingCompletedWhen = DateTime.Parse("2013-02-14 11:00:00.0000000"), LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-02-14 11:00:00.0000000") },
                new OrderLine() { Id = 7293, OrderId = 2289, StockItemId = 43, Description = "Developer joke mug - understanding recursion requires understanding recursion (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 8, PickingCompletedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000"), LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000") },
                new OrderLine() { Id = 7364, OrderId = 2309, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 4, PickingCompletedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000"), LastEditedBy = 10, LastEditedWhen = DateTime.Parse("2013-02-15 11:00:00.0000000") },
                new OrderLine() { Id = 7397, OrderId = 2322, StockItemId = 2, Description = "USB rocket launcher (Gray)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 5, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new OrderLine() { Id = 7400, OrderId = 2322, StockItemId = 20, Description = "DBA joke mug - you might be a DBA if (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 6, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new OrderLine() { Id = 7464, OrderId = 2339, StockItemId = 46, Description = "Developer joke mug - a foo walks into a bar (White)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 10, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new OrderLine() { Id = 7465, OrderId = 2339, StockItemId = 29, Description = "DBA joke mug - two types of DBAs (Black)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 9, PickingCompletedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000"), LastEditedBy = 12, LastEditedWhen = DateTime.Parse("2013-02-16 11:00:00.0000000") },
                new OrderLine() { Id = 7531, OrderId = 2363, StockItemId = 42, Description = "Developer joke mug - understanding recursion requires understanding recursion (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 7, PickingCompletedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000") },
                new OrderLine() { Id = 7580, OrderId = 2376, StockItemId = 34, Description = "Developer joke mug - fun was unexpected at this time (White)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), PickedQuantity = 5, PickingCompletedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-18 11:00:00.0000000") }
            };

            context.OrderLines.AddRange(orderLines);
            await context.SaveChangesAsync();
        }

        private static async Task SeedInvoiceLinesAsync(WideWorldImportersContext context)
        {
            if (context.InvoiceLines.Any())
                return;

            var invoiceLines = new List<InvoiceLine>()
            {
                new InvoiceLine() { Id = 190, InvoiceId = 92, StockItemId = 36, Description = "Developer joke mug - when your hammer is C++ (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-02 12:00:00.0000000") },
                new InvoiceLine() { Id = 191, InvoiceId = 92, StockItemId = 29, Description = "DBA joke mug - two types of DBAs (Black)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-02 12:00:00.0000000") },
                new InvoiceLine() { Id = 467, InvoiceId = 196, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("11.70"), LineProfit = Decimal.Parse("51.00"), ExtendedPrice = Decimal.Parse("89.70"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-03 12:00:00.0000000") },
                new InvoiceLine() { Id = 686, InvoiceId = 279, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new InvoiceLine() { Id = 687, InvoiceId = 279, StockItemId = 40, Description = "Developer joke mug - (hip, hip, array) (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new InvoiceLine() { Id = 699, InvoiceId = 285, StockItemId = 37, Description = "Developer joke mug - when your hammer is C++ (Black)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("3.90"), LineProfit = Decimal.Parse("17.00"), ExtendedPrice = Decimal.Parse("29.90"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new InvoiceLine() { Id = 701, InvoiceId = 285, StockItemId = 33, Description = "Developer joke mug - that's a hardware problem (Black)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("13.65"), LineProfit = Decimal.Parse("59.50"), ExtendedPrice = Decimal.Parse("104.65"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new InvoiceLine() { Id = 1102, InvoiceId = 418, StockItemId = 38, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("11.70"), LineProfit = Decimal.Parse("51.00"), ExtendedPrice = Decimal.Parse("89.70"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-08 12:00:00.0000000") },
                new InvoiceLine() { Id = 1104, InvoiceId = 418, StockItemId = 14, Description = "USB food flash drive - fortune cookie", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("9.60"), LineProfit = Decimal.Parse("40.00"), ExtendedPrice = Decimal.Parse("73.60"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-08 12:00:00.0000000") },
                new InvoiceLine() { Id = 1419, InvoiceId = 511, StockItemId = 16, Description = "DBA joke mug - mind if I join you? (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new InvoiceLine() { Id = 1425, InvoiceId = 512, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new InvoiceLine() { Id = 1426, InvoiceId = 513, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.50"), LineProfit = Decimal.Parse("85.00"), ExtendedPrice = Decimal.Parse("149.50"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new InvoiceLine() { Id = 1428, InvoiceId = 513, StockItemId = 28, Description = "DBA joke mug - two types of DBAs (White)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new InvoiceLine() { Id = 1429, InvoiceId = 513, StockItemId = 13, Description = "USB food flash drive - shrimp cocktail", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("43.20"), LineProfit = Decimal.Parse("180.00"), ExtendedPrice = Decimal.Parse("331.20"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new InvoiceLine() { Id = 1679, InvoiceId = 590, StockItemId = 35, Description = "Developer joke mug - fun was unexpected at this time (Black)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 1680, InvoiceId = 590, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("28.80"), LineProfit = Decimal.Parse("120.00"), ExtendedPrice = Decimal.Parse("220.80"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 1683, InvoiceId = 591, StockItemId = 42, Description = "Developer joke mug - understanding recursion requires understanding recursion (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("11.70"), LineProfit = Decimal.Parse("51.00"), ExtendedPrice = Decimal.Parse("89.70"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 1688, InvoiceId = 592, StockItemId = 47, Description = "Developer joke mug - a foo walks into a bar (Black)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("11.70"), LineProfit = Decimal.Parse("51.00"), ExtendedPrice = Decimal.Parse("89.70"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 1953, InvoiceId = 666, StockItemId = 16, Description = "DBA joke mug - mind if I join you? (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("13.65"), LineProfit = Decimal.Parse("59.50"), ExtendedPrice = Decimal.Parse("104.65"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-12 12:00:00.0000000") },
                new InvoiceLine() { Id = 2035, InvoiceId = 690, StockItemId = 43, Description = "Developer joke mug - understanding recursion requires understanding recursion (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-14 12:00:00.0000000") },
                new InvoiceLine() { Id = 2042, InvoiceId = 691, StockItemId = 14, Description = "USB food flash drive - fortune cookie", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("48.00"), LineProfit = Decimal.Parse("200.00"), ExtendedPrice = Decimal.Parse("368.00"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-14 12:00:00.0000000") },
                new InvoiceLine() { Id = 2280, InvoiceId = 762, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.20"), LineProfit = Decimal.Parse("80.00"), ExtendedPrice = Decimal.Parse("147.20"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 12:00:00.0000000") },
                new InvoiceLine() { Id = 2288, InvoiceId = 764, StockItemId = 1, Description = "USB missile launcher (Green)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.00"), LineProfit = Decimal.Parse("62.00"), ExtendedPrice = Decimal.Parse("115.00"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 12:00:00.0000000") },
                new InvoiceLine() { Id = 2592, InvoiceId = 855, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 2595, InvoiceId = 856, StockItemId = 24, Description = "DBA joke mug - I will get you in order (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 2596, InvoiceId = 856, StockItemId = 6, Description = "USB food flash drive - hot dog", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("38.40"), LineProfit = Decimal.Parse("160.00"), ExtendedPrice = Decimal.Parse("294.40"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 2597, InvoiceId = 856, StockItemId = 38, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("1.95"), LineProfit = Decimal.Parse("8.50"), ExtendedPrice = Decimal.Parse("14.95"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 2897, InvoiceId = 949, StockItemId = 38, Description = "Developer joke mug - inheritance is the OO way to become wealthy (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 2909, InvoiceId = 953, StockItemId = 50, Description = "Developer joke mug - old C developers never die (White)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 2910, InvoiceId = 953, StockItemId = 41, Description = "Developer joke mug - (hip, hip, array) (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3080, InvoiceId = 1001, StockItemId = 34, Description = "Developer joke mug - fun was unexpected at this time (White)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3083, InvoiceId = 1003, StockItemId = 45, Description = "Developer joke mug - there are 10 types of people in the world (Black)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3084, InvoiceId = 1003, StockItemId = 23, Description = "DBA joke mug - it depends (Black)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3086, InvoiceId = 1003, StockItemId = 25, Description = "DBA joke mug - I will get you in order (Black)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("13.65"), LineProfit = Decimal.Parse("59.50"), ExtendedPrice = Decimal.Parse("104.65"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3088, InvoiceId = 1004, StockItemId = 19, Description = "DBA joke mug - daaaaaa-ta (Black)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.50"), LineProfit = Decimal.Parse("85.00"), ExtendedPrice = Decimal.Parse("149.50"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3113, InvoiceId = 1012, StockItemId = 24, Description = "DBA joke mug - I will get you in order (White)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("9.75"), LineProfit = Decimal.Parse("42.50"), ExtendedPrice = Decimal.Parse("74.75"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3114, InvoiceId = 1012, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("13.65"), LineProfit = Decimal.Parse("59.50"), ExtendedPrice = Decimal.Parse("104.65"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 3697, InvoiceId = 1189, StockItemId = 30, Description = "Developer joke mug - Oct 31 = Dec 25 (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-23 12:00:00.0000000") },
                new InvoiceLine() { Id = 4102, InvoiceId = 1311, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("9.60"), LineProfit = Decimal.Parse("40.00"), ExtendedPrice = Decimal.Parse("73.60"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new InvoiceLine() { Id = 4109, InvoiceId = 1314, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("38.40"), LineProfit = Decimal.Parse("160.00"), ExtendedPrice = Decimal.Parse("294.40"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new InvoiceLine() { Id = 4119, InvoiceId = 1317, StockItemId = 20, Description = "DBA joke mug - you might be a DBA if (White)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("3.90"), LineProfit = Decimal.Parse("17.00"), ExtendedPrice = Decimal.Parse("29.90"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new InvoiceLine() { Id = 4121, InvoiceId = 1317, StockItemId = 28, Description = "DBA joke mug - two types of DBAs (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new InvoiceLine() { Id = 4122, InvoiceId = 1317, StockItemId = 25, Description = "DBA joke mug - I will get you in order (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new InvoiceLine() { Id = 4206, InvoiceId = 1343, StockItemId = 39, Description = "Developer joke mug - inheritance is the OO way to become wealthy (Black)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.50"), LineProfit = Decimal.Parse("85.00"), ExtendedPrice = Decimal.Parse("149.50"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-26 12:00:00.0000000") },
                new InvoiceLine() { Id = 4390, InvoiceId = 1396, StockItemId = 15, Description = "USB food flash drive - dessert 10 drive variety pack", PackageTypeId = 9, Quantity = 8, UnitPrice = Decimal.Parse("240.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("288.00"), LineProfit = Decimal.Parse("1212.00"), ExtendedPrice = Decimal.Parse("2208.00"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-28 12:00:00.0000000") },
                new InvoiceLine() { Id = 4503, InvoiceId = 1429, StockItemId = 15, Description = "USB food flash drive - dessert 10 drive variety pack", PackageTypeId = 9, Quantity = 6, UnitPrice = Decimal.Parse("240.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("216.00"), LineProfit = Decimal.Parse("909.00"), ExtendedPrice = Decimal.Parse("1656.00"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new InvoiceLine() { Id = 4504, InvoiceId = 1429, StockItemId = 23, Description = "DBA joke mug - it depends (Black)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.50"), LineProfit = Decimal.Parse("85.00"), ExtendedPrice = Decimal.Parse("149.50"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new InvoiceLine() { Id = 4567, InvoiceId = 1447, StockItemId = 4, Description = "USB food flash drive - sushi roll", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("33.60"), LineProfit = Decimal.Parse("140.00"), ExtendedPrice = Decimal.Parse("257.60"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new InvoiceLine() { Id = 4846, InvoiceId = 1528, StockItemId = 11, Description = "USB food flash drive - cookie", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("43.20"), LineProfit = Decimal.Parse("180.00"), ExtendedPrice = Decimal.Parse("331.20"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new InvoiceLine() { Id = 4847, InvoiceId = 1528, StockItemId = 10, Description = "USB food flash drive - chocolate bar", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("33.60"), LineProfit = Decimal.Parse("140.00"), ExtendedPrice = Decimal.Parse("257.60"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new InvoiceLine() { Id = 4848, InvoiceId = 1528, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new InvoiceLine() { Id = 4974, InvoiceId = 1563, StockItemId = 18, Description = "DBA joke mug - daaaaaa-ta (White)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new InvoiceLine() { Id = 5195, InvoiceId = 1625, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("14.40"), LineProfit = Decimal.Parse("60.00"), ExtendedPrice = Decimal.Parse("110.40"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-31 12:00:00.0000000") },
                new InvoiceLine() { Id = 5455, InvoiceId = 1704, StockItemId = 6, Description = "USB food flash drive - hot dog", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("48.00"), LineProfit = Decimal.Parse("200.00"), ExtendedPrice = Decimal.Parse("368.00"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-01 12:00:00.0000000") },
                new InvoiceLine() { Id = 5508, InvoiceId = 1718, StockItemId = 28, Description = "DBA joke mug - two types of DBAs (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("1.95"), LineProfit = Decimal.Parse("8.50"), ExtendedPrice = Decimal.Parse("14.95"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 12:00:00.0000000") },
                new InvoiceLine() { Id = 5579, InvoiceId = 1740, StockItemId = 1, Description = "USB missile launcher (Green)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.50"), LineProfit = Decimal.Parse("31.00"), ExtendedPrice = Decimal.Parse("57.50"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 12:00:00.0000000") },
                new InvoiceLine() { Id = 5595, InvoiceId = 1745, StockItemId = 36, Description = "Developer joke mug - when your hammer is C++ (White)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("9.75"), LineProfit = Decimal.Parse("42.50"), ExtendedPrice = Decimal.Parse("74.75"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-04 12:00:00.0000000") },
                new InvoiceLine() { Id = 5600, InvoiceId = 1746, StockItemId = 1, Description = "USB missile launcher (Green)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("3.75"), LineProfit = Decimal.Parse("15.50"), ExtendedPrice = Decimal.Parse("28.75"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-04 12:00:00.0000000") },
                new InvoiceLine() { Id = 5927, InvoiceId = 1841, StockItemId = 7, Description = "USB food flash drive - pizza slice", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("28.80"), LineProfit = Decimal.Parse("120.00"), ExtendedPrice = Decimal.Parse("220.80"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new InvoiceLine() { Id = 5933, InvoiceId = 1842, StockItemId = 39, Description = "Developer joke mug - inheritance is the OO way to become wealthy (Black)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new InvoiceLine() { Id = 5936, InvoiceId = 1843, StockItemId = 23, Description = "DBA joke mug - it depends (Black)", PackageTypeId = 7, Quantity = 2, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("3.90"), LineProfit = Decimal.Parse("17.00"), ExtendedPrice = Decimal.Parse("29.90"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new InvoiceLine() { Id = 5937, InvoiceId = 1843, StockItemId = 3, Description = "Office cube periscope (Black)", PackageTypeId = 7, Quantity = 30, UnitPrice = Decimal.Parse("18.50"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("83.25"), LineProfit = Decimal.Parse("217.50"), ExtendedPrice = Decimal.Parse("638.25"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new InvoiceLine() { Id = 6062, InvoiceId = 1876, StockItemId = 6, Description = "USB food flash drive - hot dog", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("48.00"), LineProfit = Decimal.Parse("200.00"), ExtendedPrice = Decimal.Parse("368.00"), LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-02-07 12:00:00.0000000") },
                new InvoiceLine() { Id = 6178, InvoiceId = 1911, StockItemId = 17, Description = "DBA joke mug - mind if I join you? (Black)", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("5.85"), LineProfit = Decimal.Parse("25.50"), ExtendedPrice = Decimal.Parse("44.85"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-02-08 12:00:00.0000000") },
                new InvoiceLine() { Id = 6179, InvoiceId = 1911, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("38.40"), LineProfit = Decimal.Parse("160.00"), ExtendedPrice = Decimal.Parse("294.40"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-02-08 12:00:00.0000000") },
                new InvoiceLine() { Id = 6378, InvoiceId = 1971, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("1.95"), LineProfit = Decimal.Parse("8.50"), ExtendedPrice = Decimal.Parse("14.95"), LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-02-09 12:00:00.0000000") },
                new InvoiceLine() { Id = 6529, InvoiceId = 2015, StockItemId = 33, Description = "Developer joke mug - that's a hardware problem (Black)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("11.70"), LineProfit = Decimal.Parse("51.00"), ExtendedPrice = Decimal.Parse("89.70"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 6530, InvoiceId = 2015, StockItemId = 47, Description = "Developer joke mug - a foo walks into a bar (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 6533, InvoiceId = 2015, StockItemId = 30, Description = "Developer joke mug - Oct 31 = Dec 25 (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("13.65"), LineProfit = Decimal.Parse("59.50"), ExtendedPrice = Decimal.Parse("104.65"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 6534, InvoiceId = 2016, StockItemId = 15, Description = "USB food flash drive - dessert 10 drive variety pack", PackageTypeId = 9, Quantity = 7, UnitPrice = Decimal.Parse("240.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("252.00"), LineProfit = Decimal.Parse("1060.50"), ExtendedPrice = Decimal.Parse("1932.00"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 6538, InvoiceId = 2018, StockItemId = 11, Description = "USB food flash drive - cookie", PackageTypeId = 7, Quantity = 3, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("14.40"), LineProfit = Decimal.Parse("60.00"), ExtendedPrice = Decimal.Parse("110.40"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new InvoiceLine() { Id = 6883, InvoiceId = 2118, StockItemId = 25, Description = "DBA joke mug - I will get you in order (Black)", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("7.80"), LineProfit = Decimal.Parse("34.00"), ExtendedPrice = Decimal.Parse("59.80"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-02-13 12:00:00.0000000") },
                new InvoiceLine() { Id = 7003, InvoiceId = 2157, StockItemId = 22, Description = "DBA joke mug - it depends (White)", PackageTypeId = 7, Quantity = 1, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("1.95"), LineProfit = Decimal.Parse("8.50"), ExtendedPrice = Decimal.Parse("14.95"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-14 12:00:00.0000000") },
                new InvoiceLine() { Id = 7185, InvoiceId = 2216, StockItemId = 43, Description = "Developer joke mug - understanding recursion requires understanding recursion (Black)", PackageTypeId = 7, Quantity = 8, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("15.60"), LineProfit = Decimal.Parse("68.00"), ExtendedPrice = Decimal.Parse("119.60"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-15 12:00:00.0000000") },
                new InvoiceLine() { Id = 7188, InvoiceId = 2217, StockItemId = 12, Description = "USB food flash drive - donut", PackageTypeId = 7, Quantity = 4, UnitPrice = Decimal.Parse("32.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.20"), LineProfit = Decimal.Parse("80.00"), ExtendedPrice = Decimal.Parse("147.20"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-15 12:00:00.0000000") },
                new InvoiceLine() { Id = 7311, InvoiceId = 2256, StockItemId = 46, Description = "Developer joke mug - a foo walks into a bar (White)", PackageTypeId = 7, Quantity = 10, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("19.50"), LineProfit = Decimal.Parse("85.00"), ExtendedPrice = Decimal.Parse("149.50"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 7312, InvoiceId = 2256, StockItemId = 29, Description = "DBA joke mug - two types of DBAs (Black)", PackageTypeId = 7, Quantity = 9, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("17.55"), LineProfit = Decimal.Parse("76.50"), ExtendedPrice = Decimal.Parse("134.55"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 7318, InvoiceId = 2258, StockItemId = 2, Description = "USB rocket launcher (Gray)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("25.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("18.75"), LineProfit = Decimal.Parse("77.50"), ExtendedPrice = Decimal.Parse("143.75"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 7321, InvoiceId = 2258, StockItemId = 20, Description = "DBA joke mug - you might be a DBA if (White)", PackageTypeId = 7, Quantity = 6, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("11.70"), LineProfit = Decimal.Parse("51.00"), ExtendedPrice = Decimal.Parse("89.70"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new InvoiceLine() { Id = 7474, InvoiceId = 2308, StockItemId = 42, Description = "Developer joke mug - understanding recursion requires understanding recursion (White)", PackageTypeId = 7, Quantity = 7, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("13.65"), LineProfit = Decimal.Parse("59.50"), ExtendedPrice = Decimal.Parse("104.65"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-18 12:00:00.0000000") },
                new InvoiceLine() { Id = 7521, InvoiceId = 2321, StockItemId = 34, Description = "Developer joke mug - fun was unexpected at this time (White)", PackageTypeId = 7, Quantity = 5, UnitPrice = Decimal.Parse("13.00"), TaxRate = Decimal.Parse("15.000"), TaxAmount = Decimal.Parse("9.75"), LineProfit = Decimal.Parse("42.50"), ExtendedPrice = Decimal.Parse("74.75"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-18 12:00:00.0000000") }
            };

            context.InvoiceLines.AddRange(invoiceLines);
            await context.SaveChangesAsync();
        }

        private static async Task SeedSpecialDealsAsync(WideWorldImportersContext context)
        {
            if (context.SpecialDeals.Any())
                return;

            var specialDeals = new List<SpecialDeal>()
            {
                new SpecialDeal() { Id = 1, BuyingGroupId = 2, StockGroupId = 7, DealDescription = "10% 1st qtr USB Wingtip", StartDate = DateTime.Parse("2016-01-01"), EndDate = DateTime.Parse("2016-03-31"), DiscountPercentage = Decimal.Parse("10.000"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2015-12-31 16:00:00.0000000") },
                new SpecialDeal() { Id = 2, BuyingGroupId = 1, StockGroupId = 7, DealDescription = "15% 2nd qtr USB Tailspin", StartDate = DateTime.Parse("2016-04-01"), EndDate = DateTime.Parse("2016-06-30"), DiscountPercentage = Decimal.Parse("15.000"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2015-12-31 16:00:00.0000000") }
            };

            context.SpecialDeals.AddRange(specialDeals);
            await context.SaveChangesAsync();
        }

        #endregion Sample Sales Entities

        #region Sample Warehouse Entities

        private static async Task SeedColdRoomTemperaturesAsync(WideWorldImportersContext context)
        {
            if (context.ColdRoomTemperatures.Any())
                return;

            var coldRoomTemperatures = new List<ColdRoomTemperature>()
            {
                new ColdRoomTemperature() { Id = 1, ColdRoomSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-05-31 23:59:24.0000000"), Temperature = decimal.Parse("3.72"), ValidFrom = DateTime.Parse("2016-05-31 23:59:24.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new ColdRoomTemperature() { Id = 2, ColdRoomSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-05-31 23:59:24.0000000"), Temperature = decimal.Parse("4.70"), ValidFrom = DateTime.Parse("2016-05-31 23:59:24.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new ColdRoomTemperature() { Id = 3, ColdRoomSensorNumber = 3, RecordedWhen = DateTime.Parse("2016-05-31 23:59:24.0000000"), Temperature = decimal.Parse("3.00"), ValidFrom = DateTime.Parse("2016-05-31 23:59:24.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new ColdRoomTemperature() { Id = 4, ColdRoomSensorNumber = 4, RecordedWhen = DateTime.Parse("2016-05-31 23:59:24.0000000"), Temperature = decimal.Parse("3.58"), ValidFrom = DateTime.Parse("2016-05-31 23:59:24.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
            };

            context.ColdRoomTemperatures.AddRange(coldRoomTemperatures);
            await context.SaveChangesAsync();
        }

        private static async Task SeedColorsAsync(WideWorldImportersContext context)
        {
            if (context.Colors.Any())
                return;

            var colors = new List<Color>()
            {
                new Color() { Id = 1, ColorName = "Azure", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 2, ColorName = "Beige", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 3, ColorName = "Black", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 4, ColorName = "Blue", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 5, ColorName = "Charcoal", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 6, ColorName = "Chartreuse", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 7, ColorName = "Cyan", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 8, ColorName = "Dark Brown", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 9, ColorName = "Dark Green", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 10, ColorName = "Fuchsia", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 11, ColorName = "Gold", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 12, ColorName = "Steel Gray", LastEditedBy = 9, ValidFrom = DateTime.Parse("2016-01-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 13, ColorName = "Hot Pink", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 14, ColorName = "Indigo", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 15, ColorName = "Ivory", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 16, ColorName = "Khaki", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 17, ColorName = "Lavender", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 18, ColorName = "Light Brown", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 19, ColorName = "Light Green", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 20, ColorName = "Maroon", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 21, ColorName = "Mauve", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 22, ColorName = "Navy Blue", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 23, ColorName = "Olive", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 24, ColorName = "Orange", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 25, ColorName = "Plum", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 26, ColorName = "Puce", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 27, ColorName = "Purple", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 28, ColorName = "Red", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 29, ColorName = "Royal Blue", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 30, ColorName = "Salmon", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 31, ColorName = "Silver", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 32, ColorName = "Tan", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 33, ColorName = "Teal", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 34, ColorName = "Wheat", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 35, ColorName = "White", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new Color() { Id = 36, ColorName = "Yellow", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.Colors.AddRange(colors);
            await context.SaveChangesAsync();
        }

        private static async Task SeedPackageTypesAsync(WideWorldImportersContext context)
        {
            if (context.PackageTypes.Any())
                return;

            var packageTypes = new List<PackageType>()
            {
                new PackageType() { Id = 1, PackageTypeName = "Bag", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 2, PackageTypeName = "Block", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 3, PackageTypeName = "Bottle", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 4, PackageTypeName = "Box", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 5, PackageTypeName = "Can", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 6, PackageTypeName = "Carton", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 7, PackageTypeName = "Each", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 8, PackageTypeName = "Kg", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 9, PackageTypeName = "Packet", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 10, PackageTypeName = "Pair", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 11, PackageTypeName = "Pallet", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 12, PackageTypeName = "Tray", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 13, PackageTypeName = "Tub ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new PackageType() { Id = 14, PackageTypeName = "Tube", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
            };

            context.PackageTypes.AddRange(packageTypes);
            await context.SaveChangesAsync();
        }

        private static async Task SeedStockGroupsAsync(WideWorldImportersContext context)
        {
            if (context.StockGroups.Any())
                return;

            var stockGroups = new List<StockGroup>()
            {
                new StockGroup() { Id = 1, StockGroupName = "Novelty Items", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 2, StockGroupName = "Clothing", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 3, StockGroupName = "Mugs", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 4, StockGroupName = "T-Shirts", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 5, StockGroupName = "Airline Novelties", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 6, StockGroupName = "Computing Novelties", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 7, StockGroupName = "USB Novelties", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 8, StockGroupName = "Furry Footwear", LastEditedBy = 9, ValidFrom = DateTime.Parse("2016-01-01 16:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 9, StockGroupName = "Toys", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockGroup() { Id = 10, StockGroupName = "Packaging Materials", LastEditedBy = 1, ValidFrom = DateTime.Parse("2013-01-01 00:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
           };

            context.StockGroups.AddRange(stockGroups);
            await context.SaveChangesAsync();
        }

        private static async Task SeedStockItemsAsync(WideWorldImportersContext context)
        {
            if (context.StockItems.Any())
                return;

            var stockItems = new List<StockItem>()
            {
                new StockItem { Id = 1, StockItemName = "USB missile launcher (Green)", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("25.00"), RecommendedRetailPrice = decimal.Parse("37.38"), TypicalWeightPerUnit = decimal.Parse("0.300"), MarketingComments = "Complete with 12 projectiles", CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"USB Powered\"] }", Tags = "[\"USB Powered\"]", SearchDetails = "USB missile launcher (Green) Complete with 12 projectiles", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 2, StockItemName = "USB rocket launcher (Gray)", SupplierId = 12, ColorId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("25.00"), RecommendedRetailPrice = decimal.Parse("37.38"), TypicalWeightPerUnit = decimal.Parse("0.300"), MarketingComments = "Complete with 12 projectiles", CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"USB Powered\"] }", Tags = "[\"USB Powered\"]", SearchDetails = "USB rocket launcher (Gray) Complete with 12 projectiles", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 3, StockItemName = "Office cube periscope (Black)", SupplierId = 12, ColorId = 3, UnitPackageId = 7, OuterPackageId = 6, LeadTimeDays = 14, QuantityPerOuter = 10, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("18.50"), RecommendedRetailPrice = decimal.Parse("27.66"), TypicalWeightPerUnit = decimal.Parse("0.250"), MarketingComments = "Need to see over your cubicle wall? This is just what's needed.", CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [] }", Tags = "[]", SearchDetails = "Office cube periscope (Black) Need to see over your cubicle wall? This is just what's needed.", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:00:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 4, StockItemName = "USB food flash drive - sushi roll", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"32GB\",\"USB Powered\"] }", Tags = "[\"32GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - sushi roll ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 5, StockItemName = "USB food flash drive - hamburger", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"16GB\",\"USB Powered\"] }", Tags = "[\"16GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - hamburger ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 6, StockItemName = "USB food flash drive - hot dog", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"32GB\",\"USB Powered\"] }", Tags = "[\"32GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - hot dog ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 7, StockItemName = "USB food flash drive - pizza slice", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"16GB\",\"USB Powered\"] }", Tags = "[\"16GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - pizza slice ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 8, StockItemName = "USB food flash drive - dim sum 10 drive variety pack", SupplierId = 12, UnitPackageId = 9, OuterPackageId = 9, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("240.00"), RecommendedRetailPrice = decimal.Parse("358.80"), TypicalWeightPerUnit = decimal.Parse("0.500"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"32GB\",\"USB Powered\"] }", Tags = "[\"32GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - dim sum 10 drive variety pack ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 9, StockItemName = "USB food flash drive - banana", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"16GB\",\"USB Powered\"] }", Tags = "[\"16GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - banana ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 10, StockItemName = "USB food flash drive - chocolate bar", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"32GB\",\"USB Powered\"] }", Tags = "[\"32GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - chocolate bar ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 11, StockItemName = "USB food flash drive - cookie", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"16GB\",\"USB Powered\"] }", Tags = "[\"16GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - cookie ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 12, StockItemName = "USB food flash drive - donut", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"32GB\",\"USB Powered\"] }", Tags = "[\"32GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - donut ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 13, StockItemName = "USB food flash drive - shrimp cocktail", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"16GB\",\"USB Powered\"] }", Tags = "[\"16GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - shrimp cocktail ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 14, StockItemName = "USB food flash drive - fortune cookie", SupplierId = 12, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("32.00"), RecommendedRetailPrice = decimal.Parse("47.84"), TypicalWeightPerUnit = decimal.Parse("0.050"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"32GB\",\"USB Powered\"] }", Tags = "[\"32GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - fortune cookie ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 15, StockItemName = "USB food flash drive - dessert 10 drive variety pack", SupplierId = 12, UnitPackageId = 9, OuterPackageId = 9, LeadTimeDays = 14, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("240.00"), RecommendedRetailPrice = decimal.Parse("358.80"), TypicalWeightPerUnit = decimal.Parse("0.500"), CustomFields = "{ \"CountryOfManufacture\": \"Japan\", \"Tags\": [\"16GB\",\"USB Powered\"] }", Tags = "[\"16GB\",\"USB Powered\"]", SearchDetails = "USB food flash drive - dessert 10 drive variety pack ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:11:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 16, StockItemName = "DBA joke mug - mind if I join you? (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - mind if I join you? (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 17, StockItemName = "DBA joke mug - mind if I join you? (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - mind if I join you? (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 18, StockItemName = "DBA joke mug - daaaaaa-ta (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - daaaaaa-ta (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 19, StockItemName = "DBA joke mug - daaaaaa-ta (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - daaaaaa-ta (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 20, StockItemName = "DBA joke mug - you might be a DBA if (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - you might be a DBA if (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 21, StockItemName = "DBA joke mug - you might be a DBA if (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - you might be a DBA if (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 22, StockItemName = "DBA joke mug - it depends (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - it depends (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 23, StockItemName = "DBA joke mug - it depends (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - it depends (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 24, StockItemName = "DBA joke mug - I will get you in order (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - I will get you in order (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 25, StockItemName = "DBA joke mug - I will get you in order (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - I will get you in order (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 26, StockItemName = "DBA joke mug - SELECT caffeine FROM mug (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - SELECT caffeine FROM mug (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 27, StockItemName = "DBA joke mug - SELECT caffeine FROM mug (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - SELECT caffeine FROM mug (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 28, StockItemName = "DBA joke mug - two types of DBAs (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - two types of DBAs (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 29, StockItemName = "DBA joke mug - two types of DBAs (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "DBA joke mug - two types of DBAs (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 30, StockItemName = "Developer joke mug - Oct 31 = Dec 25 (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - Oct 31 = Dec 25 (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 31, StockItemName = "Developer joke mug - Oct 31 = Dec 25 (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - Oct 31 = Dec 25 (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 32, StockItemName = "Developer joke mug - that's a hardware problem (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - that's a hardware problem (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 33, StockItemName = "Developer joke mug - that's a hardware problem (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - that's a hardware problem (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 34, StockItemName = "Developer joke mug - fun was unexpected at this time (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - fun was unexpected at this time (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 35, StockItemName = "Developer joke mug - fun was unexpected at this time (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - fun was unexpected at this time (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 36, StockItemName = "Developer joke mug - when your hammer is C++ (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - when your hammer is C++ (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 37, StockItemName = "Developer joke mug - when your hammer is C++ (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - when your hammer is C++ (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 38, StockItemName = "Developer joke mug - inheritance is the OO way to become wealthy (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - inheritance is the OO way to become wealthy (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 39, StockItemName = "Developer joke mug - inheritance is the OO way to become wealthy (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - inheritance is the OO way to become wealthy (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 40, StockItemName = "Developer joke mug - (hip, hip, array) (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - (hip, hip, array) (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 41, StockItemName = "Developer joke mug - (hip, hip, array) (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - (hip, hip, array) (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 42, StockItemName = "Developer joke mug - understanding recursion requires understanding recursion (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - understanding recursion requires understanding recursion (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 43, StockItemName = "Developer joke mug - understanding recursion requires understanding recursion (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - understanding recursion requires understanding recursion (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 44, StockItemName = "Developer joke mug - there are 10 types of people in the world (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - there are 10 types of people in the world (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 45, StockItemName = "Developer joke mug - there are 10 types of people in the world (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - there are 10 types of people in the world (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 46, StockItemName = "Developer joke mug - a foo walks into a bar (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - a foo walks into a bar (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 47, StockItemName = "Developer joke mug - a foo walks into a bar (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - a foo walks into a bar (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 48, StockItemName = "Developer joke mug - this code was generated by a tool (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - this code was generated by a tool (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 49, StockItemName = "Developer joke mug - this code was generated by a tool (Black)", SupplierId = 5, ColorId = 3, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - this code was generated by a tool (Black) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") },
                new StockItem { Id = 50, StockItemName = "Developer joke mug - old C developers never die (White)", SupplierId = 5, ColorId = 35, UnitPackageId = 7, OuterPackageId = 7, LeadTimeDays = 12, QuantityPerOuter = 1, IsChillerStock = false, TaxRate = decimal.Parse("15.000"), UnitPrice = decimal.Parse("13.00"), RecommendedRetailPrice = decimal.Parse("19.44"), TypicalWeightPerUnit = decimal.Parse("0.150"), CustomFields = "{ \"CountryOfManufacture\": \"China\", \"Tags\": [\"Comedy\"] }", Tags = "[\"Comedy\"]", SearchDetails = "Developer joke mug - old C developers never die (White) ", LastEditedBy = 1, ValidFrom = DateTime.Parse("2016-05-31 23:10:00.0000000"), ValidTo = DateTime.Parse("9999-12-31 23:59:59.9999999") }
           };

            context.StockItems.AddRange(stockItems);
            await context.SaveChangesAsync();
        }

        private static async Task SeedStockItemHoldingsAsync(WideWorldImportersContext context)
        {
            if (context.StockItemHoldings.Any())
                return;

            var stockItemHoldings = new List<StockItemHolding>()
            {
                new StockItemHolding() { StockItemId = 1, QuantityOnHand = 175609, BinLocation = "L-1", LastStocktakeQuantity = 171341, LastCostPrice = decimal.Parse("9.50"), ReorderLevel = 20, TargetStockLevel = 100, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 2, QuantityOnHand = 165538, BinLocation = "L-1", LastStocktakeQuantity = 161435, LastCostPrice = decimal.Parse("9.50"), ReorderLevel = 20, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 3, QuantityOnHand = 253190, BinLocation = "L-2", LastStocktakeQuantity = 246900, LastCostPrice = decimal.Parse("11.25"), ReorderLevel = 10, TargetStockLevel = 120, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 4, QuantityOnHand = 208109, BinLocation = "L-3", LastStocktakeQuantity = 202964, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 5, QuantityOnHand = 199064, BinLocation = "L-3", LastStocktakeQuantity = 194162, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 6, QuantityOnHand = 196995, BinLocation = "L-3", LastStocktakeQuantity = 192127, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 7, QuantityOnHand = 205295, BinLocation = "L-3", LastStocktakeQuantity = 200201, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 8, QuantityOnHand = 412277, BinLocation = "L-3", LastStocktakeQuantity = 401980, LastCostPrice = decimal.Parse("88.50"), ReorderLevel = 10, TargetStockLevel = 200, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 9, QuantityOnHand = 192749, BinLocation = "L-3", LastStocktakeQuantity = 187968, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 10, QuantityOnHand = 222572, BinLocation = "L-3", LastStocktakeQuantity = 217048, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 11, QuantityOnHand = 203148, BinLocation = "L-3", LastStocktakeQuantity = 198084, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 12, QuantityOnHand = 200406, BinLocation = "L-3", LastStocktakeQuantity = 195396, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 13, QuantityOnHand = 197453, BinLocation = "L-3", LastStocktakeQuantity = 192553, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 14, QuantityOnHand = 192358, BinLocation = "L-3", LastStocktakeQuantity = 187553, LastCostPrice = decimal.Parse("12.00"), ReorderLevel = 5, TargetStockLevel = 100, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 15, QuantityOnHand = 398290, BinLocation = "L-3", LastStocktakeQuantity = 388445, LastCostPrice = decimal.Parse("88.50"), ReorderLevel = 10, TargetStockLevel = 200, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 16, QuantityOnHand = 51836, BinLocation = "K-9", LastStocktakeQuantity = 50541, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 17, QuantityOnHand = 62428, BinLocation = "K-9", LastStocktakeQuantity = 60923, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 18, QuantityOnHand = 89207, BinLocation = "K-9", LastStocktakeQuantity = 86985, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 19, QuantityOnHand = 68800, BinLocation = "K-9", LastStocktakeQuantity = 67153, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 20, QuantityOnHand = 66722, BinLocation = "K-9", LastStocktakeQuantity = 65070, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 21, QuantityOnHand = 68683, BinLocation = "K-9", LastStocktakeQuantity = 67023, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 22, QuantityOnHand = 72747, BinLocation = "K-9", LastStocktakeQuantity = 70913, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 23, QuantityOnHand = 56283, BinLocation = "K-9", LastStocktakeQuantity = 54910, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 24, QuantityOnHand = 57083, BinLocation = "K-9", LastStocktakeQuantity = 55653, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 25, QuantityOnHand = 47106, BinLocation = "K-9", LastStocktakeQuantity = 45926, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 26, QuantityOnHand = 61071, BinLocation = "K-9", LastStocktakeQuantity = 59557, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 27, QuantityOnHand = 47747, BinLocation = "K-9", LastStocktakeQuantity = 46561, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 28, QuantityOnHand = 53851, BinLocation = "K-9", LastStocktakeQuantity = 52451, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 29, QuantityOnHand = 80978, BinLocation = "K-9", LastStocktakeQuantity = 78955, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 30, QuantityOnHand = 49248, BinLocation = "K-9", LastStocktakeQuantity = 48000, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 31, QuantityOnHand = 79604, BinLocation = "K-9", LastStocktakeQuantity = 77666, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 32, QuantityOnHand = 47512, BinLocation = "K-9", LastStocktakeQuantity = 46276, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 33, QuantityOnHand = 60005, BinLocation = "K-9", LastStocktakeQuantity = 58527, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 34, QuantityOnHand = 65583, BinLocation = "K-9", LastStocktakeQuantity = 63953, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 35, QuantityOnHand = 75803, BinLocation = "K-9", LastStocktakeQuantity = 74021, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 36, QuantityOnHand = 49459, BinLocation = "K-9", LastStocktakeQuantity = 48215, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 37, QuantityOnHand = 61318, BinLocation = "K-9", LastStocktakeQuantity = 59755, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 38, QuantityOnHand = 58431, BinLocation = "K-9", LastStocktakeQuantity = 57002, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 39, QuantityOnHand = 66353, BinLocation = "K-9", LastStocktakeQuantity = 64705, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 40, QuantityOnHand = 82969, BinLocation = "K-9", LastStocktakeQuantity = 80939, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 41, QuantityOnHand = 79138, BinLocation = "K-9", LastStocktakeQuantity = 77229, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 42, QuantityOnHand = 61075, BinLocation = "K-9", LastStocktakeQuantity = 59525, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 43, QuantityOnHand = 59174, BinLocation = "K-9", LastStocktakeQuantity = 57721, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 44, QuantityOnHand = 76861, BinLocation = "K-9", LastStocktakeQuantity = 74947, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") },
                new StockItemHolding() { StockItemId = 45, QuantityOnHand = 54430, BinLocation = "K-9", LastStocktakeQuantity = 53140, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 46, QuantityOnHand = 85243, BinLocation = "K-9", LastStocktakeQuantity = 83222, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 47, QuantityOnHand = 57652, BinLocation = "K-9", LastStocktakeQuantity = 56273, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 48, QuantityOnHand = 65779, BinLocation = "K-9", LastStocktakeQuantity = 64176, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 49, QuantityOnHand = 51545, BinLocation = "K-9", LastStocktakeQuantity = 50253, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2016-05-31 12:00:00.0000000") },
                new StockItemHolding() { StockItemId = 50, QuantityOnHand = 81085, BinLocation = "K-9", LastStocktakeQuantity = 79076, LastCostPrice = decimal.Parse("4.50"), ReorderLevel = 15, TargetStockLevel = 40, LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2016-05-31 07:00:00.0000000") }
            };

            context.StockItemHoldings.AddRange(stockItemHoldings);
            await context.SaveChangesAsync();
        }

        private static async Task SeedStockItemStockGroupsAsync(WideWorldImportersContext context)
        {
            if (context.StockItemStockGroups.Any())
                return;

            var stockItemStockGroups = new List<StockItemStockGroup>()
            {
                new StockItemStockGroup() { Id = 1, StockItemId = 1, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 2, StockItemId = 1, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 3, StockItemId = 1, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 4, StockItemId = 2, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 5, StockItemId = 2, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 6, StockItemId = 2, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 7, StockItemId = 3, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 8, StockItemId = 3, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 9, StockItemId = 4, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 10, StockItemId = 4, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 11, StockItemId = 4, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 12, StockItemId = 5, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 13, StockItemId = 5, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 14, StockItemId = 5, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 15, StockItemId = 6, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 16, StockItemId = 6, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 17, StockItemId = 6, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 18, StockItemId = 7, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 19, StockItemId = 7, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 20, StockItemId = 7, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 21, StockItemId = 8, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 22, StockItemId = 8, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 23, StockItemId = 8, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 24, StockItemId = 9, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 25, StockItemId = 9, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 26, StockItemId = 9, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 27, StockItemId = 10, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 28, StockItemId = 10, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 29, StockItemId = 10, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 30, StockItemId = 11, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 31, StockItemId = 11, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 32, StockItemId = 11, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 33, StockItemId = 12, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 34, StockItemId = 12, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 35, StockItemId = 12, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 36, StockItemId = 13, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 37, StockItemId = 13, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 38, StockItemId = 13, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 39, StockItemId = 14, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 40, StockItemId = 14, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 41, StockItemId = 14, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 42, StockItemId = 15, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 43, StockItemId = 15, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 44, StockItemId = 15, StockGroupId = 7, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 45, StockItemId = 16, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 46, StockItemId = 16, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 47, StockItemId = 16, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 48, StockItemId = 17, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 49, StockItemId = 17, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 50, StockItemId = 17, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 51, StockItemId = 18, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 52, StockItemId = 18, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 53, StockItemId = 18, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 54, StockItemId = 19, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 55, StockItemId = 19, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 56, StockItemId = 19, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 57, StockItemId = 20, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 58, StockItemId = 20, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 59, StockItemId = 20, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 60, StockItemId = 21, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 61, StockItemId = 21, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 62, StockItemId = 21, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 63, StockItemId = 22, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 64, StockItemId = 22, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 65, StockItemId = 22, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 66, StockItemId = 23, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 67, StockItemId = 23, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 68, StockItemId = 23, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 69, StockItemId = 24, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 70, StockItemId = 24, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 71, StockItemId = 24, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 72, StockItemId = 25, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 73, StockItemId = 25, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 74, StockItemId = 25, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 75, StockItemId = 26, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 76, StockItemId = 26, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 77, StockItemId = 26, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 78, StockItemId = 27, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 79, StockItemId = 27, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 80, StockItemId = 27, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 81, StockItemId = 28, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 82, StockItemId = 28, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 83, StockItemId = 28, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 84, StockItemId = 29, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 85, StockItemId = 29, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 86, StockItemId = 29, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 87, StockItemId = 30, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 88, StockItemId = 30, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 89, StockItemId = 30, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 90, StockItemId = 31, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 91, StockItemId = 31, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 92, StockItemId = 31, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 93, StockItemId = 32, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 94, StockItemId = 32, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 95, StockItemId = 32, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 96, StockItemId = 33, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 97, StockItemId = 33, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 98, StockItemId = 33, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 99, StockItemId = 34, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 100, StockItemId = 34, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 101, StockItemId = 34, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 102, StockItemId = 35, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 103, StockItemId = 35, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 104, StockItemId = 35, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 105, StockItemId = 36, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 106, StockItemId = 36, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 107, StockItemId = 36, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 108, StockItemId = 37, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 109, StockItemId = 37, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 110, StockItemId = 37, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 111, StockItemId = 38, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 112, StockItemId = 38, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 113, StockItemId = 38, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 114, StockItemId = 39, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 115, StockItemId = 39, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 116, StockItemId = 39, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 117, StockItemId = 40, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 118, StockItemId = 40, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 119, StockItemId = 40, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 120, StockItemId = 41, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 121, StockItemId = 41, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 122, StockItemId = 41, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 123, StockItemId = 42, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 124, StockItemId = 42, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 125, StockItemId = 42, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 126, StockItemId = 43, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 127, StockItemId = 43, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 128, StockItemId = 43, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 129, StockItemId = 44, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 130, StockItemId = 44, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 131, StockItemId = 44, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 132, StockItemId = 45, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 133, StockItemId = 45, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 134, StockItemId = 45, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 135, StockItemId = 46, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 136, StockItemId = 46, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 137, StockItemId = 46, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 138, StockItemId = 47, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 139, StockItemId = 47, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 140, StockItemId = 47, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 141, StockItemId = 48, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 142, StockItemId = 48, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 143, StockItemId = 48, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 144, StockItemId = 49, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 145, StockItemId = 49, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 146, StockItemId = 49, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 147, StockItemId = 50, StockGroupId = 6, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 148, StockItemId = 50, StockGroupId = 3, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") },
                new StockItemStockGroup() { Id = 149, StockItemId = 50, StockGroupId = 1, LastEditedBy = 1, LastEditedWhen = DateTime.Parse("2013-01-01 00:00:00.0000000") }
            };

            context.StockItemStockGroups.AddRange(stockItemStockGroups);
            await context.SaveChangesAsync();
        }

        private static async Task SeedStockItemTransactionsAsync(WideWorldImportersContext context)
        {
            if (context.StockItemTransactions.Any())
                return;

            var stockItemTransactions = new List<StockItemTransaction>()
            {
                new StockItemTransaction() { Id = 402, StockItemId = 36, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 92, TransactionOccurredWhen = DateTime.Parse("2013-01-02 12:00:00.0000000"), Quantity = Decimal.Parse("-12.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-02 12:00:00.0000000") },
                new StockItemTransaction() { Id = 403, StockItemId = 29, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 92, TransactionOccurredWhen = DateTime.Parse("2013-01-02 12:00:00.0000000"), Quantity = Decimal.Parse("-45.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-02 12:00:00.0000000") },
                new StockItemTransaction() { Id = 863, StockItemId = 50, TransactionTypeId = 10, CustomerId = 27, InvoiceId = 196, TransactionOccurredWhen = DateTime.Parse("2013-01-03 12:00:00.0000000"), Quantity = Decimal.Parse("-96.000"), LastEditedBy = 2, LastEditedWhen = DateTime.Parse("2013-01-03 12:00:00.0000000") },
                new StockItemTransaction() { Id = 1255, StockItemId = 50, TransactionTypeId = 10, CustomerId = 2, InvoiceId = 279, TransactionOccurredWhen = DateTime.Parse("2013-01-05 12:00:00.0000000"), Quantity = Decimal.Parse("-4.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new StockItemTransaction() { Id = 1256, StockItemId = 40, TransactionTypeId = 10, CustomerId = 2, InvoiceId = 279, TransactionOccurredWhen = DateTime.Parse("2013-01-05 12:00:00.0000000"), Quantity = Decimal.Parse("-4.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new StockItemTransaction() { Id = 1274, StockItemId = 37, TransactionTypeId = 10, CustomerId = 6, InvoiceId = 285, TransactionOccurredWhen = DateTime.Parse("2013-01-05 12:00:00.0000000"), Quantity = Decimal.Parse("-4.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new StockItemTransaction() { Id = 1276, StockItemId = 33, TransactionTypeId = 10, CustomerId = 6, InvoiceId = 285, TransactionOccurredWhen = DateTime.Parse("2013-01-05 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-05 12:00:00.0000000") },
                new StockItemTransaction() { Id = 1920, StockItemId = 38, TransactionTypeId = 10, CustomerId = 26, InvoiceId = 418, TransactionOccurredWhen = DateTime.Parse("2013-01-08 12:00:00.0000000"), Quantity = Decimal.Parse("-70.000"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-08 12:00:00.0000000") },
                new StockItemTransaction() { Id = 1922, StockItemId = 14, TransactionTypeId = 10, CustomerId = 26, InvoiceId = 418, TransactionOccurredWhen = DateTime.Parse("2013-01-08 12:00:00.0000000"), Quantity = Decimal.Parse("-20.000"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-01-08 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2378, StockItemId = 16, TransactionTypeId = 10, CustomerId = 8, InvoiceId = 511, TransactionOccurredWhen = DateTime.Parse("2013-01-10 12:00:00.0000000"), Quantity = Decimal.Parse("-1.000"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2385, StockItemId = 50, TransactionTypeId = 10, CustomerId = 14, InvoiceId = 512, TransactionOccurredWhen = DateTime.Parse("2013-01-10 12:00:00.0000000"), Quantity = Decimal.Parse("-3.000"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2387, StockItemId = 50, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 513, TransactionOccurredWhen = DateTime.Parse("2013-01-10 12:00:00.0000000"), Quantity = Decimal.Parse("-9.000"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2389, StockItemId = 28, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 513, TransactionOccurredWhen = DateTime.Parse("2013-01-10 12:00:00.0000000"), Quantity = Decimal.Parse("-3.000"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2390, StockItemId = 13, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 513, TransactionOccurredWhen = DateTime.Parse("2013-01-10 12:00:00.0000000"), Quantity = Decimal.Parse("-4.000"), LastEditedBy = 19, LastEditedWhen = DateTime.Parse("2013-01-10 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2747, StockItemId = 35, TransactionTypeId = 10, CustomerId = 5, InvoiceId = 590, TransactionOccurredWhen = DateTime.Parse("2013-01-11 12:00:00.0000000"), Quantity = Decimal.Parse("-2.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2748, StockItemId = 7, TransactionTypeId = 10, CustomerId = 5, InvoiceId = 590, TransactionOccurredWhen = DateTime.Parse("2013-01-11 12:00:00.0000000"), Quantity = Decimal.Parse("-8.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2752, StockItemId = 42, TransactionTypeId = 10, CustomerId = 8, InvoiceId = 591, TransactionOccurredWhen = DateTime.Parse("2013-01-11 12:00:00.0000000"), Quantity = Decimal.Parse("-7.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 2758, StockItemId = 47, TransactionTypeId = 10, CustomerId = 11, InvoiceId = 592, TransactionOccurredWhen = DateTime.Parse("2013-01-11 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 3119, StockItemId = 16, TransactionTypeId = 10, CustomerId = 22, InvoiceId = 666, TransactionOccurredWhen = DateTime.Parse("2013-01-12 12:00:00.0000000"), Quantity = Decimal.Parse("-80.000"), LastEditedBy = 5, LastEditedWhen = DateTime.Parse("2013-01-12 12:00:00.0000000") },
                new StockItemTransaction() { Id = 3256, StockItemId = 43, TransactionTypeId = 10, CustomerId = 11, InvoiceId = 690, TransactionOccurredWhen = DateTime.Parse("2013-01-14 12:00:00.0000000"), Quantity = Decimal.Parse("-2.000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-14 12:00:00.0000000") },
                new StockItemTransaction() { Id = 3264, StockItemId = 14, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 691, TransactionOccurredWhen = DateTime.Parse("2013-01-14 12:00:00.0000000"), Quantity = Decimal.Parse("-9.000"), LastEditedBy = 17, LastEditedWhen = DateTime.Parse("2013-01-14 12:00:00.0000000") },
                new StockItemTransaction() { Id = 3614, StockItemId = 7, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 762, TransactionOccurredWhen = DateTime.Parse("2013-01-15 12:00:00.0000000"), Quantity = Decimal.Parse("-70.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 12:00:00.0000000") },
                new StockItemTransaction() { Id = 3624, StockItemId = 1, TransactionTypeId = 10, CustomerId = 17, InvoiceId = 764, TransactionOccurredWhen = DateTime.Parse("2013-01-15 12:00:00.0000000"), Quantity = Decimal.Parse("-9.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-15 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4058, StockItemId = 50, TransactionTypeId = 10, CustomerId = 8, InvoiceId = 855, TransactionOccurredWhen = DateTime.Parse("2013-01-16 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4062, StockItemId = 24, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 856, TransactionOccurredWhen = DateTime.Parse("2013-01-16 12:00:00.0000000"), Quantity = Decimal.Parse("-8.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4063, StockItemId = 6, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 856, TransactionOccurredWhen = DateTime.Parse("2013-01-16 12:00:00.0000000"), Quantity = Decimal.Parse("-24.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4064, StockItemId = 38, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 856, TransactionOccurredWhen = DateTime.Parse("2013-01-16 12:00:00.0000000"), Quantity = Decimal.Parse("-25.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4498, StockItemId = 38, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 949, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-2.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4514, StockItemId = 50, TransactionTypeId = 10, CustomerId = 4, InvoiceId = 953, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-3.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4515, StockItemId = 41, TransactionTypeId = 10, CustomerId = 4, InvoiceId = 953, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-10.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4733, StockItemId = 34, TransactionTypeId = 10, CustomerId = 22, InvoiceId = 1001, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-4.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4738, StockItemId = 45, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 1003, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-8.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4739, StockItemId = 23, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 1003, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-9.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4741, StockItemId = 25, TransactionTypeId = 10, CustomerId = 16, InvoiceId = 1003, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-7.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4744, StockItemId = 19, TransactionTypeId = 10, CustomerId = 5, InvoiceId = 1004, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-60.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4777, StockItemId = 24, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 1012, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-5.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 4778, StockItemId = 22, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 1012, TransactionOccurredWhen = DateTime.Parse("2013-01-18 12:00:00.0000000"), Quantity = Decimal.Parse("-3.000"), LastEditedBy = 7, LastEditedWhen = DateTime.Parse("2013-01-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 5623, StockItemId = 30, TransactionTypeId = 10, CustomerId = 11, InvoiceId = 1189, TransactionOccurredWhen = DateTime.Parse("2013-01-23 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-23 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6200, StockItemId = 7, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 1311, TransactionOccurredWhen = DateTime.Parse("2013-01-25 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6210, StockItemId = 12, TransactionTypeId = 10, CustomerId = 23, InvoiceId = 1314, TransactionOccurredWhen = DateTime.Parse("2013-01-25 12:00:00.0000000"), Quantity = Decimal.Parse("-60.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6223, StockItemId = 20, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 1317, TransactionOccurredWhen = DateTime.Parse("2013-01-25 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6225, StockItemId = 28, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 1317, TransactionOccurredWhen = DateTime.Parse("2013-01-25 12:00:00.0000000"), Quantity = Decimal.Parse("-90.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6226, StockItemId = 25, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 1317, TransactionOccurredWhen = DateTime.Parse("2013-01-25 12:00:00.0000000"), Quantity = Decimal.Parse("-10.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-01-25 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6364, StockItemId = 39, TransactionTypeId = 10, CustomerId = 26, InvoiceId = 1343, TransactionOccurredWhen = DateTime.Parse("2013-01-26 12:00:00.0000000"), Quantity = Decimal.Parse("-7.000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-26 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6631, StockItemId = 15, TransactionTypeId = 10, CustomerId = 12, InvoiceId = 1396, TransactionOccurredWhen = DateTime.Parse("2013-01-28 12:00:00.0000000"), Quantity = Decimal.Parse("-1.000"), LastEditedBy = 4, LastEditedWhen = DateTime.Parse("2013-01-28 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6806, StockItemId = 15, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 1429, TransactionOccurredWhen = DateTime.Parse("2013-01-29 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6807, StockItemId = 23, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 1429, TransactionOccurredWhen = DateTime.Parse("2013-01-29 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new StockItemTransaction() { Id = 6888, StockItemId = 4, TransactionTypeId = 10, CustomerId = 21, InvoiceId = 1447, TransactionOccurredWhen = DateTime.Parse("2013-01-29 12:00:00.0000000"), Quantity = Decimal.Parse("-24.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-01-29 12:00:00.0000000") },
                new StockItemTransaction() { Id = 7284, StockItemId = 11, TransactionTypeId = 10, CustomerId = 13, InvoiceId = 1528, TransactionOccurredWhen = DateTime.Parse("2013-01-30 12:00:00.0000000"), Quantity = Decimal.Parse("-7.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new StockItemTransaction() { Id = 7285, StockItemId = 10, TransactionTypeId = 10, CustomerId = 13, InvoiceId = 1528, TransactionOccurredWhen = DateTime.Parse("2013-01-30 12:00:00.0000000"), Quantity = Decimal.Parse("-2.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new StockItemTransaction() { Id = 7286, StockItemId = 22, TransactionTypeId = 10, CustomerId = 13, InvoiceId = 1528, TransactionOccurredWhen = DateTime.Parse("2013-01-30 12:00:00.0000000"), Quantity = Decimal.Parse("-144.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new StockItemTransaction() { Id = 7447, StockItemId = 18, TransactionTypeId = 10, CustomerId = 18, InvoiceId = 1563, TransactionOccurredWhen = DateTime.Parse("2013-01-30 12:00:00.0000000"), Quantity = Decimal.Parse("-48.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-30 12:00:00.0000000") },
                new StockItemTransaction() { Id = 7762, StockItemId = 12, TransactionTypeId = 10, CustomerId = 26, InvoiceId = 1625, TransactionOccurredWhen = DateTime.Parse("2013-01-31 12:00:00.0000000"), Quantity = Decimal.Parse("-5.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-01-31 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8131, StockItemId = 6, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 1704, TransactionOccurredWhen = DateTime.Parse("2013-02-01 12:00:00.0000000"), Quantity = Decimal.Parse("-7.000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-01 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8223, StockItemId = 28, TransactionTypeId = 10, CustomerId = 27, InvoiceId = 1718, TransactionOccurredWhen = DateTime.Parse("2013-02-02 12:00:00.0000000"), Quantity = Decimal.Parse("-80.000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8316, StockItemId = 1, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 1740, TransactionOccurredWhen = DateTime.Parse("2013-02-02 12:00:00.0000000"), Quantity = Decimal.Parse("-75.000"), LastEditedBy = 11, LastEditedWhen = DateTime.Parse("2013-02-02 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8365, StockItemId = 36, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 1745, TransactionOccurredWhen = DateTime.Parse("2013-02-04 12:00:00.0000000"), Quantity = Decimal.Parse("-24.000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-04 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8371, StockItemId = 1, TransactionTypeId = 10, CustomerId = 27, InvoiceId = 1746, TransactionOccurredWhen = DateTime.Parse("2013-02-04 12:00:00.0000000"), Quantity = Decimal.Parse("-10.000"), LastEditedBy = 8, LastEditedWhen = DateTime.Parse("2013-02-04 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8836, StockItemId = 7, TransactionTypeId = 10, CustomerId = 17, InvoiceId = 1841, TransactionOccurredWhen = DateTime.Parse("2013-02-06 12:00:00.0000000"), Quantity = Decimal.Parse("-8.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8843, StockItemId = 39, TransactionTypeId = 10, CustomerId = 18, InvoiceId = 1842, TransactionOccurredWhen = DateTime.Parse("2013-02-06 12:00:00.0000000"), Quantity = Decimal.Parse("-5.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8847, StockItemId = 23, TransactionTypeId = 10, CustomerId = 22, InvoiceId = 1843, TransactionOccurredWhen = DateTime.Parse("2013-02-06 12:00:00.0000000"), Quantity = Decimal.Parse("-36.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new StockItemTransaction() { Id = 8848, StockItemId = 3, TransactionTypeId = 10, CustomerId = 22, InvoiceId = 1843, TransactionOccurredWhen = DateTime.Parse("2013-02-06 12:00:00.0000000"), Quantity = Decimal.Parse("-3.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-06 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9025, StockItemId = 6, TransactionTypeId = 10, CustomerId = 19, InvoiceId = 1876, TransactionOccurredWhen = DateTime.Parse("2013-02-07 12:00:00.0000000"), Quantity = Decimal.Parse("-216.000"), LastEditedBy = 14, LastEditedWhen = DateTime.Parse("2013-02-07 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9197, StockItemId = 17, TransactionTypeId = 10, CustomerId = 2, InvoiceId = 1911, TransactionOccurredWhen = DateTime.Parse("2013-02-08 12:00:00.0000000"), Quantity = Decimal.Parse("-20.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-02-08 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9198, StockItemId = 12, TransactionTypeId = 10, CustomerId = 2, InvoiceId = 1911, TransactionOccurredWhen = DateTime.Parse("2013-02-08 12:00:00.0000000"), Quantity = Decimal.Parse("-7.000"), LastEditedBy = 16, LastEditedWhen = DateTime.Parse("2013-02-08 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9479, StockItemId = 22, TransactionTypeId = 10, CustomerId = 13, InvoiceId = 1971, TransactionOccurredWhen = DateTime.Parse("2013-02-09 12:00:00.0000000"), Quantity = Decimal.Parse("-10.000"), LastEditedBy = 18, LastEditedWhen = DateTime.Parse("2013-02-09 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9705, StockItemId = 33, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 2015, TransactionOccurredWhen = DateTime.Parse("2013-02-11 12:00:00.0000000"), Quantity = Decimal.Parse("-120.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9706, StockItemId = 47, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 2015, TransactionOccurredWhen = DateTime.Parse("2013-02-11 12:00:00.0000000"), Quantity = Decimal.Parse("-120.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9709, StockItemId = 30, TransactionTypeId = 10, CustomerId = 3, InvoiceId = 2015, TransactionOccurredWhen = DateTime.Parse("2013-02-11 12:00:00.0000000"), Quantity = Decimal.Parse("-8.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9711, StockItemId = 15, TransactionTypeId = 10, CustomerId = 4, InvoiceId = 2016, TransactionOccurredWhen = DateTime.Parse("2013-02-11 12:00:00.0000000"), Quantity = Decimal.Parse("-5.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 9717, StockItemId = 11, TransactionTypeId = 10, CustomerId = 24, InvoiceId = 2018, TransactionOccurredWhen = DateTime.Parse("2013-02-11 12:00:00.0000000"), Quantity = Decimal.Parse("-8.000"), LastEditedBy = 15, LastEditedWhen = DateTime.Parse("2013-02-11 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10206, StockItemId = 25, TransactionTypeId = 10, CustomerId = 7, InvoiceId = 2118, TransactionOccurredWhen = DateTime.Parse("2013-02-13 12:00:00.0000000"), Quantity = Decimal.Parse("-120.000"), LastEditedBy = 13, LastEditedWhen = DateTime.Parse("2013-02-13 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10389, StockItemId = 22, TransactionTypeId = 10, CustomerId = 21, InvoiceId = 2157, TransactionOccurredWhen = DateTime.Parse("2013-02-14 12:00:00.0000000"), Quantity = Decimal.Parse("-9.000"), LastEditedBy = 9, LastEditedWhen = DateTime.Parse("2013-02-14 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10663, StockItemId = 43, TransactionTypeId = 10, CustomerId = 17, InvoiceId = 2216, TransactionOccurredWhen = DateTime.Parse("2013-02-15 12:00:00.0000000"), Quantity = Decimal.Parse("-4.000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-15 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10667, StockItemId = 12, TransactionTypeId = 10, CustomerId = 24, InvoiceId = 2217, TransactionOccurredWhen = DateTime.Parse("2013-02-15 12:00:00.0000000"), Quantity = Decimal.Parse("-150.000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-15 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10848, StockItemId = 46, TransactionTypeId = 10, CustomerId = 5, InvoiceId = 2256, TransactionOccurredWhen = DateTime.Parse("2013-02-16 12:00:00.0000000"), Quantity = Decimal.Parse("-3.000"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10849, StockItemId = 29, TransactionTypeId = 10, CustomerId = 5, InvoiceId = 2256, TransactionOccurredWhen = DateTime.Parse("2013-02-16 12:00:00.0000000"), Quantity = Decimal.Parse("-6.000"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10857, StockItemId = 2, TransactionTypeId = 10, CustomerId = 18, InvoiceId = 2258, TransactionOccurredWhen = DateTime.Parse("2013-02-16 12:00:00.0000000"), Quantity = Decimal.Parse("-100.000"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 10860, StockItemId = 20, TransactionTypeId = 10, CustomerId = 18, InvoiceId = 2258, TransactionOccurredWhen = DateTime.Parse("2013-02-16 12:00:00.0000000"), Quantity = Decimal.Parse("-50.000"), LastEditedBy = 3, LastEditedWhen = DateTime.Parse("2013-02-16 12:00:00.0000000") },
                new StockItemTransaction() { Id = 11090, StockItemId = 42, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 2308, TransactionOccurredWhen = DateTime.Parse("2013-02-18 12:00:00.0000000"), Quantity = Decimal.Parse("-30.000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-18 12:00:00.0000000") },
                new StockItemTransaction() { Id = 11150, StockItemId = 34, TransactionTypeId = 10, CustomerId = 25, InvoiceId = 2321, TransactionOccurredWhen = DateTime.Parse("2013-02-18 12:00:00.0000000"), Quantity = Decimal.Parse("-80.000"), LastEditedBy = 20, LastEditedWhen = DateTime.Parse("2013-02-18 12:00:00.0000000") }
            };

            context.StockItemTransactions.AddRange(stockItemTransactions);
            await context.SaveChangesAsync();
        }

        private static async Task SeedVehicleTemperaturesAsync(WideWorldImportersContext context)
        {
            if (context.VehicleTemperatures.Any())
                return;

            var coldRoomTemperatures = new List<VehicleTemperature>()
            {
                new VehicleTemperature() { Id = 1, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:00:00.0000000"), Temperature = decimal.Parse("3.58"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-108.2786387,59.5134034] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:00:00\",\"temp\":3.58}} ]" },
                new VehicleTemperature() { Id = 2, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:00:00.0000000"), Temperature = decimal.Parse("3.40"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-92.1248384,51.8866232] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:00:00\",\"temp\":3.40}} ]" },
                new VehicleTemperature() { Id = 3, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:00:34.0000000"), Temperature = decimal.Parse("4.85"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-112.5546433,60.7657355] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:00:34\",\"temp\":4.85}} ]" },
                new VehicleTemperature() { Id = 4, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:00:34.0000000"), Temperature = decimal.Parse("4.98"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-122.3288252,45.0101917] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:00:34\",\"temp\":4.98}} ]" },
                new VehicleTemperature() { Id = 5, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:02:20.0000000"), Temperature = decimal.Parse("3.78"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-117.7259801,43.1057813] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:02:20\",\"temp\":3.78}} ]" },
                new VehicleTemperature() { Id = 6, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:02:20.0000000"), Temperature = decimal.Parse("4.03"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-114.9638030,51.4023820] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:02:20\",\"temp\":4.03}} ]" },
                new VehicleTemperature() { Id = 7, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:02:47.0000000"), Temperature = decimal.Parse("4.15"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-90.6607839,51.0619159] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:02:47\",\"temp\":4.15}} ]" },
                new VehicleTemperature() { Id = 8, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:02:47.0000000"), Temperature = decimal.Parse("3.55"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-89.8355078,57.6983808] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:02:47\",\"temp\":3.55}} ]" },
                new VehicleTemperature() { Id = 9, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:05:39.0000000"), Temperature = decimal.Parse("3.02"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-108.8301628,59.1093175] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:05:39\",\"temp\":3.02}} ]" },
                new VehicleTemperature() { Id = 10, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:05:39.0000000"), Temperature = decimal.Parse("4.51"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-84.8592504,64.8892553] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:05:39\",\"temp\":4.51}} ]" },
                new VehicleTemperature() { Id = 11, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:07:11.0000000"), Temperature = decimal.Parse("3.82"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-98.6265782,57.2244817] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:07:11\",\"temp\":3.82}} ]" },
                new VehicleTemperature() { Id = 12, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:07:11.0000000"), Temperature = decimal.Parse("4.86"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-121.1942135,49.1398534] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:07:11\",\"temp\":4.86}} ]" },
                new VehicleTemperature() { Id = 13, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:10:54.0000000"), Temperature = decimal.Parse("4.94"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-102.3044090,52.8779368] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:10:54\",\"temp\":4.94}} ]" },
                new VehicleTemperature() { Id = 14, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:10:54.0000000"), Temperature = decimal.Parse("4.69"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-89.2635914,64.4459722] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:10:54\",\"temp\":4.69}} ]" },
                new VehicleTemperature() { Id = 15, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:11:41.0000000"), Temperature = decimal.Parse("4.07"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-112.3984301,61.7703475] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:11:41\",\"temp\":4.07}} ]" },
                new VehicleTemperature() { Id = 16, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:11:41.0000000"), Temperature = decimal.Parse("3.08"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-117.5467338,45.3574987] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:11:41\",\"temp\":3.08}} ]" },
                new VehicleTemperature() { Id = 17, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:13:58.0000000"), Temperature = decimal.Parse("4.88"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-117.1831948,42.1483790] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:13:58\",\"temp\":4.88}} ]" },
                new VehicleTemperature() { Id = 18, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:13:58.0000000"), Temperature = decimal.Parse("3.50"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-87.6797954,64.1014044] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:13:58\",\"temp\":3.50}} ]" },
                new VehicleTemperature() { Id = 19, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:16:17.0000000"), Temperature = decimal.Parse("3.54"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-119.9579362,46.2029018] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:16:17\",\"temp\":3.54}} ]" },
                new VehicleTemperature() { Id = 20, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:16:17.0000000"), Temperature = decimal.Parse("3.07"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-104.6734906,51.1437009] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:16:17\",\"temp\":3.07}} ]" },
                new VehicleTemperature() { Id = 21, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:19:00.0000000"), Temperature = decimal.Parse("3.24"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-121.5166273,38.3290927] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:19:00\",\"temp\":3.24}} ]" },
                new VehicleTemperature() { Id = 22, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:19:00.0000000"), Temperature = decimal.Parse("4.58"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-120.3056917,63.9018054] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:19:00\",\"temp\":4.58}} ]" },
                new VehicleTemperature() { Id = 23, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:22:44.0000000"), Temperature = decimal.Parse("3.96"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-115.5083711,67.0191646] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:22:44\",\"temp\":3.96}} ]" },
                new VehicleTemperature() { Id = 24, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:22:44.0000000"), Temperature = decimal.Parse("4.43"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-93.5633050,44.8602597] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:22:44\",\"temp\":4.43}} ]" },
                new VehicleTemperature() { Id = 25, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:24:42.0000000"), Temperature = decimal.Parse("3.41"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-100.2410214,55.8793539] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:24:42\",\"temp\":3.41}} ]" },
                new VehicleTemperature() { Id = 26, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:24:42.0000000"), Temperature = decimal.Parse("3.87"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-84.2666354,52.0926978] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:24:42\",\"temp\":3.87}} ]" },
                new VehicleTemperature() { Id = 27, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:26:04.0000000"), Temperature = decimal.Parse("4.61"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-107.5888624,52.5822064] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:26:04\",\"temp\":4.61}} ]" },
                new VehicleTemperature() { Id = 28, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:26:04.0000000"), Temperature = decimal.Parse("4.82"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-93.7052094,59.8540921] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:26:04\",\"temp\":4.82}} ]" },
                new VehicleTemperature() { Id = 29, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:28:23.0000000"), Temperature = decimal.Parse("3.51"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-90.6930849,49.3431003] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:28:23\",\"temp\":3.51}} ]" },
                new VehicleTemperature() { Id = 30, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:28:23.0000000"), Temperature = decimal.Parse("3.03"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-97.3958190,39.8409708] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:28:23\",\"temp\":3.03}} ]" },
                new VehicleTemperature() { Id = 31, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:31:56.0000000"), Temperature = decimal.Parse("3.23"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-113.9771312,61.1309127] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:31:56\",\"temp\":3.23}} ]" },
                new VehicleTemperature() { Id = 32, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:31:56.0000000"), Temperature = decimal.Parse("4.28"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-116.9886835,60.7491696] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:31:56\",\"temp\":4.28}} ]" },
                new VehicleTemperature() { Id = 33, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:36:18.0000000"), Temperature = decimal.Parse("3.01"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-93.4371620,61.0665203] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:36:18\",\"temp\":3.01}} ]" },
                new VehicleTemperature() { Id = 34, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:36:18.0000000"), Temperature = decimal.Parse("4.19"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-101.7254614,60.2189126] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:36:18\",\"temp\":4.19}} ]" },
                new VehicleTemperature() { Id = 35, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:36:36.0000000"), Temperature = decimal.Parse("4.07"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-112.8314638,42.3706800] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:36:36\",\"temp\":4.07}} ]" },
                new VehicleTemperature() { Id = 36, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:36:36.0000000"), Temperature = decimal.Parse("4.06"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-122.2545724,54.7713258] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:36:36\",\"temp\":4.06}} ]" },
                new VehicleTemperature() { Id = 37, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:38:44.0000000"), Temperature = decimal.Parse("3.31"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-110.1870647,60.5667785] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:38:44\",\"temp\":3.31}} ]" },
                new VehicleTemperature() { Id = 38, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:38:44.0000000"), Temperature = decimal.Parse("4.41"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-120.3820608,66.7640033] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:38:44\",\"temp\":4.41}} ]" },
                new VehicleTemperature() { Id = 39, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:42:45.0000000"), Temperature = decimal.Parse("3.46"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-90.1461532,57.9140509] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:42:45\",\"temp\":3.46}} ]" },
                new VehicleTemperature() { Id = 40, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:42:45.0000000"), Temperature = decimal.Parse("3.93"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-92.7556516,63.9784587] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:42:45\",\"temp\":3.93}} ]" },
                new VehicleTemperature() { Id = 41, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:44:41.0000000"), Temperature = decimal.Parse("4.75"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-101.9278217,59.5866602] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:44:41\",\"temp\":4.75}} ]" },
                new VehicleTemperature() { Id = 42, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:44:41.0000000"), Temperature = decimal.Parse("3.98"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-87.1048989,41.4015073] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:44:41\",\"temp\":3.98}} ]" },
                new VehicleTemperature() { Id = 43, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:45:01.0000000"), Temperature = decimal.Parse("4.68"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-95.3308318,61.3934328] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:45:01\",\"temp\":4.68}} ]" },
                new VehicleTemperature() { Id = 44, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:45:01.0000000"), Temperature = decimal.Parse("4.97"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-108.3426894,45.4919789] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:45:01\",\"temp\":4.97}} ]" },
                new VehicleTemperature() { Id = 45, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:49:43.0000000"), Temperature = decimal.Parse("3.89"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-92.1614801,62.0743432] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:49:43\",\"temp\":3.89}} ]" },
                new VehicleTemperature() { Id = 46, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:49:43.0000000"), Temperature = decimal.Parse("4.58"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-98.8191873,45.7733131] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:49:43\",\"temp\":4.58}} ]" },
                new VehicleTemperature() { Id = 47, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:53:34.0000000"), Temperature = decimal.Parse("3.94"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-91.7398041,37.8196953] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:53:34\",\"temp\":3.94}} ]" },
                new VehicleTemperature() { Id = 48, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:53:34.0000000"), Temperature = decimal.Parse("4.84"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-104.4125391,42.3530492] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:53:34\",\"temp\":4.84}} ]" },
                new VehicleTemperature() { Id = 49, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 1, RecordedWhen = DateTime.Parse("2016-01-01 07:54:26.0000000"), Temperature = decimal.Parse("3.81"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-94.6071818,46.6299791] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"1,\"when\":\"2016-01-01T07:54:26\",\"temp\":3.81}} ]" },
                new VehicleTemperature() { Id = 50, VehicleRegistration = "WWI-321-A", ChillerSensorNumber = 2, RecordedWhen = DateTime.Parse("2016-01-01 07:54:26.0000000"), Temperature = decimal.Parse("4.30"), IsCompressed = false, FullSensorData = "{\"Recordings\": [{\"type\":\"Feature\", \"geometry\": {\"type\":\"Point\", \"coordinates\":[-87.3922987,46.0843495] }, \"properties\":{\"rego\":\"WWI-321-A\",\"sensor\":\"2,\"when\":\"2016-01-01T07:54:26\",\"temp\":4.30}} ]" }
            };

            context.VehicleTemperatures.AddRange(coldRoomTemperatures);
            await context.SaveChangesAsync();
        }

        #endregion Sample Warehouse Entities
    }
}